<?xml version="1.0"?>
<doc>
    <assembly>
        "Rimage.Rapid.Api"
    </assembly>
    <members>
        <member name="M:Rimage.Rapid.Dotnet.Api.SingleConnectionSession.Disconnect">
            <summary>
	Closes the single existing connection to the messaging server.
</summary>
            <remarks>
	The Connection object is not deleted upon a disconnect, but Connection.Connected property will return false.
</remarks>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of an internal or a network problem.</exception>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.SingleConnectionSession.GetConnection">
            <summary>
	Returns the internal single instance of the Connection object.
</summary>
            <returns>A reference to the Connection object for this session.</returns>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.SingleConnectionSession.Connected">
            <summary>
	Checks to see if a messaging server connection exists and is active.
	This is a convenient method to check connection status without having to acquire the Connection object.
</summary>
            <returns>true if the connection is still alive, false otherwise.</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.SingleConnectionSession.StopServer(System.String)">
            <summary>
	Shuts down an existing online server.
	This is a convenient method to shutdown an online server object without having to acquire the Server object.
</summary>
            <param name="serverId">ID of the server to shut down.</param>
            <returns>void</returns>
            <remarks>
	If a server with the specified ID does not exist, this function does nothing.
</remarks>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.SingleConnectionSession.StartServer(System.String,Rimage.Rapid.Dotnet.Api.ServerType)">
            <summary>
	Starts a Rimage sever on a specific computer, specified by server type. 
	This is a convenient method to start up a Server object without having to acquire the Connection object.
</summary>
            <remarks>
	This method is asynchronous - it returns as soon as it initiates the server start process, which could take a while. 
	To check if the intended server actually starts, use ISessionStatusListener to monitor server state.
	If a server with the specific host name and server type is already running, this method does nothing.
</remarks>
            <param name="serverHost">Name of the computer on which to start the server.</param>
            <param name="serverType">Type of the server to start - ProductionServerType or ImagingServerType.</param>
            <returns>void</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">
	Thrown when the server name is invalid, the server does not exist, or the server is in an error state.
</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.SingleConnectionSession.GetServer(System.String)">
            <summary>
	Retrieves a reference to a specific Server object with the given ID. This is a convenient method to get a Server object without having to acquire the Connection object.
</summary>
            <param name="serverId">Server ID for the intended server.</param>
            <returns>The intended Server object if successful, NULL if no such server exists.
</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown if the server ID is invalid.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.SingleConnectionSession.RecoverDurableJobsOfClient(System.String)">
            <summary>
	Recovers all previously in process jobs, for all connections of the specified clientId.
</summary>
            <param name="clientId">The clientId of the recovered jobs that were processed. If the clientId is NULL or empty, 
	and there has never been a connection, the effect of calling RecoverDurableJobsOfClient() is the same as
	calling RecoverDurableJobs(), all jobs of all clilents and all connections are recovered.
</param>
            <returns>Enumerator of recovered job ids for all connections of the specified clientId.</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.SingleConnectionSession.RecoverDurableJobs">
            <summary>
	Recovers all previously in process jobs of all connections and all clients.
</summary>
            <remarks>
	This method recovers job statuses for jobs that were in process when the caller application
	either shutdown or disconnected. 
</remarks>
            <returns>Enumerator of recovered job ids.</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.SingleConnectionSession.SubmitDurableJob(Rimage.Rapid.Dotnet.Api.Job)">
            <summary>
	Submits a job for processing, with the option of recovering statuses in case of a shutdown.
</summary>
            <remarks>
	This is a convenient method for client to submit a Job without having to acquire the Connection object.
	Rapid API validates parameters set on the job for correctness before it sends the job to the servers for processing. 
</remarks>
            <param name="job">Created job object through various Job creation methods of ClientSession.</param>
            <returns>void</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">
	Thrown in one of the following cases:
	No valid connection, job object is null, the job is already in process, job validation fails, or internal error.
</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.SingleConnectionSession.SubmitJob(Rimage.Rapid.Dotnet.Api.Job)">
            <summary>
	Submits a job for processing.
</summary>
            <remarks>
	This is a convenient method for client to submit a Job without having to acquire the Connection object.
	Rapid API validates parameters set on the job for correctness before it sends the job to the servers for processing. 
</remarks>
            <param name="job">Created job object through various Job creation methods of ClientSession.</param>
            <returns>void</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in one of the following cases:
	no valid connection, job object is NULL, the job is already in process, job validation fails, or internal error.
</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.SingleConnectionSession.GetInstance">
            <summary>
	Static method which creates or returns an already created instance of a SingleConnectionSession class. 
</summary>
            <remarks>
	Caller should not delete this object, Rapid API will destroy the object at DLL unload time. 
</remarks>
            <returns>The single instance of SingleConnectionSession for the application.</returns>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.SingleConnectionSession">
            <summary>
	The only subclass of ClientSession. This class encapsulates the "single messaging connection at a time" paradigm.
</summary>
            <remarks>
                <para>
	This class is never instantiated by the caller directly. Call the static method SingleConnectionSession.GetInstance()
	to get an instance of a session.
</para>
                <para>
	Rimage Corporation, Copyright (c) 2007 - 2012
</para>
            </remarks>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ClientSession.SetXmlOriginatorComment(System.String)">
            <summary>
	Setting comments into the XML strings generated by RAPID. If set, the string will be placed
	right after the XML start and before the RAPID default comment.
</summary>
            <param name="szComment">Comment to add.</param>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ClientSession.GetDurableJobDirectory">
            <summary>
	Gets the directory where information about durable jobs is stored.
</summary>
            <returns>Full path to the durable job directory.</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ClientSession.SetDurableJobDirectory(System.String)">
            <summary>
	Optionally sets a directory where information about durable jobs is stored.
</summary>
            <remarks>
	A default directory is used if this method is never called. 
</remarks>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ClientSession.Disconnect">
            <summary>
	Disconnects from the messaging server this session is connected to.
</summary>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of an internal or a network problem.</exception>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ClientSession.RemoveAcknowledgedServerAlerts">
            <summary>
	Removes acknowledged, or not active, ServerAlert objects from Rapid APIs internal lists. 
</summary>
            <remarks>
	Main reason for calling this method is to free application's memory.
</remarks>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ClientSession.RemoveOfflineServers">
            <summary>
	Removes offline Server objects from Rapid APIs internal lists. 
</summary>
            <remarks>
	Main reason for calling this method is to free application's memory.
</remarks>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ClientSession.GetServerAlert(System.String,System.String)">
            <summary>
	Retrieves a specific ServerAlert object with the given server ID and alert ID.
</summary>
            <param name="serverId">Server ID for the server this alert is for.</param>
            <param name="alertId">Alert ID for the specific server alert.</param>
            <returns>A reference to a ServerAlert object if successful, null if no such ServerAlert exists
for the given server ID and alert ID.</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown if the server ID and/or alert ID is invalid.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ClientSession.GetServer(System.String,System.String)">
            <summary>
	Retrieves a specific server object with the given connection ID and server ID.
</summary>
            <param name="connectionId">Connection ID for the intended server. This identifies the connection this server is active on, obtained by calling Connection.GetConnectionId().</param>
            <param name="serverId">Server ID for the intended server.</param>
            <returns>A reference to a Server object if successful, null if no server exists for
the given connection ID and server ID.</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown if the server ID and/or connection ID is invalid.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ClientSession.GetServerAlerts">
            <summary>
	Initializes a temporary collection of ServerAlert object references to enable enumeration inside a foreach loop.
</summary>
            <returns>Reference to initialized ServerAlert IEnumerable object.</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of a network or an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ClientSession.GetServers">
            <summary>
	Initializes a temporary collection of Server object references to enable enumeration inside a foreach loop.
</summary>
            <returns>Reference to initialized Server IEnumerable object.</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of a network or an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ClientSession.GetJobs">
            <summary>
	Initializes a temporary collection of Job object references to enable enumeration inside a foreach loop.
</summary>
            <returns>Reference to initialized Job IEnumerable object.</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of a network or an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ClientSession.RemoveUserXmlWriterFactory">
            <summary>
	Removes the user defined IXmlWriterFactory object if one has been set by calling SetUserXmlWriterFactory(). 
<remarks>
	Rapid API does not delete the user specified IXmlWriterFactory object, it just removes it from its list.
</remarks></summary>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ClientSession.RemoveUserJobFactory">
            <summary>
	Removes the user defined Job factory if one has been set by calling SetUserJobFactory(). 
</summary>
            <remarks>
	Rapid API does not delete the user defined IJobFactory object, it just removes it from its list.
</remarks>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ClientSession.GetUserXmlWriterFactory">
            <summary>
	Returns the user defined XML writer factory. 
</summary>
            <returns>Reference to an object which implements IXmlWriterFactory if one was set, null otherwise.</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ClientSession.GetUserJobFactory">
            <summary>
	Returns the user defined Job factory. 
</summary>
            <returns>Reference to an object which implements IJobFactory if one was set, null otherwise.</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ClientSession.SetUserXmlWriterFactory(Rimage.Rapid.Dotnet.Api.IXmlWriterFactory)">
            <summary>
	Sets a user defined XML writer factory. This method is optional unless you are altering the way XML
	orders are generated. Rapid API uses an internal XML writer factory for Rimage predefined XML writers.
</summary>
            <param name="xmlWriterFactory">An object of a class that implements the IXmlWriterFactory interface.</param>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ClientSession.SetUserJobFactory(Rimage.Rapid.Dotnet.Api.IJobFactory)">
            <summary>
	Sets a user defined Job factory. This method is optional unless you are creating new Job types.
</summary>
            <remarks>
	Rapid API uses an internal job factory for Rimage predefined job types.
</remarks>
            <param name="jobFactory">An object of a class that implements the IJobFactory interface.</param>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ClientSession.RemoveDefaultJobListener">
            <summary>
	Removes the default job status listener to stop recieving job statuses. 
</summary>
            <remarks>
	It is not necessary to call this
	method at the end of a client session, the system will call this automatically.
</remarks>
            <returns>void</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ClientSession.RemoveSessionStatusListener">
            <summary>
	Removes the session status listener to stop recieving session related events.
</summary>
            <remarks>
	It is not necessary to call this
	method at the end of a client session, the system will call this automatically.
</remarks>
            <returns>void</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ClientSession.GetDefaultJobListener">
            <summary>
	Returns the default job status listener.
</summary>
            <returns>Reference to an object which implements IJobStatusListener if one was set, null otherwise.</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ClientSession.RemoveXmlModifyListener">
            <summary>
	Removes the listener for modifying XML if it was set.
</summary>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ClientSession.SetXmlModifyListener(Rimage.Rapid.Dotnet.Api.IXmlModifyListener)">
            <summary>
	Sets the listener for modifying XML strings before they are sent to servers.
</summary>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ClientSession.GetSessionStatusListener">
            <summary>
	Returns the session status listener.
</summary>
            <returns>Reference to an object which implements ISessionStatusListener if one was set, null otherwise.</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ClientSession.SetDefaultJobListener(Rimage.Rapid.Dotnet.Api.IJobStatusListener,System.Int32)">
            <summary>
	Sets the default job listener for asynchronously receiving job progress statuses.
</summary>
            <remarks>
	A job listener can also be set with the specific job object.
</remarks>
            <param name="statusListener">An object of a class that implements the IJobStatusListener interface.</param>
            <param name="callbackUIThreadId">The thread ID that the caller intends to have the listener called in. 
	The thread should be a UI thread.</param>
            <returns>void</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown when callbackUIThreadId is an invalid thread ID or the thread does not
	have a UI Window attached.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ClientSession.SetDefaultJobListener(Rimage.Rapid.Dotnet.Api.IJobStatusListener,Rimage.Rapid.Dotnet.Api.CallbackOnMainUIThread)">
            <summary>
	Sets the default job listener for asynchronously receiving job progress statuses.
</summary>
            <remarks>
	A job listener can also be set with the specific job object.
</remarks>
            <param name="statusListener">An object of a class that implements the IJobStatusListener interface.</param>
            <param name="callbackType">A flag to indicate if the caller intends to have the listener called
	in the main UI thread of the client application, defaulted to CallbackOnMainUIThread.True. For non-UI applications, this
	should always be CallbackOnMainUIThread.False. 
 </param>
            <returns>void</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown when callbackType is true but no UI thread is found in the application.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ClientSession.SetSessionStatusListener(Rimage.Rapid.Dotnet.Api.ISessionStatusListener,System.Int32)">
            <summary>
	Sets session listener for asynchronously receiving system-wide events, such as server state changes and server alerts. 
</summary>
            <param name="statusListener">An object of a class that implements the ISessionStatusListener interface.</param>
            <param name="callbackUIThreadId">The thread ID that the caller intends to have the listener called in. 
	The thread should be a UI thread.</param>
            <returns>void</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown when callbackUIThreadId is an invalid thread ID or the thread does not
have a UI window attached.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ClientSession.SetSessionStatusListener(Rimage.Rapid.Dotnet.Api.ISessionStatusListener,Rimage.Rapid.Dotnet.Api.CallbackOnMainUIThread)">
            <summary>
	Sets session listener for asynchronously receiving system-wide events, such as server state changes and server alerts. 
</summary>
            <param name="statusListener">An object of a class that implements the ISessionStatusListener interface.</param>
            <param name="callbackType">A flag to indicate if the caller intends to have the listener called
	in the main UI thread of the client application, defaulted to CallbackOnMainUIThread.True. For non-UI applications, this
	should always be CallbackOnMainUIThread.False. </param>
            <returns>void</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown when callbackType is true but no UI thread is found in the application.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ClientSession.RemoveFinishedJobs">
            <summary>
	Removes all finished jobs from Rapid APIs internal lists. 
</summary>
            <remarks>
	This method does not remove jobs that are created but have never been submitted. 
</remarks>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ClientSession.RemoveJob(System.String)">
            <summary>
	Removes a specific Job from Rapid APIs internal lists. 
</summary>
            <remarks>
	This method does nothing if the job with the ID does not exist.
</remarks>
            <param name="jobId">ID of the Job to remove.</param>
            <returns>true if job was removed, false otherwise</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown if the job is submitted or in process.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ClientSession.CancelJob(System.String)">
            <summary>
	Cancels a submitted job.
</summary>
            <param name="jobId">The ID of the job to cancel.</param>
            <returns>void</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case the job with the given ID does not exist.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ClientSession.GetCreatedJob(System.String)">
            <summary>
	Retrieves a specific Job object which has been created by the API.
</summary>
            <param name="jobId">ID of the job to retrieve.</param>
            <returns>A reference to the Job object if sucessful, otherwise null.</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ClientSession.CreateImageAndRecordJob(Rimage.Rapid.Dotnet.Api.JobType)">
            <summary>
	Creates an ImageAndRecordJob object or one of its subclasses. The jobType should be between ImageAndRecordJobType and UserImageAndRecordJobTypeLast.
</summary>
            <param name="jobType">Identifies the specific Image and Record job type.</param>
            <returns>A reference to a new ImageAndRecordJob object if successful, otherwise RimageException is thrown.</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown when jobType is out of range.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ClientSession.CreateProductionOnlyJob(Rimage.Rapid.Dotnet.Api.JobType)">
            <summary>
	Creates a ProductionOnlyJob object or one of its subclasses. The jobType should be between ProductionOnlyJobType and UserProductionOnlyJobTypeLast.
</summary>
            <param name="jobType">Identifies the specific Production Only job type.</param>
            <returns>A reference to a new ProductionOnlyJob object if successful, otherwise RimageException is thrown.</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown when jobType is out of range.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ClientSession.CreateImageOnlyJob(Rimage.Rapid.Dotnet.Api.JobType)">
            <summary>
	Creates an ImageOnlyJob object or one of its subclasses. The jobType has to be between ImageOnlyJobType and UserImageOnlyJobTypeLast.
</summary>
            <param name="jobType">Identifies the specific Image Only job type.</param>
            <returns>A reference to a new ImageOnlyJob object if successful, otherwise a RimageException is thrown.</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown when jobType is out of range.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ClientSession.Connect(System.String,System.String,System.String)">
            <summary>
	Connects to the Rimage messaging server. A connection has to be established prior to submitting jobs.
</summary>
            <param name="clientId">An ID string that uniquely identifies the client application. Because clientId might be used
	as part of file name, it must not contain any character in ' \r\n\t&lt;&gt;:"/\|?*=' (note the first space). The 
	length of clientId itself is limited to 71 characters, and the total length of clientId and hostName can not be 
	longer than 72 characters. If clientId is NULL or empty, the current 
	application name will be used.
</param>
            <param name="hostName">Computer name hosting the messaging server. Defaulted to "localhost". Because hostName might be used
	as part of file name, it must not contain any character in ' \r\n\t&lt;&gt;:"/\|?*=' (note the first space). The length 
	of hostName itself is limited to 71 characters, and the total length of clientId and hostName can not be longer than 72 
	characters.
</param>
            <param name="port">The port messaging server is listening on. Defaulted to "4664".</param>
            <returns>A reference to a new Connection object if successful, otherwise a RimageException is thrown.</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown when connection is not available or already connected, or when host or port are invalid, or the connection cannot be established. Or if clientId and/or
	hostName contain excluded characters above or are too long.
</exception>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.ClientSession">
            <summary>
	Working with the Rapid API starts with initiating a client session with the Rimage system. 
	The ClientSession class is the base class for all sessions. It exposes methods that are common to all types 
	of sessions, such as job creation, enumerating over jobs, servers, and alerts, and setting job and session listeners.
</summary>
            <remarks>
                <para>
	An application maintains a reference to one and only one session object. 
</para>
                <para>
	This class is never instantiated by the caller directly. Call the static method SingleConnectionSession.GetInstance()
	to get an instance of a session.
</para>
                <para>
	Rimage Corporation, Copyright (c) 2007 - 2012
</para>
            </remarks>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IJobFactory.RemoveJob(Rimage.Rapid.Dotnet.Api.Job)">
            <summary>
	Removes a user defined Job object created by this user defined job factory.
</summary>
            <remarks>
	For objects that are not created by this factory, this method should do nothing and return false.
</remarks>
            <param name="job">The job to remove.</param>
            <returns>true if the job was a job created by this user defined job factory and was deleted, false otherwise. </returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IJobFactory.CreateJob(Rimage.Rapid.Dotnet.Api.JobType)">
            <summary>
	Creates a user defined job object according to the user Job type passed in. 
</summary>
            <param name="jobType">The type of job to create - in the ranges of
	<list><item>JobType.UserImageAndRecordJobType1 through JobType.UserImageAndRecordJobTypeLast, or</item><item>JobType.UserProductionOnlyJobType1 through JobType.UserProductionOnlyJobTypeLast, or</item><item>JobType.UserImageOnlyJobType1 through JobType.UserImageOnlyJobTypeLast</item></list></param>
            <returns>Reference to a user defined Job object. Only objects of user defined job types should be created by 
	the user defined job factory, for all other Job types NULL should be returned.</returns>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.IJobFactory">
            <summary>
	An interface that a client application implements to create user defined Job objects.
</summary>
            <remarks>
                <para>
	Clients are not supposed to create objects of Job classes directly, even for the user defined classes. 
	A client application implements this interface and calls ClientSession.SetUserJobFactory() method. 
	The user defined job factory needs to delete all of the Job objects created in CreateJob() method in 
	the RemoveJob() method. 
</para>
                <para>
	Note: Rapid API uses its own job factory for all the predefined Job types.
</para>
                <para>
	Rimage Corporation, Copyright (c) 2007 - 2012
</para>
            </remarks>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IXmlModifyListener.OnModifyOrderXml(Rimage.Rapid.Dotnet.Api.XmlStrModifier)">
            <summary>
	Callback method, provides a chance for a client to modify the current Order XML string
	before it is submitted to server.
</summary>
            <param name="xmlModifer">The modifier holding the current XML string.</param>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.IXmlModifyListener">
            <summary>
	An interface used to modify order XML directly without writing customized Job classes or XML Writer
    classes. 
</summary>
            <para>
	Rimage Corporation, Copyright (c) 2007 - 2012
</para>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.XmlStrModifier.ReplaceXmlString(System.String)">
            <summary>
	Replaces the original XML string with the new XML string.
</summary>
            <param name="szNewXmlStr">The new formatted XML string replacing the original XML string. Note that if the
new XML string cannot be different type of XML from the original, i.e., an ImageOrder string can't be changed to
ProductionOrder string. If any verification of the new XML string fails, RimageException will be thrown.
</param>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.XmlStrModifier.GetXmlStringType">
            <summary>
	Returns the type of the XML string.
</summary>
            <returns>The type of the XML string. If the string is invalid, return LastJobXmlStringType</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.XmlStrModifier.ToString">
            <summary>
	Returns the formatted XML string.
</summary>
            <returns>Formatted XML string.</returns>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.XmlStrModifier">
            <summary>
 	This class is used to override an order XML string before it's submitted, providing a way of modifying
	generated XML without writing customized XmlWriter classes. 
	
    Before an order XML order is sent to the server, RAPID calls OnModifyOrderXml() method of IXmlModifyListener 
    if  the client sets an object of this class to the session. If needed, the client can modify this object 
    and save the changes made, then the modified XML string will be used for order submission.

</summary>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ISessionStatusListener.OnServerAlert(System.String,System.String,System.String,Rimage.Rapid.Dotnet.Api.ServerAlert)">
            <summary>
	Callback method, provides information about the current state of a specific ServerAlert. To find out if it's a newly
	posted alert or an acknowledged alert call ServerAlert.State.
</summary>
            <param name="connectionId">Specifies the Id of the Connection this event is related to. The connection Id is in the 'host:port' format.</param>
            <param name="serverId">Specifies the Id of the Server this state is related to.</param>
            <param name="alertId">Specifies the Id of the ServerAlert this state is related to.</param>
            <param name="serverAlert">Specifies the actual ServerAlert object.</param>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ISessionStatusListener.OnServerState(System.String,System.String,Rimage.Rapid.Dotnet.Api.Server)">
            <summary>
	Callback method, provides information about the current state of a specific Server. To find out the server's state
	call Server.State.
</summary>
            <param name="connectionId">Specifies the Id of the Connection this event is related to. The connection Id is in the 'host:port' format.</param>
            <param name="serverId">Specifies the Id of the Server this state is related to.</param>
            <param name="server">Specifies actual Server object.</param>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ISessionStatusListener.OnConnectionStatus(System.String,Rimage.Rapid.Dotnet.Api.ConnectionStatusType,System.String)">
            <summary>
	Callback method, provides information related to connection-wide events.
</summary>
            <param name="connectionId">Specifies the Id of the Connection this event is related to. The connection Id is in the 'host:port' format.</param>
            <param name="statusType">Specifies what event is being sent. Values can be ConnectionStatusType.Disconnected, ConnectionStatusType.Connected, ConnectionStatusType.ConnectionBroken. Refer to SessionEnums.h.</param>
            <param name="message">Specifies the message of the callback, which is context sensitive to the statusType. It is the error message if the statusType is Disconnected, it is the name of the cluster if it's Cluster Created or Deleted.</param>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.ISessionStatusListener">
            <summary>
	An interface that a client application implements to be asynchronously notified of various system statuses and alerts.
</summary>
            <remarks>
                <para>
	Client application creates an object which implements this interface and sets up a listener by calling a ClientSession.SetSessionStatusListener()
	method. This is typically done right after a connection to a messaging server is established. Once a listener is set up, the client application will be notified
	of connection, server, and alert state changes and other system related information. String identifiers are passed into each of the interface's
	callback methods. Each method contains all the relevent Ids to allow the client application to find any object related to the callback.
</para>
                <para>
	Note: Client application's methods which implement this interface should not throw exceptions back to Rapid API. 
	If an exception is thrown, it will be logged and the API will go on as if nothing happened.
</para>
                <para>
	Rimage Corporation, Copyright (c) 2007 - 2012
</para>
            </remarks>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.ImagingServerError">
            <summary>
	A complete list of errors generated by Imaging Server. Thesre error IDs are returned from ServerError methods 
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ImagingServerError.ISE_XML_CREATION_ERROR">
            <summary> XML creation error.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ImagingServerError.ISE_MESSAGE_SERVER_ERROR">
            <summary> Message Server error.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ImagingServerError.ISE_XML_PARSE_ERROR">
            <summary> XML parse error.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ImagingServerError.ISE_CANCELLED_FROM_RSM_OR_OTHER_APP">
            <summary> Cancelled from RSM or other application.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ImagingServerError.ISE_ILLEGAL_VOLUMENAME_FOR_IMAGE_TYPE">
            <summary> Illegal volume name for image type.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ImagingServerError.ISE_ILLEGAL_FILENAME_FOR_IMAGE_TYPE">
            <summary> Illegal filename for image type.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ImagingServerError.ISE_INVALID_DATA_SOURCE_FILE">
            <summary> Invalid or not found data source file name.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ImagingServerError.ISE_FILE_LARGER_THAN_4GB_FOR_ISO">
            <summary> File larger than 4.2G for ISO.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ImagingServerError.ISE_DUPLICATE_FILE_IN_IMAGE">
            <summary> File already exists in image file, duplicate file.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ImagingServerError.ISE_TOO_MANY_SUBDIRS_FOR_ISO1">
            <summary> Too many subdirectories for ISO level 1</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ImagingServerError.ISE_IMAGE_TOO_LARGE_FOR_MEDIA">
            <summary> Image too large for specified media size.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ImagingServerError.ISE_ERROR_WRITING_IMAGE_FILE">
            <summary> Error writing image file.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ImagingServerError.ISE_NO_FILE_OR_ISO_HEADER_MISMATCH">
            <summary> Error sizing image file, i.e. no files or ISO header didn’t match.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ImagingServerError.ISE_ERROR_CREATING_OPENING_IMAGE_FILE">
            <summary> Error creating / opening image file.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ImagingServerError.ISE_ERROR_READING_NATIVE_FILE">
            <summary> Error reading native file.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ImagingServerError.ISE_ERROR_OPENING_READING_DATA_FILE">
            <summary> Error opening or reading data file.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ImagingServerError.ISE_ZIP_LIBRARY_ERROR">
            <summary> Zip library error.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ImagingServerError.ISE_USER_ABORTED">
            <summary> User generated abort.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ImagingServerError.ISE_ERROR_WRITING_FILE">
            <summary> Error writing file.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ImagingServerError.ISE_ERROR_READING_FILE">
            <summary> Error reading file.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ImagingServerError.ISE_ERROR_OPENING_FILE">
            <summary> Error opening file.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ImagingServerError.ISE_NO_ERROR">
            <summary> Successful result, no error.</summary>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IXmlWriterFactory.RemoveWriter(Rimage.Rapid.Dotnet.Api.XmlWriter)">
            <summary>
	Deletes a user extended XmlOrderWriter object created by this user defined xml writer factory.
</summary>
            <param name="writer">The user extended XmlWriter to remove. </param>
            <returns>true if the xml writer was deleted, false otherwise. </returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IXmlWriterFactory.CreateProductionXmlWriter(Rimage.Rapid.Dotnet.Api.JobType)">
            <summary>
	Creates a user extended ProductionXmlWriter object. 
</summary>
            <param name="jobType">The type of job to create the extended ProductionXmlWriter for. 
	A user defined xml writer can be created for either the pre defined Job types or user defined job types.</param>
            <returns>Reference to a user extended ProductionXmlWriter object.</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IXmlWriterFactory.CreateImageXmlWriter(Rimage.Rapid.Dotnet.Api.JobType)">
            <summary>
	Creates a user extended ImageXmlWriter object. 
</summary>
            <param name="jobType">The type of job to create the extended ImageXmlWriter for. 
	A user defined xml writer can be created for either the pre defined Job types or user defined job types.</param>
            <returns>Reference to a user extended ImageXmlWriter object.</returns>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.IXmlWriterFactory">
            <summary>
	An interface that a client application implements to create user extended XmlOrderWriter objects.
</summary>
            <remarks>
                <para>
	Clients are not supposed to create objects of XmlOrderWriter classes directly, even for the user defined classes. 
	A client application implements this interface and calls ClientSession.SetUserXmlWriterFactory() method. 
	The user defined xml writer factory needs to delete all of the xml writer objects created in 
	CreateImageXmlWriter() and CreateProductionXmlWriter() methods in the RemoveWriter() method. 
</para>
                <para>
	Note: Rapid API uses its own xml writer factory for all the predefined XmlWriter types.
</para>
                <para>
	Rimage Corporation, Copyright (c) 2007 - 2012
</para>
            </remarks>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ProductionXmlWriter.AddDataTrack(Rimage.Rapid.Dotnet.Api.XmlStringBuffer)">
            <summary>
	Formats the ProductionOrder Data element.
</summary>
            <param name="xmlStrBuffer">Reference to the XmlStringBuffer to use. </param>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ProductionXmlWriter.AddSubIndex(Rimage.Rapid.Dotnet.Api.XmlStringBuffer)">
            <summary>
	Formats the ProductionOrder SubIndex element.
</summary>
            <param name="xmlStrBuffer">Reference to the XmlStringBuffer to use. </param>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ProductionXmlWriter.AddAudioTracks(Rimage.Rapid.Dotnet.Api.XmlStringBuffer)">
            <summary>
	Formats the ProductionOrder Audio elements.
</summary>
            <param name="xmlStrBuffer">Reference to the XmlStringBuffer to use. </param>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ProductionXmlWriter.AddLabelAction(Rimage.Rapid.Dotnet.Api.XmlStringBuffer)">
            <summary>
	Formats the ProductionOrder Label element.
</summary>
            <param name="xmlStrBuffer">Reference to the XmlStringBuffer to use. </param>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ProductionXmlWriter.AddCopyAction(Rimage.Rapid.Dotnet.Api.XmlStringBuffer)">
            <summary>
	Formats the ProductionOrder Copy element.
</summary>
            <param name="xmlStrBuffer">Reference to the XmlStringBuffer to use. </param>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ProductionXmlWriter.AddFixateAction(Rimage.Rapid.Dotnet.Api.XmlStringBuffer,System.Boolean)">
            <summary>
	Formats the ProductionOrder Fixate element.
</summary>
            <param name="xmlStrBuffer">Reference to the XmlStringBuffer to use. </param>
            <param name="final">When final is set to false, the value of the "Final" attribue will be "false";
	when final is set to true, the value of the "Final" attribue is taken from the value of FixateFinalizeDiscParam
	Job parameter, which can be set by the caller. </param>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ProductionXmlWriter.AddActions(Rimage.Rapid.Dotnet.Api.XmlStringBuffer)">
            <summary>
	Formats the ProductionOrder Action elements.
</summary>
            <remarks>
	This method calls these methods, in this order:
	<list><item>AddAudioTracks() and/or AddDataTrack()</item><item>AddFixateAction()</item><item>AddLabelAction()</item></list></remarks>
            <param name="xmlStrBuffer">Reference to the XmlStringBuffer to use. </param>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ProductionXmlWriter.AddCustomize(Rimage.Rapid.Dotnet.Api.XmlStringBuffer)">
            <summary>
	Formats the ProductionOrder Customize element.
</summary>
            <param name="xmlStrBuffer">Reference to the XmlStringBuffer to use. </param>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ProductionXmlWriter.AddTarget(Rimage.Rapid.Dotnet.Api.XmlStringBuffer)">
            <summary>
	Formats the ProductionOrder Target element.
</summary>
            <param name="xmlStrBuffer">Reference to the XmlStringBuffer to use. </param>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ProductionXmlWriter.AddInOut(Rimage.Rapid.Dotnet.Api.XmlStringBuffer)">
            <summary>
	Formats the ProductionOrder InOut element.
</summary>
            <param name="xmlStrBuffer">Reference to the XmlStringBuffer to use. </param>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ProductionXmlWriter.AddMedia(Rimage.Rapid.Dotnet.Api.XmlStringBuffer)">
            <summary>
	Formats the ProductionOrder Media element.
</summary>
            <param name="xmlStrBuffer">Reference to the XmlStringBuffer to use. </param>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ProductionXmlWriter.FormatDetails(Rimage.Rapid.Dotnet.Api.XmlStringBuffer)">
            <summary>
	Formats the rest of the ProductionOrder XML document.
</summary>
            <remarks>
	This method calls these methods, in this order:
	<list><item>AddMedia()</item><item>AddTarget()</item><item>AddInOut()</item><item>AddCustomize()</item><item>AddActions()</item></list></remarks>
            <param name="xmlStrBuffer">Reference to the XmlStringBuffer to use. </param>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ProductionXmlWriter.GetProductionOptions">
            <summary>
	Returns an IProductionOptions object that's part of the job for which this XML is generated.
</summary>
            <returns>Reference to a IProductionOptions implementation object.</returns>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.ProductionXmlWriter.UsedJob">
            <summary>
	Gets a reference to the Job object for which this XML is generated.
</summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.ProductionXmlWriter">
            <summary>
	A subclass of XmlWriter for formatting a ProductionOrder XML string. 
</summary>
            <remarks>
                <para>
	Note: Refer to ProductionOrder_1.7.dtd.
</para>
                <para>
	Rimage Corporation, Copyright (c) 2007 - 2012
</para>
            </remarks>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ImageXmlWriter.AddCustomize(Rimage.Rapid.Dotnet.Api.XmlStringBuffer)">
            <summary>
	Formats the ImageOrder Customize element.
</summary>
            <param name="xmlStrBuffer">Reference to the XmlStringBuffer to use. </param>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ImageXmlWriter.AddControls(Rimage.Rapid.Dotnet.Api.XmlStringBuffer)">
            <summary>
	Formats the ImageOrder Controls element.
</summary>
            <param name="xmlStrBuffer">Reference to the XmlStringBuffer to use. </param>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ImageXmlWriter.AddPVDInfo(Rimage.Rapid.Dotnet.Api.XmlStringBuffer)">
            <summary>
	Formats the ImageOrder PVDInfo element.
</summary>
            <param name="xmlStrBuffer">Reference to the XmlStringBuffer to use. </param>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ImageXmlWriter.AddVolumeName(Rimage.Rapid.Dotnet.Api.XmlStringBuffer)">
            <summary>
	Formats the ImageOrder VolumeName element.
</summary>
            <param name="xmlStrBuffer">Reference to the XmlStringBuffer to use. </param>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ImageXmlWriter.AddRules(Rimage.Rapid.Dotnet.Api.XmlStringBuffer)">
            <summary>
	Formats the ImageOrder Rules element.
</summary>
            <param name="xmlStrBuffer">Reference to the XmlStringBuffer to use. </param>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ImageXmlWriter.AddOutput(Rimage.Rapid.Dotnet.Api.XmlStringBuffer)">
            <summary>
	Formats the ImageOrder Output element.
</summary>
            <param name="xmlStrBuffer">Reference to the XmlStringBuffer to use. </param>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ImageXmlWriter.AddParentFolders(Rimage.Rapid.Dotnet.Api.XmlStringBuffer)">
            <summary>
	Formats the ImageOrder ParentFolder elements.
</summary>
            <param name="xmlStrBuffer">Reference to the XmlStringBuffer to use. </param>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ImageXmlWriter.AddEditListFile(Rimage.Rapid.Dotnet.Api.XmlStringBuffer)">
            <summary>
	Formats the ImageOrder EditList elements.
</summary>
            <param name="xmlStrBuffer">Reference to the XmlStringBuffer to use. </param>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ImageXmlWriter.AddSource(Rimage.Rapid.Dotnet.Api.XmlStringBuffer)">
            <summary>
	Formats the ImageOrder Source element.
</summary>
            <param name="xmlStrBuffer">Reference to the XmlStringBuffer to use. </param>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ImageXmlWriter.AddFormatOptions(Rimage.Rapid.Dotnet.Api.XmlStringBuffer)">
            <summary>
	Formats the ImageOrder FormatOptions element.
</summary>
            <param name="xmlStrBuffer">Reference to the XmlStringBuffer to use. </param>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ImageXmlWriter.AddPCMACFormat(Rimage.Rapid.Dotnet.Api.XmlStringBuffer)">
            <summary>
	Formats the ImageOrder PCMACFormat element.
</summary>
            <param name="xmlStrBuffer">Reference to the XmlStringBuffer to use. </param>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ImageXmlWriter.AddUDFFormat(Rimage.Rapid.Dotnet.Api.XmlStringBuffer)">
            <summary>
	Formats the ImageOrder UDFFormat element.
</summary>
            <param name="xmlStrBuffer">Reference to the XmlStringBuffer to use. </param>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ImageXmlWriter.AddFormat(Rimage.Rapid.Dotnet.Api.XmlStringBuffer)">
            <summary>
	Formats the ImageOrder Format element.
</summary>
            <param name="xmlStrBuffer">Reference to the XmlStringBuffer to use. </param>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ImageXmlWriter.AddTarget(Rimage.Rapid.Dotnet.Api.XmlStringBuffer)">
            <summary>
	Formats the ImageOrder Target element.
</summary>
            <param name="xmlStrBuffer">Reference to the XmlStringBuffer to use. </param>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ImageXmlWriter.FormatDetails(Rimage.Rapid.Dotnet.Api.XmlStringBuffer)">
            <summary>
	Formats the rest of the ImageOrder XML document.
</summary>
            <remarks>
	This method calls these methods, in this order:
	<list><item>AddTarget()</item><item>AddFormat()</item><item>AddSource()</item><item>AddOutput()</item><item>AddRules()</item><item>AddVolumeName()</item><item>AddPVDInfo()</item><item>AddControls()</item><item>AddCustomize()</item></list></remarks>
            <param name="xmlStrBuffer">Reference to the XmlStringBuffer to use. </param>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ImageXmlWriter.GetImageOptions">
            <summary>
	Returns an IImageOptions object that's part of the job for which this XML is generated.
</summary>
            <returns>Reference to a IImageOptions implementation object.</returns>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.ImageXmlWriter.UsedJob">
            <summary>
	Gets a reference to the Job object for which this XML is generated.
</summary>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ImageXmlWriter.GetUsedJob">
            <summary>
	Returns a reference to the Job object for which this XML is generated.
</summary>
            <returns>Reference to a Job object.</returns>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.ImageXmlWriter">
            <summary>
	A subclass of XmlOrderWriter for formatting an ImageOrder XML string. 
</summary>
            <remarks>
                <para>
	Note: Refer to ImageOrder_1.4.dtd.
</para>
                <para>
	Rimage Corporation, Copyright (c) 2007 - 2012
</para>
            </remarks>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.XmlWriter.FormatCloseRootElement(Rimage.Rapid.Dotnet.Api.XmlStringBuffer)">
            <summary>
	Formats the close tag of the root element, i.e. /ProductionOrder
</summary>
            <param name="xmlStrBuffer">Reference to the XmlStringBuffer to use. </param>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.XmlWriter.FormatDetails(Rimage.Rapid.Dotnet.Api.XmlStringBuffer)">
            <summary>
	Formats the rest of the XML document.
</summary>
            <remarks>
	This method is implemented by subclasses such as ImageXmlWriter and ProductionXmlWriter.
</remarks>
            <param name="xmlStrBuffer">Reference to the XmlStringBuffer to use. </param>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.XmlWriter.FormatRootElement(Rimage.Rapid.Dotnet.Api.XmlStringBuffer)">
            <summary>
	Formats the opening tag of the root element, i.e. ProductionOrder ...
</summary>
            <remarks>
	This method is implemented by subclasses such as OrderXmlWriter.
</remarks>
            <param name="xmlStrBuffer">Reference to the XmlStringBuffer to use. </param>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.XmlWriter.FormatDocType(Rimage.Rapid.Dotnet.Api.XmlStringBuffer)">
            <summary>
	Formats the header string, i.e. !DOCTYPE ...
</summary>
            <param name="xmlStrBuffer">Reference to the XmlStringBuffer to use. </param>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.XmlWriter.GetStringBuffer">
            <summary>
	Returns a reference to the XmlStringBuffer.
</summary>
            <returns>Reference to the XmlStringBuffer used by this XmlWriter.</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.XmlWriter.ToString">
            <summary>
	Returns the formatted XML string.
</summary>
            <returns>Formatted XML string according to the DTD file.</returns>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.XmlWriter.DtdVersion">
            <summary>
	Gets or sets the version of the DTD ('1.7' for ProductionOrder_1.7.dtd).
</summary>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.XmlWriter.DtdName">
            <summary>
	Gets or sets the name of the DTD.
</summary>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.XmlWriter.DtdFolderPath">
            <summary>
	Gets or sets the full DTD folder path for the XML writer.
</summary>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.XmlWriter.FormatXml">
            <summary>
	Formats XML string. This method kicks off XML generation.
</summary>
            <remarks>
	This method calls these methods, in this order:
	<list><item>FormatDocType()</item><item>FormatRootElement()</item><item>FormatDetails()</item><item>FormatCloseRootElement()</item></list></remarks>
            <returns>void</returns>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.XmlWriter">
            <summary>
	A super class for various XML classes for creating XML strings used by the Rapid API. 
</summary>
            <remarks>
                <para>
	Each XML class has a specific DTD file that it must conform to. A client may subclass from 
	ImageXmlWriter and/or ProductionXmlWriter if it is altering the way order XML needs to be formated. 
	XmlWriter itself can be subclassed in case of custom server request XML strings - this is rare.
</para>
                <para>
	Note: Objects of XmlWriter and its subclasses cannot be created directly, 
	instead they should be created using IXmlWriterFactory.
</para>
                <para>
	Rimage Corporation, Copyright (c) 2007 - 2012
</para>
            </remarks>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.XmlStringBuffer.GetNestLevelOfElement(System.String)">
            <summary>
	Gets the nest level of the element, usually called to get the nesting level of a
	parent element, and then used it to indent its child elements.
</summary>
            <param name="elementName">The name of the element.</param>
            <returns>The nest level.</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.XmlStringBuffer.WriteAttribute(System.String,System.String)">
            <summary>
	Writes an attribute for the current element, i.e. attriName = "value"
</summary>
            <param name="attriName">The attribute name to write.</param>
            <param name="value">The value of the attribute.</param>
            <returns>true if adding the attribue succeede, false otherwise.</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.XmlStringBuffer.WriteSimpleElement(System.String,System.String,System.Int32)">
            <summary>
	Writes a simple elment, i.e. elementNamevalue/elementName, if value is
	empty or NULL, it writes elementName/.
</summary>
            <param name="elementName">The element name to add.</param>
            <param name="value">The value of the element.</param>
            <param name="indentLevel">The indention level if desired.</param>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.XmlStringBuffer.WriteCloseElement(System.String)">
            <summary>
	Writes the closing tag of the specified element, i.e. /elementName.
</summary>
            <param name="elementName">The element name to close.</param>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.XmlStringBuffer.WriteStartElement(System.String,System.Int32)">
            <summary>
	Writes the start tag of an element, i.e. elementName ...,  with possible attributes, 
	and	sub elements in between.
</summary>
            <param name="elementName">The element name to add.</param>
            <param name="indentLevel">The indention level if desired.</param>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.XmlStringBuffer.WriteHeaderDocType(System.String)">
            <summary>
	Writes XML header, the first line starts with !DOCTYPE ...
</summary>
            <param name="headerString">The complete header string.</param>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.XmlStringBuffer.ToString">
            <summary>
	Returns the formatted XML string.
</summary>
            <returns>Formatted XML string.</returns>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.XmlStringBuffer">
            <summary>
	Represents a generic XML self-expanding buffer class for manipulating XML strings. 
</summary>
            <remarks>
                <para>
	The class has a simple interface for adding XML elements and attributes. 
	It also knows how to close an element and to indent correctly.
</para>
                <para>
	Rimage Corporation, Copyright (c) 2007 - 2012
</para>
            </remarks>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.Connection.SystemFolder">
            <summary>
	Gets Rimage System Folder as reported by the messaging server currently connected to. 
</summary>
            <remarks>
	By default the Rimage System Folder is "C:\Rimage".
</remarks>
            <returns>System folder for the connection, can be in UNC format, if connected, otherwise NULL.</returns>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.Connection.ConnectionId">
            <summary>
	Gets ID of the Connection.
</summary>
            <returns>Connection ID in the form "host:port" if connected, otherwise NULL.</returns>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.Connection.Port">
            <summary>
	Gets string form of the port of the Connection 
</summary>
            <remarks>
	This is the same port as the one passed into ClientSession.Connect() method.
</remarks>
            <returns>Messaging server port if connected, otherwise NULL.</returns>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.Connection.Host">
            <summary>
	Gets computer name of the messaging server currently connected to.
</summary>
            <remarks>
	This is the same host as the one passed into ClientSession.Connect() method.
</remarks>
            <returns>Messaging server computer name if connected, otherwise NULL.</returns>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.Connection.ClientId">
            <summary>
	Gets the client ID for this Connection.
</summary>
            <remarks>
	This is the same client ID as the one passed into ClientSession.Connect() method.
</remarks>
            <returns>Client ID for this connection if connected, otherwise NULL.</returns>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.Connection.Connected">
            <summary>
	Checks to see if a messaging server connection exists and is active.
</summary>
            <returns>true if the connection is still alive, false otherwise.</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.Connection.RemoveOfflineServers">
            <summary>
	Removes offline Server objects, for this connection, from Rapid APIs internal lists. 
</summary>
            <remarks>
	Main reason for calling this method is to free application's memory.
</remarks>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.Connection.GetServer(System.String)">
            <summary>
	Retrieves a specific server object with the given server ID.
</summary>
            <param name="serverId">Server ID for the intended server.</param>
            <returns>A reference to a Server object if successful, NULL if no server exists for
the given server ID.</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown if the server ID is invalid.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.Connection.GetPendingOrders(System.String,System.Int32,System.String,System.String,System.Boolean)">
            <summary>
	Initializes a temporary collection of pending ServerOrder object references to enable enumeration inside a foreach loop.
</summary>
            <remarks>
	ServerOrder enumerable allows enumeration over pending ImagingOrder, ProductionOrder or OrderSet objects.
</remarks>
            <param name="clusterName">Name of the cluster (queue) which contains the pending orders.</param>
            <param name="maxOrders">Specifies maximum number of orders to return. 
	If maxOrders=-1, all orders in the cluster are returned.
	If maxOrders=20 and a cluster has 100 orders, only 20 are returned.
	If maxOrders=20 and a cluster has only 10 orders, then only 10 are returned.</param>
            <param name="clientId">Filters returned orders for the clientId specified. If clientId is NULL, orders for all clients will be returned.</param>
            <param name="serverId">Filters returned orders for the target serverId specified. If serverId is NULL, orders targeted for all servers will be returned.</param>
            <param name="targetedOrdersOnly">If true then only orders specifically targeted for the specified server are returned, 
	otherwise orders that are not targeted to a server are returned as well. Defaulted to true.</param>
            <returns>void</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of a network or an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.Connection.GetServers">
            <summary>
	Initializes a temporary collection of Server object references to enable enumeration inside a foreach loop.
</summary>
            <returns>Reference to initialized Server IEnumerable object.</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of a network or an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.Connection.StopServer(System.String)">
            <summary>
	Shuts down an existing online server.
	This is a convenient method to shutdown an online server object without having to acquire the Server object.
</summary>
            <param name="serverId">ID of the server to shut down.</param>
            <returns>void</returns>
            <remarks>
	If a server with the specified ID does not exist, this function does nothing.
</remarks>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.Connection.StartServer(System.String,Rimage.Rapid.Dotnet.Api.ServerType)">
            <summary>
	Starts a Rimage sever on a specific computer, specified by server type. 
</summary>
            <remarks>
	This method is asynchronous - it returns as soon as it initiates the server start process, which could take a while. 
	To check if the intended server actually starts, use ISessionStatusListener to monitor server state.
	If a server with the specific host name and server type already existed, this method does nothing.
</remarks>
            <param name="serverHost">Name of the computer on which to start the server.</param>
            <param name="serverType">Type of the server to start - ProductionServerType or ImagingServerType.</param>
            <returns>void</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">
	Thrown when the server name is invalid, the server does not exist, or the server is in an error state.
</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.Connection.RecoverDurableJobs">
            <summary>
	Recovers all previously in process jobs on this connection. 
</summary>
            <remarks>
	This method recovers job statuses for jobs that were in process when the caller application
	either shutdown or disconnected. 
</remarks>
            <returns>Enumerator of recovered job ids of this connection.</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.Connection.SubmitDurableJob(Rimage.Rapid.Dotnet.Api.Job)">
            <summary>
	Submits a job for processing, with the option of recovering statuses in case of a shutdown.
</summary>
            <remarks>
	Rapid API validates parameters set on the job for correctness before it sends the job to the servers for processing. 
</remarks>
            <param name="job">Created job object through various Job creation methods of ClientSession.</param>
            <returns>void</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">
	Thrown in one of the following cases:
	No valid connection, job object is null, the job is already in process, job validation fails, or internal error.
</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.Connection.SubmitJob(Rimage.Rapid.Dotnet.Api.Job)">
            <summary>
	Submits a job for processing.
</summary>
            <remarks>
	Rapid API validates parameters set on the job for correctness before it sends the job to the servers for processing. 
</remarks>
            <param name="job">Created job object through various Job creation methods of ClientSession.</param>
            <returns>void</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">
	Thrown in one of the following cases:
	no valid connection, job object is NULL, the job is already in process, job validation fails, or internal error.
</exception>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.Connection">
            <summary>
	Connection class encapsulates information about a connection to the messaging server and 
	allows operations that are specific to this connection, such as enumerating servers connected 
	to the same messaging server or submitting a job to those servers. You must have a valid connection 
	to submit jobs and monitor system status, even if a lot of those operations are performed through 
	the SingleConnectionSession class. A connection object is automatically created when the method
	SingleConnectionSession.Connect() is called.
</summary>
            <remarks>
                <para>
	Client application almost never interacts with the Connection object in the "single connection" case. 
	A Connection object can be retrieved by calling the SingleConnectionSession.GetConnection() method.
</para>
                <para>
	Rimage Corporation, Copyright (c) 2007 - 2012
</para>
            </remarks>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ReadJob.SetJobListener(Rimage.Rapid.Dotnet.Api.IJobStatusListener,System.Int32)">
            <summary> Note that the statusListener must actually be of type 
IReadJobStatusListener, otherwise an exception will be thrown.
</summary>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ReadJob.SetJobListener(Rimage.Rapid.Dotnet.Api.IJobStatusListener,Rimage.Rapid.Dotnet.Api.CallbackOnMainUIThread)">
            <summary> Note that the statusListener must actually be of type IReadJobStatusListener, otherwise 
an exception will be thrown.
</summary>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ReadJob.GetReadJobXmlString(Rimage.Rapid.Dotnet.Api.ReadJobXmlStringType)">
            <summary> Returns various XML strings that apply to the Read job./// </summary>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ReadJob.GetDiscTrack(System.Int32)">
            <summary> Returns a specific DiscTrack object.
</summary>
            <param name="trackNumber">The 0-based track number.</param>
            <returns>The corresponding DiscTrack object if track number is valid, NULL otherwise.</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ReadJob.GetDiscTrackCount">
            <summary> Returns total number of tracks on the master disc. 
This is only valid after the mapping step has been done/// </summary>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ReadJob.GetReadJobParam(Rimage.Rapid.Dotnet.Api.ReadJobParamType)">
            <summary> Getting value of a ReadJob specific parameter.
</summary>
            <param name="param">Parameter type, one of the values of ReadJobParamType.</param>
            <returns>The value of the parameter.</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ReadJob.SetReadJobParam(Rimage.Rapid.Dotnet.Api.ReadJobParamType,System.String)">
            <summary> Setting ReadJob specific options.
</summary>
            <param name="param">Parameter type, one of the values of ReadJobParamType.</param>
            <param name="value">Actual value of the parameter.</param>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.ReadJob">
            <summary>
	Represents a job which allows reading of a master disc. Extends ProductionOnlyJob. 
</summary>
            <remarks>
                <para>
	Rimage Corporation, Copyright (c) 2007 - 2012
</para>
            </remarks>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.HFSJob">
            <summary>
	Represents a job which produces an HFS disc with optional label. Extends ImageAndRecordJob. 
</summary>
            <remarks>
                <para>
                    <list>
                        <item>ISOLevelParam parameter is defaulted to FORMAT_ISO_NONE.</item>
                        <item>ISOAppleParam parameter is defaulted to FORMAT_ISO_APPLE_HFS.</item>
                        <item>MediaTypeParam parameter is defaulted to MEDIA_TYPE_CDR</item>
                    </list>
                </para>
                <para>
	Rimage Corporation, Copyright (c) 2007 - 2012
</para>
            </remarks>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.BlueBookJob">
            <summary>
	Represents a job which makes a disc with multiple audio files followed by a single data track (Blue Book CD), with an optional label. 
	The data track is recorded from data files given to this job. Extends ImageAndRecordJob. 
</summary>
            <remarks>
                <para>
                    <list>
                        <item>ISOLevelParam parameter is defaulted to FORMAT_ISO_9660_L2</item>
                        <item>MediaTypeParam parameter is defaulted to MEDIA_TYPE_CDR</item>
                    </list>
                </para>
                <para>
	Rimage Corporation, Copyright (c) 2007 - 2012
</para>
            </remarks>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.HybridJob">
            <summary>
	Represents a job which produces a hybrid disc (ISO partition and HFS partition) with an optional label. Extends ImageAndRecordJob. 
</summary>
            <remarks>
                <para>
                    <list>
                        <item>ISOLevelParam parameter is defaulted to FORMAT_ISO_9660_L2</item>
                        <item>ISOAppleParam parameter to FORMAT_ISO_APPLE_HFS</item>
                        <item>MediaTypeParam parameter is defaulted to MEDIA_TYPE_CDR</item>
                    </list>
                </para>
                <para>
	Rimage Corporation,Copyright (c) 2007 - 2012
</para>
            </remarks>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.UDFJob">
            <summary>
	Represents a job which produces a UDF formated disc with an optional label. Extends ImageAndRecordJob. 
</summary>
            <remarks>
                <para>
                    <list>
                        <item>UDFVersionParam parameter is defaulted to FORMAT_UDF_102</item>
                        <item>MediaTypeParam parameter is defaulted to MEDIA_TYPE_DVDR</item>
                    </list>
                </para>
                <para>
	Rimage Corporation, Copyright (c) 2007 - 2012
</para>
            </remarks>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.ISOJob">
            <summary>
	Represents a job which produces an ISO formated disc with an optional label. Extends ImageAndRecordJob. 
</summary>
            <remarks>
                <para>
                    <list>
                        <item>ISOLevelParam parameter is defaulted to FORMAT_ISO_9660_L2</item>
                        <item>MediaTypeParam parameter is defaulted to MEDIA_TYPE_CDR</item>
                    </list>
                </para>
                <para>
	Rimage Corporation,Copyright (c) 2007 - 2012
</para>
            </remarks>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ImageAndRecordJob.GetProductionXml(System.String)">
            <summary>
	Creates the XML string to be used in submitting the job to Rimage Production server. Before the
	XML string is formatted, the SetDefaultFields() and Validate() methods are called.
</summary>
            <param name="dtdFolder">The full path of the DTD folder that holds the ProductionOrder DTD file.</param>
            <returns>The formatted XML string according to the correct version of ProductionOrder DTD. </returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown if validation fails.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ImageAndRecordJob.GetImageXml(System.String)">
            <summary>
	Creates the XML string to be used in submitting the job to Rimage Imaging server. Before the
	XML string is formatted, the SetDefaultFields() and Validate() methods are called.
</summary>
            <param name="dtdFolder">The full path of the DTD folder that holds the ImageOrder DTD file.</param>
            <returns>The formatted XML string according to the correct version of ImageOrder DTD. </returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown validation fails.</exception>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.ImageAndRecordJob">
            <summary>
	Represents the type of job which images data and produces a disc in one fell swoop.
</summary>
            <remarks>
                <para>
	This class extends the Job class and implements the IImageOptions and IProductionOptions interfaces. 
	More specific image and record job types are represented by these subclasses:
	<list><item>ISOJob</item><item>UDFJob</item><item>HybridJob</item><item>BlueBookJob</item><item>HFSJob</item></list></para>
                <para>
	For setting and getting imaging related data and parameters refer to IImageOptions documentation.
	For setting and getting production related data and parameters refer to IProductionOptions documentation.
</para>
                <para>
	Rimage Corporation, Copyright (c) 2007 - 2012
</para>
            </remarks>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.FromImageJob">
            <summary>
	Represents a job which records a disc using a previously created image file. Extends ProductionOnlyJob. 
</summary>
            <remarks>
                <para>
                    <list>
                        <item>MediaTypeParam parameter is defaulted to MEDIA_TYPE_CDR.</item>
                    </list>
                </para>
                <para>
	Rimage Corporation, Copyright (c) 2007 - 2012
</para>
            </remarks>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.BlueBookFromImageJob">
            <summary>
	Represents a job which makes a disc with multiple audio files followed by a single data track (Blue Book CD). 
	The data track is recorded from a previosly created image file. Extends ProductionOnlyJob. 
</summary>
            <remarks>
                <para>
                    <list>
                        <item>MediaTypeParam parameter is defaulted to MEDIA_TYPE_CDR.</item>
                    </list>
                </para>
                <para>
	Rimage Corporation, Copyright (c) 2007 - 2012
</para>
            </remarks>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.LabelOnlyJob">
            <summary>
	Represents a job which just prints a label on a disc. Extends ProductionOnlyJob. 
</summary>
            <remarks>
                <para>
                    <list>
                        <item>MediaTypeParam parameter is defaulted to MEDIA_TYPE_CDR.</item>
                    </list>
                </para>
                <para>
	Rimage Corporation, Copyright (c) 2007 - 2012
</para>
            </remarks>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.AudioJob">
            <summary>
	Represents a job which produces an audio CD (Red Book CD). Extends ProductionOnlyJob. 
</summary>
            <remarks>
                <para>
                    <list>
                        <item>MediaTypeParam parameter is defaulted to MEDIA_TYPE_CDR.</item>
                    </list>
                </para>
                <para>
	Rimage Corporation, Copyright (c) 2007 - 2012
</para>
            </remarks>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ProductionOnlyJob.GetProductionXml(System.String)">
            <summary>
	Creates the XML string to be used in submitting the job to Rimage Production server. Before the
	XML string is formatted, the SetDefaultFields() and Validate() methods are called.
</summary>
            <param name="dtdFolder">The full path of the DTD folder that holds the ProductionOrder DTD file.</param>
            <returns>The formatted XML string according to the correct version of ProductionOrder DTD. </returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown if validation fails.</exception>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.ProductionOnlyJob">
            <summary>
	Represents the type of job which records an existing image on a disc and optionally prints a label.
</summary>
            <remarks>
                <para>
	This class extends the Job class and implements the IProductionOptions interface. 
	More specific production only job types are represented by these subclasses:
	<list><item>AudioJob</item><item>LabelOnlyJob</item><item>BlueBookFromImageJob</item><item>FromImageJob</item></list></para>
                <para>
	For setting and getting production related data and parameters refer to IProductionOptions documentation.
</para>
                <para>
	Rimage Corporation, Copyright (c) 2007 - 2012
</para>
            </remarks>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.HFSImageOnlyJob">
            <summary>
	Represents a job which just creates an HFS formated image file. Extends ImageOnlyJob. 
</summary>
            <remarks>
                <para>
                    <list>
                        <item>ISOLevelParam parameter is defaulted to FORMAT_ISO_NONE.</item>
                        <item>ISOAppleParam parameter is defaulted to FORMAT_ISO_APPLE_HFS.</item>
                    </list>
                </para>
                <para>
	Rimage Corporation, Copyright (c) 2007 - 2012
</para>
            </remarks>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.ISOImageOnlyJob">
            <summary>
	Represents a job which just creates an ISO formated image file. Extends ImageOnlyJob. 
</summary>
            <remarks>
                <para>
                    <list>
                        <item>ISOLevelParam parameter is defaulted to FORMAT_ISO_9660_L2.</item>
                    </list>
                </para>
                <para>
	Rimage Corporation, Copyright (c) 2007 - 2012
</para>
            </remarks>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.HybridImageOnlyJob">
            <summary>
	Represents a job which just creates a hybrid image file (ISO partition and HFS partition). Extends ImageOnlyJob. 
</summary>
            <remarks>
                <para>
                    <list>
                        <item>ISOLevelParam parameter is defaulted to FORMAT_ISO_9660_L2.</item>
                        <item>ISOAppleParam parameter is defaulted to FORMAT_ISO_APPLE_HFS.</item>
                    </list>
                </para>
                <para>
	Rimage Corporation, Copyright (c) 2007 - 2012
</para>
            </remarks>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.UDFImageOnlyJob">
            <summary>
	Represents a job which just creates a UDF formated image file. Extends ImageOnlyJob. 
</summary>
            <remarks>
                <para>
                    <list>
                        <item>UDFVersionParam parameter is defaulted to FORMAT_UDF_102.</item>
                    </list>
                </para>
                <para>
	Rimage Corporation, Copyright (c) 2007 - 2012
</para>
            </remarks>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ImageOnlyJob.GetImageXml(System.String)">
            <summary>
	Creates the XML string to be used in submitting the job to Rimage Imaging server. Before the
	XML string is formatted, the SetDefaultFields() and Validate() methods are called.
</summary>
            <param name="dtdFolder">The full path of the DTD folder that holds the ImageOrder DTD file.</param>
            <returns>The formatted XML string according to the correct version of ImageOrder DTD. </returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown if validation fails.</exception>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.ImageOnlyJob">
            <summary>
	Represents the type of job which creates an image file from a given set of data.
</summary>
            <remarks>
                <para>
	This class extends the Job class and implements the IImageOptions interface. 
	More specific image only job types are represented by these subclasses:
	<list><item>UDFImageOnlyJob</item><item>HybridImageOnlyJob</item><item>ISOImageOnlyJob</item><item>HFSImageOnlyJob</item></list></para>
                <para>
	For setting and getting imaging related data and parameters refer to IImageOptions documentation.
</para>
                <para>
	Rimage Corporation, Copyright (c) 2007 - 2012
</para>
            </remarks>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IProductionOptions.GetProductionParam(Rimage.Rapid.Dotnet.Api.FixateParamType)">
            <summary>
	Overloaded method, returns a production fixate parameter for a production job.
</summary>
            <param name="key">One of the FixateParamType enum values.</param>
            <returns>Parameter value if the parameter has been set, null otherwise.</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IProductionOptions.GetProductionParam(Rimage.Rapid.Dotnet.Api.ProductionTargetParamType)">
            <summary>
	Overloaded method, returns a production target parameter for a production job.
</summary>
            <param name="key">One of the ProductionTargetParamType enum values.</param>
            <returns>Parameter value if the parameter has been set, null otherwise.</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IProductionOptions.GetProductionParam(Rimage.Rapid.Dotnet.Api.ProductionJobParamType)">
            <summary>
	Overloaded method, returns a production job parameter for a production job.
</summary>
            <param name="key">One of the ProductionJobParamType enum values.</param>
            <returns>Parameter value if the parameter has been set, null otherwise.</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IProductionOptions.SetProductionParam(Rimage.Rapid.Dotnet.Api.FixateParamType,System.String)">
            <summary>
	Overloaded method, sets a production fixate parameter for a production job.
</summary>
            <param name="key">One of the FixateParamType enum values.</param>
            <param name="param">Parameter value. Refer to FixateParamType documentation for possible values.</param>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown if param validation fails.</exception>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IProductionOptions.SetProductionParam(Rimage.Rapid.Dotnet.Api.ProductionTargetParamType,System.String)">
            <summary>
	Overloaded method, sets a production target parameter for a production job.
</summary>
            <param name="key">One of the ProductionTargetParamType enum values.</param>
            <param name="param">Parameter value. Refer to ProductionTargetParamType documentation for possible values.</param>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown if param validation fails.</exception>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IProductionOptions.SetProductionParam(Rimage.Rapid.Dotnet.Api.ProductionJobParamType,System.String)">
            <summary>
	Overloaded method, sets a production job parameter for a production job.
</summary>
            <param name="key">One of the ProductionJobParamType enum values.</param>
            <param name="param">Parameter value. Refer to ProductionJobParamType documentation for possible values.</param>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown if param validation fails.</exception>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IProductionOptions.RemoveCDTextFile(System.String)">
            <summary>
	Removes the CD Text file if one has been previously set. 
</summary>
            <param name="cdTextFile">Full path to the label file.</param>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IProductionOptions.GetCDTextFileParam(System.String,Rimage.Rapid.Dotnet.Api.CDTextFileParamType)">
            <summary>
	Returns the value of a parameter for the specified CD Text file.
</summary>
            <param name="cdTextFile">Full path to the CD Text file.</param>
            <param name="key">One of the CDTextFileParamType enum values.</param>
            <returns>Parameter value if the parameter has been set, null otherwise.</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IProductionOptions.GetCDTextFile">
            <summary>
	Returns the CD Text file if one has been previously set. 
</summary>
            <returns>Full path to a CDText file if one has been specified, null otherwise. </returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IProductionOptions.GetMergeFileParam(System.String,Rimage.Rapid.Dotnet.Api.MergeFileParamType)">
            <summary>
	Returns the value of a parameter for the specified merge file.
</summary>
            <param name="mergeFile">Full path to the merge file.</param>
            <param name="key">One of the MergeFileParamType enum values.</param>
            <returns>Parameter value if the parameter has been set, null otherwise.</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IProductionOptions.RemoveMergeFile(System.String)">
            <summary>
	Removes the merge file if one has been previously set. 
</summary>
            <param name="mergeFile">Full path to the merge file.</param>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IProductionOptions.GetMergeFile">
            <summary>
	Returns the merge file if one has been previously set. 
</summary>
            <returns>Full path to a Merge file if one has been specified, null otherwise. </returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IProductionOptions.GetLabelType(System.String)">
            <summary>
	Returns the label type for the label file if one has been set. 
</summary>
            <param name="labelFile">Full path to the label file.</param>
            <returns>The type of the label file if one has been set (defaults to BTW). See LabelType for more detail. </returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IProductionOptions.GetLabelFileParam(System.String,Rimage.Rapid.Dotnet.Api.LabelFileParamType)">
            <summary>
	Returns the value of a parameter for the specified label file.
</summary>
            <param name="labelFile">Full path to the label file.</param>
            <param name="key">One of the LabelFileParamType enum values.</param>
            <returns>Parameter value if the parameter has been set, null otherwise.</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IProductionOptions.RemoveLabelFile(System.String)">
            <summary>
	Removes the label file if one has been previously set. 
</summary>
            <param name="labelFile">Full path to the label file.</param>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IProductionOptions.GetLabelFile">
            <summary>
	Returns the label file if one has been previously set. 
</summary>
            <returns>Full path to a Label file if one has been specified, null otherwise. </returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IProductionOptions.SetCDTextFileParam(System.String,Rimage.Rapid.Dotnet.Api.CDTextFileParamType,System.String)">
            <summary>
	Sets a parameter for the specified CD Text file.
</summary>
            <param name="cdTextFile">Full path to the CD Text file.</param>
            <param name="key">One of the CDTextFileParamType enum values.</param>
            <param name="param">Parameter value. Refer to CDTextFileParamType documentation for possible values.</param>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown if param validation fails.</exception>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IProductionOptions.SetCDTextFile(System.String,Rimage.Rapid.Dotnet.Api.ConvertToUNC)">
            <summary>
	Specifies a CD Text file.
</summary>
            <param name="cdTextFile">Full path to the CD Text file.</param>
            <param name="convert">If UNCTrue then the API will convert the file path to UNC, otherwise no conversion will be performed.</param>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown if conversion to UNC fails.</exception>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IProductionOptions.SetMergeFileParam(System.String,Rimage.Rapid.Dotnet.Api.MergeFileParamType,System.String)">
            <summary>
	Sets a parameter for the specified merge file.
</summary>
            <param name="mergeFile">Full path to the merge file.</param>
            <param name="key">One of the MergeFileParamType enum values.</param>
            <param name="param">Parameter value. Refer to MergeFileParamType documentation for possible values.</param>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown if param validation fails.</exception>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IProductionOptions.SetMergeFile(System.String,Rimage.Rapid.Dotnet.Api.ConvertToUNC)">
            <summary>
	Specifies a merge file.
</summary>
            <param name="mergeFile">Full path to the merge file.</param>
            <param name="convert">If UNCTrue then the API will convert the file path to UNC, otherwise no conversion will be performed.</param>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown if conversion to UNC fails.</exception>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IProductionOptions.SetLabelFileParam(System.String,Rimage.Rapid.Dotnet.Api.LabelFileParamType,System.String)">
            <summary>
	Sets a parameter for the specified label file.
</summary>
            <param name="labelFile">Full path to the label file.</param>
            <param name="key">One of the LabelFileParamType enum values.</param>
            <param name="param">Parameter value. Refer to LabelFileParamType documentation for possible values.</param>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown if param validation fails.</exception>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IProductionOptions.SetLabelFile(System.String,Rimage.Rapid.Dotnet.Api.ConvertToUNC,Rimage.Rapid.Dotnet.Api.LabelType)">
            <summary>
	Specifies a label file.
	In case of LabelType.AutomaticLabelType, Rapid API will
	determine the actual type by the file extension of labelFile.
</summary>
            <param name="labelFile">Full path to a label file.</param>
            <param name="convert">If UNCTrue then the API will convert the file path to UNC, otherwise no conversion will be performed.</param>
            <param name="labelType">The paramter key to set, see LabelType for more detail.</param>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown if conversion to UNC fails.</exception>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IProductionOptions.GetAudioTracks">
            <summary>
	Initializes a temporary collection of AudioTrack strings to enable enumeration inside a foreach loop.
</summary>
            <returns>Reference to initialized string IEnumerable object.</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of a network or an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IProductionOptions.HasAudioTracks">
            <summary>
	Checks if the job has any audio tracks.
</summary>
            <returns>true if at least one audio track has been set, false otherwise. </returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IProductionOptions.GetAudioTrackParam(System.String,Rimage.Rapid.Dotnet.Api.AudioTrackParamType)">
            <summary>
	Returns the value of a parameter for the specified audio file.
</summary>
            <param name="audioFile">Full path to the audio file.</param>
            <param name="key">One of the AudioTrackParamType enum values.</param>
            <returns>Parameter value if the parameter has been set, null otherwise.</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IProductionOptions.SetAudioTrackParam(System.String,Rimage.Rapid.Dotnet.Api.AudioTrackParamType,System.String)">
            <summary>
	Sets a parameter for the specified audio file.
	If this audio track has not been added before, this method does nothing.
</summary>
            <param name="audioFile">Full path to the audio file.</param>
            <param name="key">One of the AudioTrackParamType enum values.</param>
            <param name="param">Parameter value. Refer to AudioTrackParamType documentation for possible values.</param>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown if param validation fails.</exception>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IProductionOptions.RemoveAudioTrack(System.String)">
            <summary>
	Removes an audio file from the job. If no such audio file
	has been added before, this method does nothing.
</summary>
            <param name="audioFile">Full path to the audio file.</param>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IProductionOptions.AddAudioTrack(System.String,Rimage.Rapid.Dotnet.Api.ConvertToUNC)">
            <summary>
	Specifies another audio file to be recorded on the disc.
</summary>
            <param name="audioFile">Full path to the audio file.</param>
            <param name="convert">If UNCTrue then the API will convert the file path to UNC, otherwise no conversion will be performed.</param>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown if conversion to UNC fails.</exception>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IProductionOptions.GetDataTracks">
            <summary>
	Initializes a temporary collection of DataTrack strings to enable enumeration inside a foreach loop.
</summary>
            <returns>Reference to initialized string IEnumerable object.</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of a network or an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IProductionOptions.HasDataTracks">
            <summary>
	Checks if the job has any data tracks.
</summary>
            <returns>true if at least one data track has been set, false otherwise. </returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IProductionOptions.GetDataTrackParam(System.String,Rimage.Rapid.Dotnet.Api.DataTrackParamType)">
            <summary>
	Returns the value of a parameter for the specified image file.
</summary>
            <param name="imageFile">Full path to the image file.</param>
            <param name="key">One of the DataTrackParamType enum values.</param>
            <returns>Parameter value if the parameter has been set, null otherwise.</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IProductionOptions.SetDataTrackParam(System.String,Rimage.Rapid.Dotnet.Api.DataTrackParamType,System.String)">
            <summary>
	Sets a parameter for the specified image file.
	If this data track has not been added before, this method does nothing.
</summary>
            <param name="imageFile">Full path to the image file.</param>
            <param name="key">One of the DataTrackParamType enum values.</param>
            <param name="param">Parameter value. Refer to DataTrackParamType documentation for possible values.</param>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown if param validation fails.</exception>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IProductionOptions.RemoveDataTrack(System.String)">
            <summary>
	Removes an image file from the job. If no such image file
	has been added before, this method does nothing.
</summary>
            <param name="imageFile">Full path to the image file.</param>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IProductionOptions.AddDataTrack(System.String,Rimage.Rapid.Dotnet.Api.ConvertToUNC)">
            <summary>
	Specifies another image file to be recorded on the disc.
</summary>
            <param name="imageFile">Path to the image file to be recorded. In case of ImageAndRecordJob the data track is set automatically by the API.</param>
            <param name="convert">If UNCTrue then the API will convert the file path to UNC, otherwise no conversion will be performed.</param>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown if conversion to UNC fails.</exception>
            <returns>void</returns>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.IProductionOptions.Copies">
            <summary>
	Gets or sets number of copies to make for a production job.
</summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.IProductionOptions">
            <summary>
	This inteface exposes methods to set and get data and parameters related to producing discs.
</summary>
            <remarks>
                <para>
	Specific job classes which implement this interface are:
	<list><item>ImageAndRecordJob</item><item>ProductionOnlyJob</item></list>
	Three categories of methods are exposed by this interface:
	<list><item>To set and get parameters use SetProductionParam() and GetProductionParam() methods. 
		These methods either set or get a value based on a parameter key, which are detailed in JobEnums.h</item><item>To set and get data parameters specific to that data, such as AddAudioTrack(), use SetAudioTrackParam() 
		and GetAudioTrackParam(). These methods set or add files (specified by a full path). They also allow setting and getting
		of parameters specific to the file - in which case not only the paramater key but also the original file path needs to be specified.
		Adding or setting data methods, such as AddAudioTrack(), offer a second parameter to specify whether the API should convert
		the given file path to UNC. This is advantageous if the server processing the job is running on a different computer on the network.</item><item>To enumerate over audio tracks and data tracks use GetAudioTracks() and GetDataTracks() methods.</item></list></para>
                <para>
	Rimage Corporation, Copyright (c) 2007 - 2012
</para>
            </remarks>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IImageOptions.GetImageParam(Rimage.Rapid.Dotnet.Api.ImagingTargetParamType)">
            <summary>
	Overloaded method, returns an imaging target parameter for an imaging job.
</summary>
            <param name="key">The parameter key, see ImagingTargetParamType for detail.</param>
            <returns>The parameter value. </returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IImageOptions.GetImageParam(Rimage.Rapid.Dotnet.Api.ControlParamType)">
            <summary>
	Overloaded method, returns an imaging control parameter for an imaging job.
</summary>
            <param name="key">The parameter key, see ControlParamType for detail.</param>
            <returns>The parameter value. </returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IImageOptions.GetImageParam(Rimage.Rapid.Dotnet.Api.PVDParamType)">
            <summary>
	Overloaded method, returns an imaging PVD parameter for an imaging job.
</summary>
            <param name="key">The parameter key, see PVDParamType for detail.</param>
            <returns>The parameter value. </returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IImageOptions.GetImageParam(Rimage.Rapid.Dotnet.Api.VolumeNameParamType)">
            <summary>
	Overloaded method, returns an imaging volume name parameter for an imaging job.
</summary>
            <param name="key">The parameter key, see VolumeNameParamType for detail.</param>
            <returns>The parameter value. </returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IImageOptions.GetImageParam(Rimage.Rapid.Dotnet.Api.ISORulesParamType)">
            <summary>
	Overloaded method, returns an imaging ISO rules parameter for an imaging job.
</summary>
            <param name="key">The parameter key, see ISORulesParamType for detail.</param>
            <returns>The parameter value. </returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IImageOptions.GetImageParam(Rimage.Rapid.Dotnet.Api.FormatOptionParamType)">
            <summary>
	Overloaded method, returns an imaging format option parameter for an imaging job.
</summary>
            <param name="key">The parameter key, see FormatOptionParamType for detail.</param>
            <returns>The parameter value. </returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IImageOptions.GetImageParam(Rimage.Rapid.Dotnet.Api.FormatParamType)">
            <summary>
	Overloaded method, returns an imaging format parameter for an imaging job.
</summary>
            <param name="key">The parameter key, see FormatParamType for detail.</param>
            <returns>The parameter value. </returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IImageOptions.GetImageParam(Rimage.Rapid.Dotnet.Api.ImagingJobParamType)">
            <summary>
	Overloaded method, returns an imaging job parameter for an imaging job.
</summary>
            <param name="key">The parameter key, see ImagingJobParamType for detail.</param>
            <returns>The parameter value. </returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IImageOptions.SetImageParam(Rimage.Rapid.Dotnet.Api.ControlParamType,System.String)">
            <summary>
	Overloaded method, sets an imaging control parameter for an imaging job.
</summary>
            <param name="key">The parameter key, see ControlParamType for detail.</param>
            <param name="param">Parameter value.</param>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IImageOptions.SetImageParam(Rimage.Rapid.Dotnet.Api.PVDParamType,System.String)">
            <summary>
	Overloaded method, sets an imaging PVD parameter for an imaging job.
</summary>
            <param name="key">The parameter key, see PVDParamType for detail.</param>
            <param name="param">Parameter value.</param>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IImageOptions.SetImageParam(Rimage.Rapid.Dotnet.Api.VolumeNameParamType,System.String)">
            <summary>
	Overloaded method, sets an imaging volume name parameter for an imaging job.
</summary>
            <param name="key">The parameter key, see VolumeNameParamType for detail.</param>
            <param name="param">Parameter value.</param>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IImageOptions.SetImageParam(Rimage.Rapid.Dotnet.Api.ISORulesParamType,System.String)">
            <summary>
	Overloaded method, sets an imaging ISO rules parameter for an imaging job.
</summary>
            <param name="key">The parameter key, see ISORulesParamType for detail.</param>
            <param name="param">Parameter value.</param>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IImageOptions.SetImageParam(Rimage.Rapid.Dotnet.Api.FormatOptionParamType,System.String)">
            <summary>
	Overloaded method, sets an imaging format option parameter for an imaging job.
</summary>
            <param name="key">The parameter key, see FormatOptionParamType for detail.</param>
            <param name="param">Parameter value.</param>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IImageOptions.SetImageParam(Rimage.Rapid.Dotnet.Api.FormatParamType,System.String)">
            <summary>
	Overloaded method, sets an imaging format parameter for an imaging job.
</summary>
            <param name="key">The parameter key, see FormatParamType for detail.</param>
            <param name="param">Parameter value.</param>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IImageOptions.SetImageParam(Rimage.Rapid.Dotnet.Api.ImagingTargetParamType,System.String)">
            <summary>
	Overloaded method, sets an imaging target parameter for an imaging job.
</summary>
            <param name="key">The parameter key, see ImagingTargetParamType for detail.</param>
            <param name="param">Parameter value.</param>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IImageOptions.SetImageParam(Rimage.Rapid.Dotnet.Api.ImagingJobParamType,System.String)">
            <summary>
	Overloaded method, sets an imaging job parameter for an imaging job.
</summary>
            <param name="key">The parameter key, see ImagingJobParamType for detail.</param>
            <param name="param">Parameter value.</param>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IImageOptions.GetImageFileParam(System.String,Rimage.Rapid.Dotnet.Api.ImageFileParamType)">
            <summary>
	Returns the value of a parameter for the specified image file.
</summary>
            <param name="imageFile">Full path to the image file.</param>
            <param name="key">One of the ImageFileParamType enum values.</param>
            <returns>Parameter value if the parameter has been set, null otherwise.</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IImageOptions.RemoveImageFile(System.String)">
            <summary>
	Removes the image file from the job. If no such image file
	exists, this method does nothing.
</summary>
            <param name="imageFile">The image file file to be removed.</param>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IImageOptions.GetImageFile">
            <summary>
	Returns the image file. 
</summary>
            <returns>Image file path.</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IImageOptions.SetImageFileParam(System.String,Rimage.Rapid.Dotnet.Api.ImageFileParamType,System.String)">
            <summary>
	Sets a parameter for the specified image file.
</summary>
            <param name="imageFile">Full path to the image file.</param>
            <param name="key">One of the ImageFileParamType enum values.</param>
            <param name="param">Parameter value. Refer to ImageFileParamType documentation for possible values.</param>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IImageOptions.SetImageFile(System.String,Rimage.Rapid.Dotnet.Api.ConvertToUNC)">
            <summary>
	Specifies an image file name for the job. If an image file has been set previously, this call replaces the old one.
	Rapid API generates an image file name if this method is not called explicitly.
</summary>
            <param name="imageFile">Image file name to set.</param>
            <param name="convert">If UNCTrue then the API will convert the file path to UNC, otherwise no conversion will be performed.</param>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown if conversion to UNC fails.</exception>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IImageOptions.GetEditLists">
            <summary>
	Initializes a temporary collection of EditList strings to enable enumeration inside a foreach loop.
</summary>
            <returns>Reference to initialized string IEnumerable object.</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of a network or an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IImageOptions.HasEditList">
            <summary>
	Checks if the job has any edit lists.
</summary>
            <returns>true if it has at least one edit list file, false otherwise. </returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IImageOptions.GetEditListFileParam(System.String,Rimage.Rapid.Dotnet.Api.EditListParamType)">
            <summary>
	Returns the value of a parameter for the specified edit list.
</summary>
            <param name="editListFile">Full path to the edit list.</param>
            <param name="key">One of the EditListParamType enum values.</param>
            <returns>Parameter value if the parameter has been set, null otherwise.</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IImageOptions.SetEditListFileParam(System.String,Rimage.Rapid.Dotnet.Api.EditListParamType,System.String)">
            <summary>
	Sets a parameter for the specified edit list.
	If this edit list has not been added before, this method does nothing.
</summary>
            <param name="editListFile">Full path to the edit list.</param>
            <param name="key">One of the EditListParamType enum values.</param>
            <param name="param">Parameter value. Refer to EditListParamType documentation for possible values.</param>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IImageOptions.RemoveEditListFile(System.String)">
            <summary>
	Removes an edit list from the job. If no such edit list
	has been added before, this method does nothing.
</summary>
            <param name="editListFile">The edit list file to be removed.</param>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IImageOptions.AddEditListFile(System.String,Rimage.Rapid.Dotnet.Api.ConvertToUNC)">
            <summary>
	Specifies another edit list to be imaged.
</summary>
            <param name="editListFile">A full path to the edit list file to be imaged.</param>
            <param name="convert">If UNCTrue then the API will convert the file path to UNC, otherwise no conversion will be performed.</param>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown if conversion to UNC fails.</exception>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IImageOptions.GetParentFolders">
            <summary>
	Initializes a temporary collection of ParentFolder strings to enable enumeration inside a foreach loop.
</summary>
            <returns>Reference to initialized string IEnumerable object.</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of a network or an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IImageOptions.HasParentFolder">
            <summary>
	Checks if the job has any parent folders.
</summary>
            <returns>true if it has at least one parent folder, false otherwise. </returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IImageOptions.GetParentFolderParam(System.String,Rimage.Rapid.Dotnet.Api.ParentFolderParamType)">
            <summary>
	Returns the value of a parameter for the specified parent folder.
</summary>
            <param name="parentFolder">Full path to the parent folder.</param>
            <param name="key">One of the ParentFolderParamType enum values.</param>
            <returns>Parameter value if the parameter has been set, null otherwise.</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IImageOptions.SetParentFolderParam(System.String,Rimage.Rapid.Dotnet.Api.ParentFolderParamType,System.String)">
            <summary>
	Sets a parameter for the specified parent folder.
	If this parent folder has not been added before, this method does nothing.
</summary>
            <param name="parentFolder">Full path to the parent folder.</param>
            <param name="key">One of the ParentFolderParamType enum values.</param>
            <param name="param">Parameter value. Refer to ParentFolderParamType documentation for possible values.</param>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IImageOptions.RemoveParentFolder(System.String)">
            <summary>
	Removes a parent folder from the job. If no such parent folder
	has been added before, this method does nothing.
</summary>
            <param name="parentFolder">The parent folder to be removed.</param>
            <returns>void</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IImageOptions.AddParentFolder(System.String,Rimage.Rapid.Dotnet.Api.ConvertToUNC)">
            <summary>
	Specifies another parent folder to be imaged.
</summary>
            <param name="parentFolder">A full path to a parent folder that contains the data to be imaged.</param>
            <param name="convert">If UNCTrue then the API will convert the folder path to UNC, otherwise no conversion will be performed.</param>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown if conversion to UNC fails.</exception>
            <returns>void</returns>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.IImageOptions.AllowSpanning">
            <summary>
	Gets or sets whether spanning is allowed for this job. Spanning is not allowed by default.
</summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.IImageOptions">
            <summary>
	This inteface exposes methods to set and get data and parameters related to creating an image.
</summary>
            <remarks>
                <para>
	Specific job classes which implement this interface are:
	<list><item>ImageAndRecordJob</item><item>ImageOnlyJob</item></list></para>
                <para>
	Three categories of methods are exposed by this interface:
	<list><item>To set and get parameters use SetImageParam() and GetImageParam() methods. 
		These methods either set or get a value based on a parameter key, which are detailed in JobEnums.h</item><item>To set and get data parameters specific to that data, such as AddParentFolder(), SetParentFolderParam(), 
		and GetParentFolderParam(). These methods set or add files (specified by a full path). They also allow setting and getting
		of parameters specific to the file - in which case not only the paramater key but also the original file path needs to be specified.
		Adding or setting data methods, such as AddParentFolder(), offer a second parameter to specify whether the API should convert
		the given file path to UNC. This is advantageous if the server processing the job is running on a different computer on the network.</item><item>To enumerate parent folders and edit lists use GetParentFolders() and GetEditListEnumers() methods.</item></list></para>
                <para>
	Rimage Corporation, Copyright (c) 2007 - 2012
</para>
            </remarks>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.Job.JobClassNameToJobType(System.String)">
            <summary>
	Returns the JobType value of the given Job class name, including Rimage predefined job types and Custom JobType if the Custom Job Factory
    is set to the Client Session before this method is called.
</summary>
            <param name="szJobClassName">The class name of the Job.</param>
            <returns>The corresponding JobType if the name is a valid Job Class that RAPID supports, including custom jobs. If the
class name passed in is NULL or empty, or not a valid Job Class name that RAPID supports, LastJobType will be returned </returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.Job.IsImageAndRecordJob(Rimage.Rapid.Dotnet.Api.JobType)">
            <summary>
	Convenient static method to check if the specified job type represents an image and record job.
</summary>
            <returns>true if the type is in the range of ImageAndRecordJobType and UserImageAndRecordJobTypeLast, false otherwise.</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.Job.IsProductionOnlyJob(Rimage.Rapid.Dotnet.Api.JobType)">
            <summary>
	Convenient static method to check if the specified job type represents a production only job.
</summary>
            <returns>true if the type is in the range of ProductionOnlyJobType and UserProductionOnlyJobTypeLast, false otherwise.</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.Job.IsImageOnlyJob(Rimage.Rapid.Dotnet.Api.JobType)">
            <summary>
	Convenient static method to check if the specified job type represents an image only job.
</summary>
            <returns>true if the type is in the range of ImageOnlyJobType and UserImageOnlyJobTypeLast, false otherwise.</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.Job.Validate">
            <summary>
	Validates the job for parameter correctness and consistency. This method is automatically called 
	by the API before the job is submitted.
</summary>
            <returns>void</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown if any parameter is missing, incorrect, or parameter values are not compatible.</exception>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.Job.Type">
            <summary>
	Gets the type of the job.
</summary>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.Job.GetUserParam(System.Int32)">
            <summary>
	Returns user defined parameter value for the job. Note that the parameter ID has
	to be LAST_JOB_PARAM or greater. See JobEnums.h for more detail.
</summary>
            <param name="key">A key value that is LAST_JOB_PARAM or greater.</param>
            <returns>User defined parameter value if the parameter has been set, NULL otherwise.</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.Job.SetUserParam(System.Int32,System.String)">
            <summary>
	Sets user defined parameter value for the job. Note that the parameter ID has
	to be LAST_JOB_PARAM or greater. This method offers a convenient way to store 
	user defined values	with a particular job. See JobEnums.h for more detail.
</summary>
            <param name="key">A key value that is LAST_JOB_PARAM or greater.</param>
            <param name="param">Specifies the user defined string value for the given parameter.</param>
            <returns>void </returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.Job.GetJobListener">
            <summary>
	Returns the job specific status listener.
</summary>
            <returns>Reference to an object which implements IJobStatusListener if one was set, NULL otherwise.</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.Job.RemoveJobListener">
            <summary>
	Removes the job specific status listener to stop recieving job statuses. 
</summary>
            <returns>void</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.Job.SetJobListener(Rimage.Rapid.Dotnet.Api.IJobStatusListener,System.Int32)">
            <summary>
	Sets the job specific status listener for asynchronously recieving job progress statuses.
</summary>
            <remarks>
	If a default job listener is also set by calling ClientSession.SetDefaultJobListener() then 
	both listeners will be called for every job status.
</remarks>
            <param name="statusListener">An object of a class that implements the IJobStatusListener interface.</param>
            <param name="callbackUIThreadId">The thread ID that the caller intends to have the listener called in. 
	The thread should be a UI thread.</param>
            <returns>void</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown when callbackUIThreadId is an invalid thread ID or the thread does not
	have a UI Window attached.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.Job.SetJobListener(Rimage.Rapid.Dotnet.Api.IJobStatusListener,Rimage.Rapid.Dotnet.Api.CallbackOnMainUIThread)">
            <summary>
	Sets the job specific status listener for asynchronously recieving job progress statuses.
</summary>
            <remarks>
	If a default job listener is also set by calling ClientSession.SetDefaultJobListener() then 
	both listeners will be called for every job status.
</remarks>
            <param name="statusListener">An object of a class that implements the IJobStatusListener interface.</param>
            <param name="callbackType">A flag to indicate if the caller intends to have the listener called
	in the main UI thread of the client application, defaulted to UITrue. For non-UI applications, this
	should always be UIFalse. 
 </param>
            <returns>void</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown when callbackType is true but no UI thread is found in the application.</exception>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.Job.Status">
            <summary>
	Gets Job status for the job.
</summary>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.Job.SubmittedConnectionId">
            <summary>
	Gets the ID of the connection to which the Job was submitted.
</summary>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.Job.GetJobParam(Rimage.Rapid.Dotnet.Api.JobParamType)">
            <summary>
	Returns a common job parameter.
</summary>
            <param name="key">One of the JobParamType enum values.</param>
            <returns>Parameter value if the parameter has been set, NULL otherwise.</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.Job.SetJobParam(Rimage.Rapid.Dotnet.Api.JobParamType,System.String)">
            <summary>
	Sets common parameters for a Job.
</summary>
            <param name="key">One of the JobParamType enum values.</param>
            <param name="param">Parameter value. Refer to JobParamType documentation for possible values.</param>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown if param validation fails.</exception>
            <returns>void</returns>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.Job.JobId">
            <summary>
	Gets or sets the ID of the job. 
	By default, RAPID generates a JobId at creation time. You only need to call set JobId when you want
	your own specific ID for the Job.
</summary>
            <param name="jobId">Job ID string, it must not contain any character in ' \r\n\t&lt;&gt;:"/\|?*=' (note the first space). Also the length
of the JobId is limited to 108 characters.
</param>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown if jobId is longer than 108, or it contains one of the excluded characters listed above.</exception>
            <returns>void </returns>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.Job">
            <summary>
	Represents a Rapid API job and exposes methods for setting and getting job parameters. Job is the base 
	class for all the different job types that are offered by the Rapid API.
</summary>
            <remarks>
                <para>
	There are three main types of jobs - Image only, Production only, and Image and Record.
	There are also predefined subclasses for each of the three main Job classes. To create a specific type of
	Job, use one of the following ClientSession methods:
	<list><item>ClientSession.CreateImageAndRecordJob() to create ImageAndRecordJob and its subclasses.</item><item>ClientSession.CreateImageOnlyJob() to create ImageOnlyJob and its subclasses,</item><item>ClientSession.CreateProductionOnlyJob() to create ProductionOnlyJob and its subclasses,</item></list></para>
                <para>Refer to JobEnums.h for more detail on job types.</para>
                <para>
	Three main classes which extend the Job class, namely ImageAndRecordJob, ImageOnlyJob, and ProductionOnlyJob,
	implement one or two interfaces - IImageOptions and IProductionOptions. These interfaces specify the contract 
	for jobs that are to be processed by Imaging server, Production server, or both. 
	<list><item>IImageOptions interface exposes methods for specifying data to be imaged as well as settings which control 
		how that data is to be imaged - ISO Level 2 or UDF Version 102 for example. ImageAndRecordJob and ImageOnlyJob classes
		implement this interface because both of these job types involve imaging of data</item><item>IProductionOptions interface has methods which allow specifying information such as 
		the label file, the list of audio or data tracks to burn on the disc, and production settings such as media type and 
		number of copies to make. ImageAndRecordJob and ProductionOnlyJob classes implement this interface because both of these 
		job types use Production server to make a disc</item></list></para>
                <para>
	The Job class and its subclasses offer a consistent way to set and get job parameters. 
	The API groups similar parameters into categories. Each category is represented by a setter and getter methods 
	as well as by an enumerated type. The enumerated type encapsulates the possible parameters for the category. 
	All the parameter setter and getter methods follow the same pattern:
	<list><item>void SetSomethingParam(EnumType key, String value)</item><item>String GetSomethingParam(EnumType key)</item></list>
	where the key is one of the enums from JobEnums.h and the value is a string. Sometimes the values can be free form,
	sometimes they are either RAPID_TRUE or RAPID_FALSE, and at other times the value needs to be one of the predefined
	strings. Appropriate values for every param are detailed in JobEnums.h. 
	<list><item>Job.SetJobParam() and Job.GetJobParam() methods are common to all job types.</item><item>IImageOptions.SetImageParam() and IImageOptions.GetImageParam() methods are common to all jobs which create an image.</item><item>IProductionOptions.SetProductionParam() and IProductionOptions.GetProductionParam() methods are common to all jobs which produce discs.</item></list></para>
                <para>
	The Rapid API Job class and its subclasses encapsulate all of the information about a job, including the job's status.
	Every Job object maintains a reference to a JobStatus object, whether the job has already been submitted or not.
	The status object can be queried at any time for the progress of the job.
</para>
                <para>
	Another way to monitor a job's progress of course is to set up job listeners. If a listener is set up, a default one or
	a job specific one, the application will be notified asynchronously with a callback to the IJobStatusListener.OnStatus()
	method every time the status changes. The job ID and a reference to the JobStatus object for that job are passed into the
	callback method. It is much more efficient to be notified through a listener vs. polling for job status proactively.
</para>
                <para>
	Rimage Corporation, Copyright (c) 2007 - 2012
</para>
            </remarks>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.IJobStatusListener.OnJobStatus(System.String,Rimage.Rapid.Dotnet.Api.JobStatus)">
            <summary>
	Callback method, provides the job status for a particular job.
</summary>
            <param name="jobId">ID of the job that the job status is related to.</param>
            <param name="jobStatus">Reference to a copy of the real job status for the particular job. 
	This object is temporary, and therefore should not be stored by the client application for later use. </param>
            <returns>void </returns>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.IJobStatusListener">
            <summary>
	An interface that a client application implements to be asynchronously notified of job status.
</summary>
            <remarks>
                <para>
	Client application creates an object which impelements this interface and sets up a listener by calling a 
	ClientSession.SetDefaultJobListener() method or by calling the corresponding method of the Job class.
</para>
                <para>
	Note: Client application's methods which implement this interface should not throw exceptions back to Rapid API. 
	If an exception is thrown, it will be logged and the API will go on as if nothing happened.
</para>
                <para>
	Rimage Corporation, Copyright (c) 2007 - 2012
</para>
            </remarks>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.JobStatus.IsSpanning">
            <summary>
	Returns whether this job spans discs.
</summary>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.JobStatus.LastStatusUpdateTime">
            <summary>
	Gets the time stamp of the last status update.
</summary>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.JobStatus.ProductionActionWithError">
            <summary>
	Gets Production Action with Error, in this format CCYY-MM-DD HH:MM:SS.
</summary>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.JobStatus.ProductionOrderCompletedTime">
            <summary>
	Gets the time when the Production order was completed by the Production server, in this format CCYY-MM-DD HH:MM:SS.
</summary>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.JobStatus.ProductionOrderReadTime">
            <summary>
	Gets the time when the Production order was picked up by the Production server, in this format CCYY-MM-DD HH:MM:SS.
</summary>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.JobStatus.ImagingOrderCompletedTime">
            <summary>
	Gets the time when the Imaging order was completed by the Imager, in this format CCYY-MM-DD HH:MM:SS.
</summary>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.JobStatus.ImagingOrderReadTime">
            <summary>
	Gets the time when the Imaging order was picked up by the Imager, in this format CCYY-MM-DD HH:MM:SS.
</summary>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.JobStatus.CopiesCompleted">
            <summary>
	Gets the number of copies completed.
</summary>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.JobStatus.CopiesRequested">
            <summary>
	Gets the number of copies requested, i.e., the total number of pages.
</summary>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.JobStatus.GetJobXmlString(Rimage.Rapid.Dotnet.Api.JobXmlStringType)">
            <summary>
	Jobs are submitted to Rimage Server system as XML string, one for Imaging and one for Production.
	This function returns the orginal string(s) submitted to the server. For ImageAndRecordJob, this contains
	the XML string for Imaging and XML string for Production, concatenated together.
</summary>
            <returns>The original Job XML string(s). </returns>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.JobStatus.StatusXmlString">
            <summary>
	Gets the current status XML string. 
</summary>
            <remarks>
	Statuses are returned by Rimage Server system as XML string, 
	Rapid API parses the XML string to fill the	status object. 
	This method returns the current status XML string. 
</remarks>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.JobStatus.ErrorMessage">
            <summary>
	Gets error string if there is one. 
</summary>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.JobStatus.ErrorCode">
            <summary>
	Gets the error code if there is one. 
</summary>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.JobStatus.PercentComplete">
            <summary>
	Gets the percentage complete. Note that for ImageAndRecordJob and its subclasses, the percentage
	complete is for the whole job, it shows 50% for Imaging and another 50% for Production.
</summary>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.JobStatus.Stage">
            <summary>
	Gets the Job stage, this is for display purpose.
</summary>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.JobStatus.State">
            <summary>
	Gets the Job state, see JobStateType for more detail .
</summary>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.JobStatus.Originator">
            <summary>
	Gets the Originator string of the job, a copy from the the Job object.
</summary>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.JobStatus.ProductionServerId">
            <summary>
	Gets the Production Server ID this job was sumbitted to.
</summary>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.JobStatus.ImagingServerId">
            <summary>
	Gets the Imaging Server ID this job was sumbitted to.
</summary>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.JobStatus.JobId">
            <summary>
	Gets Job ID that this status object is related to.
</summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.JobStatus">
            <summary>
	Represents a snap shot in time of job status. Exposes methods for getting various status information.
</summary>
            <remarks>
                <para>
    JobStatus is part of a Job object, it exists for the life time of the Job. A client should not try
	to delete JobStatus objects. The JobStatus objects provided in OnJobStatus() of IJobStatusListener are temporary
	copies of the real JobStatus object of the given job. They are temporary and should not be stored for
    later use by the client.
</para>
                <para>
	Rimage Corporation, Copyright (c) 2007 - 2012
</para>
            </remarks>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ProductionServer.GetProductionParam(Rimage.Rapid.Dotnet.Api.DiagnosticsParamType)">
            <summary>
	Returns a Diagnostics setting based on the key provided.
</summary>
            <remarks>
	Note: First time a GetProductionParam() method is called, RefreshParams() is called on the caller's behalf.
</remarks>
            <param name="key">Specifies the setting value to return. Some of the choices are EnableScsiTracingParam, EnableSerialTracingParam, etc. Refer to ServerEnums.h in the SDK installation folder.</param>
            <returns>The string value representation of the requested setting. </returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ProductionServer.SetProductionParam(Rimage.Rapid.Dotnet.Api.DiagnosticsParamType,System.String)">
            <summary>
	Sets a Diagnostics setting based on the key provided.
</summary>
            <param name="key">Specifies the setting to change. Some of the choices are EnableScsiTracingParam, EnableSerialTracingParam, etc. Refer to ServerEnums.h in the SDK installation folder.</param>
            <param name="value">The string value representation of the setting.</param>
            <returns>void</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of an invalid parameter value, or an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ProductionServer.GetProductionParam(Rimage.Rapid.Dotnet.Api.KioskModeParamType)">
            <summary>
	Returns a Kiosk Mode setting based on the key provided.
</summary>
            <remarks>
	Note: First time a GetProductionParam() method is called, RefreshParams() is called on the caller's behalf.
</remarks>
            <param name="key">Specifies the setting value to return. Some of the choices are RecoverOrdersParam, StartupWithoutPrinterParam, etc. Refer to ServerEnums.h in the SDK installation folder.</param>
            <returns>The string value representation of the requested setting. </returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ProductionServer.SetProductionParam(Rimage.Rapid.Dotnet.Api.KioskModeParamType,System.String)">
            <summary>
	Sets a Kiosk Mode setting based on the key provided.
</summary>
            <param name="key">Specifies the setting to change. Some of the choices are RecoverOrdersParam, StartupWithoutPrinterParam, etc. Refer to ServerEnums.h in the SDK installation folder.</param>
            <param name="value">The string value representation of the setting.</param>
            <returns>void</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of an invalid parameter value, or an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ProductionServer.GetProductionParam(Rimage.Rapid.Dotnet.Api.AutoBulkReadingParamType)">
            <summary>
	Returns a Auto Bulk Reading setting based on the key provided.
</summary>
            <remarks>
	Note: First time a GetProductionParam() method is called, RefreshParams() is called on the caller's behalf.
</remarks>
            <param name="key">Specifies the setting value to return. Some of the choices are BaseFolderForImagesParam, UseVolumeIdAsFolderNameParam, etc. Refer to ServerEnums.h in the SDK installation folder.</param>
            <returns>The string value representation of the requested setting. </returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ProductionServer.SetProductionParam(Rimage.Rapid.Dotnet.Api.AutoBulkReadingParamType,System.String)">
            <summary>
	Sets a Auto Bulk Reading setting based on the key provided.
</summary>
            <param name="key">Specifies the setting to change. Some of the choices are BaseFolderForImagesParam, UseVolumeIdAsFolderNameParam, etc. Refer to ServerEnums.h in the SDK installation folder.</param>
            <param name="value">The string value representation of the setting.</param>
            <returns>void</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of an invalid parameter value, or an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ProductionServer.GetProductionParam(Rimage.Rapid.Dotnet.Api.ReadingParamType)">
            <summary>
	Returns a Reading setting based on the key provided.
</summary>
            <remarks>
	Note: First time a GetProductionParam() method is called, RefreshParams() is called on the caller's behalf.
</remarks>
            <param name="key">Specifies the setting value to return. Some of the choices are PreferredReaderParam, AudioReadSpeedParam, etc. Refer to ServerEnums.h in the SDK installation folder.</param>
            <returns>The string value representation of the requested setting. </returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ProductionServer.SetProductionParam(Rimage.Rapid.Dotnet.Api.ReadingParamType,System.String)">
            <summary>
	Sets a Reading setting based on the key provided.
</summary>
            <param name="key">Specifies the setting to change. Some of the choices are PreferredReaderParam, AudioReadSpeedParam, etc. Refer to ServerEnums.h in the SDK installation folder.</param>
            <param name="value">The string value representation of the setting.</param>
            <returns>void</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of an invalid parameter value, or an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ProductionServer.GetProductionParam(Rimage.Rapid.Dotnet.Api.PrintingParamType)">
            <summary>
	Returns a Printing setting based on the key provided.
</summary>
            <remarks>
	Note: First time a GetProductionParam() method is called, RefreshParams() is called on the caller's behalf.
</remarks>
            <param name="key">Specifies the setting value to return. Some of the choices are SimulatePrintingSettingParam, ErrorOnLowInkLevelParam, etc. Refer to ServerEnums.h in the SDK installation folder.</param>
            <returns>The string value representation of the requested setting. </returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ProductionServer.SetProductionParam(Rimage.Rapid.Dotnet.Api.PrintingParamType,System.String)">
            <summary>
	Sets a Printing setting based on the key provided.
</summary>
            <param name="key">Specifies the setting to change. Some of the choices are SimulatePrintingSettingParam, ErrorOnLowInkLevelParam, etc. Refer to ServerEnums.h in the SDK installation folder.</param>
            <param name="value">The string value representation of the setting.</param>
            <returns>void</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of an invalid parameter value, or an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ProductionServer.GetProductionParam(Rimage.Rapid.Dotnet.Api.VerifyParamType)">
            <summary>
	Returns a Verify setting based on the key provided.
</summary>
            <remarks>
	Note: First time a GetProductionParam() method is called, RefreshParams() is called on the caller's behalf.
</remarks>
            <param name="key">Specifies the setting value to return. Some of the choices are EnableVerificationParam, UseChecksumDLLParam, etc. Refer to ServerEnums.h in the SDK installation folder.</param>
            <returns>The string value representation of the requested setting. </returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ProductionServer.SetProductionParam(Rimage.Rapid.Dotnet.Api.VerifyParamType,System.String)">
            <summary>
	Sets a Verify setting based on the key provided.
</summary>
            <param name="key">Specifies the setting to change. Some of the choices are EnableVerificationParam, UseChecksumDLLParam, etc. Refer to ServerEnums.h in the SDK installation folder.</param>
            <param name="value">The string value representation of the setting.</param>
            <returns>void</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of an invalid parameter value, or an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ProductionServer.GetProductionParam(Rimage.Rapid.Dotnet.Api.RecordingParamType)">
            <summary>
	Returns a Recording setting based on the key provided.
</summary>
            <remarks>
	Note: First time a GetProductionParam() method is called, RefreshParams() is called on the caller's behalf.
</remarks>
            <param name="key">Specifies the setting value to return. Some of the choices are SimulateRecordingSettingParam, MaxDVDRecordingSpeedParam, etc. Refer to ServerEnums.h in the SDK installation folder.</param>
            <returns>The string value representation of the requested setting. </returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ProductionServer.SetProductionParam(Rimage.Rapid.Dotnet.Api.RecordingParamType,System.String)">
            <summary>
	Sets a Recording setting based on the key provided.
</summary>
            <param name="key">Specifies the setting to change. Some of the choices are SimulateRecordingSettingParam, MaxDVDRecordingSpeedParam, etc. Refer to ServerEnums.h in the SDK installation folder.</param>
            <param name="value">The string value representation of the setting.</param>
            <returns>void</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of an invalid parameter value, or an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ProductionServer.GetProductionParam(Rimage.Rapid.Dotnet.Api.CachingParamType)">
            <summary>
	Returns a Caching setting based on the key provided.
</summary>
            <remarks>
	Note: First time a GetProductionParam() method is called, RefreshParams() is called on the caller's behalf.
</remarks>
            <param name="key">Specifies the setting value to return. Some of the choices are AllowStaticCachingParam, AllowOverlapRecordingParam, etc. Refer to ServerEnums.h in the SDK installation folder.</param>
            <returns>The string value representation of the requested setting. </returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ProductionServer.SetProductionParam(Rimage.Rapid.Dotnet.Api.CachingParamType,System.String)">
            <summary>
	Sets a Caching setting based on the key provided.
</summary>
            <param name="key">Specifies the setting to change. Some of the choices are AllowStaticCachingParam, AllowOverlapRecordingParam, etc. Refer to ServerEnums.h in the SDK installation folder.</param>
            <param name="value">The string value representation of the setting.</param>
            <returns>void</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of an invalid parameter value, or an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ProductionServer.GetProductionParam(Rimage.Rapid.Dotnet.Api.ProductionModeParamType)">
            <summary>
	Returns a Mode setting based on the key provided.
</summary>
            <remarks>
	Note: First time a GetProductionParam() method is called, RefreshParams() is called on the caller's behalf.
</remarks>
            <param name="key">Specifies the setting value to return. Some of the choices are ServerModeParam, FifoModeParam, etc. Refer to ServerEnums.h in the SDK installation folder.</param>
            <returns>The string value representation of the requested setting. </returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ProductionServer.SetProductionParam(Rimage.Rapid.Dotnet.Api.ProductionModeParamType,System.String)">
            <summary>
	Sets a Mode setting based on the key provided.
</summary>
            <param name="key">Specifies the setting to change. Some of the choices are ServerModeParam, FifoModeParam, etc. Refer to ServerEnums.h in the SDK installation folder.</param>
            <param name="value">The string value representation of the setting.</param>
            <returns>void</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of an invalid parameter value, or an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ProductionServer.EnableRecorder(System.UInt16,System.UInt16)">
            <summary>
	Enables a previously disabled Recorder.
</summary>
            <param name="autoloaderIndex">Specifies the 0 based index of the Autoloader.</param>
            <param name="recorderIndex">Specifies the 0 based index of the Recorder.</param>
            <returns>void</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of an invalid Autoloader or Recorder index, ProductionServer couldn't enable the Recorder, a network or an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ProductionServer.EnablePrinter(System.UInt16,System.UInt16)">
            <summary>
	Enables a previously disabled Printer.
</summary>
            <param name="autoloaderIndex">Specifies the 0 based index of the Autoloader.</param>
            <param name="printerIndex">Specifies the 0 based index of the Printer.</param>
            <returns>void</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of an invalid Autoloader or Printer index, ProductionServer couldn't enable the Printer, a network or an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ProductionServer.GetMailslotParam(System.UInt16,System.UInt16,Rimage.Rapid.Dotnet.Api.MailslotParamType)">
            <summary>
	Returns specific Mailslot setting based on the key provided.
</summary>
            <remarks>
	Note: First time a GetBinParam() method is called, RefreshParams() is called on the caller's behalf.
</remarks>
            <param name="autoloaderIndex">Specifies the 0 based index of the Autoloader.</param>
            <param name="mailslotIndex">Specifies the 0 based index of the Mailslot.</param>
            <param name="key">Specifies the setting value to return. Some of the choices are MailslotSettingParam, etc. Refer to ServerEnums.h in the SDK installation folder.</param>
            <returns>The string value representation of the requested setting. </returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of an invalid Autoloader or Mailslot index, a network or an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ProductionServer.SetMailslotParam(System.UInt16,System.UInt16,Rimage.Rapid.Dotnet.Api.MailslotParamType,System.String)">
            <summary>
	Sets a specific Mailslot setting based on the key provided.
</summary>
            <param name="autoloaderIndex">Specifies the 0 based index of the Autoloader.</param>
            <param name="mailslotIndex">Specifies the 0 based index of the Mailslot.</param>
            <param name="key">Specifies the setting to change. Some of the choices are MailslotSettingParam, etc. Refer to ServerEnums.h in the SDK installation folder.</param>
            <param name="value">The string value representation of the setting.</param>
            <returns>void</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of an invalid Autoloader or Mailslot index, an invalid parameter value, or an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ProductionServer.ResetInputBins(System.UInt16)">
            <summary>
	Resets input Bins on an Autoloader.
</summary>
            <remarks>
	This is useful when an Input/Output bin needs to be reverted back to Input mode.
</remarks>
            <param name="autoloaderIndex">Specifies the 0 based index of the Autoloader.</param>
            <returns>void</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of an invalid Autoloader index, a network or an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ProductionServer.GetBinParam(System.UInt16,System.UInt16,Rimage.Rapid.Dotnet.Api.BinParamType)">
            <summary>
	Returns specific Bin setting based on the key provided.
</summary>
            <remarks>
	Note: First time a GetBinParam() method is called, RefreshParams() is called on the caller's behalf.
</remarks>
            <param name="autoloaderIndex">Specifies the 0 based index of the Autoloader.</param>
            <param name="binIndex">Specifies the 0 based index of the Bin.</param>
            <param name="key">Specifies the setting value to return. Some of the choices are BinSettingParam, etc. Refer to ServerEnums.h in the SDK installation folder.</param>
            <returns>The string value representation of the requested setting. </returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of an invalid Autoloader or Bin index, a network or an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ProductionServer.SetBinParam(System.UInt16,System.UInt16,Rimage.Rapid.Dotnet.Api.BinParamType,System.String)">
            <summary>
	Sets a specific Bin setting based on the key provided.
</summary>
            <param name="autoloaderIndex">Specifies the 0 based index of the Autoloader.</param>
            <param name="binIndex">Specifies the 0 based index of the Bin.</param>
            <param name="key">Specifies the setting to change. Some of the choices are BinSettingParam, etc. Refer to ServerEnums.h in the SDK installation folder.</param>
            <param name="value">The string value representation of the setting.</param>
            <returns>void</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of an invalid Autoloader or Bin index, an invalid parameter value, or an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ProductionServer.EnableAutoloader(System.UInt16)">
            <summary>
	Enables a previously disabled Autoloader.
</summary>
            <param name="autoloaderIndex">Specifies the 0 based index of the Autoloader.</param>
            <returns>void</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of an invalid Autoloader index, ProductionServer couldn't enable the Autoloader, a network or an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ProductionServer.GetAutoloaderParam(System.UInt16,Rimage.Rapid.Dotnet.Api.AutoloaderParamType)">
            <summary>
	Returns specific Autoloader setting based on the key provided.
</summary>
            <remarks>
	Note: First time a GetAutoloaderParam() method is called, RefreshParams() is called on the caller's behalf.
</remarks>
            <param name="autoloaderIndex">Specifies the 0 based index of the Autoloader.</param>
            <param name="key">Specifies the setting value to return. Some of the choices are AutoloaderMediaTypeParam, AutoloaderMediaSizeParam, etc. Refer to ServerEnums.h in the SDK installation folder.</param>
            <returns>The string value representation of the requested setting. </returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of an invalid Autoloader index, a network or an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ProductionServer.SetAutoloaderParam(System.UInt16,Rimage.Rapid.Dotnet.Api.AutoloaderParamType,System.String)">
            <summary>
	Sets a specific Autoloader setting based on the key provided.
</summary>
            <param name="autoloaderIndex">Specifies the 0 based index of the Autoloader.</param>
            <param name="key">Specifies the setting to change. Some of the choices are AutoloaderMediaSizeParam, AutoloaderMediaTypeParam, etc. Refer to ServerEnums.h in the SDK installation folder.</param>
            <param name="value">The string value representation of the setting.</param>
            <returns>void</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of an invalid Autoloader index, an invalid parameter value, or an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ProductionServer.GetReaderInfo(System.UInt16,System.UInt16,Rimage.Rapid.Dotnet.Api.ReaderInfoType)">
            <summary>
	Returns specific Reader information based on the key provided.
</summary>
            <remarks>
	Note: First time a GetReaderInfo() method is called, RefreshInfo(RefreshAutoloaderInfo) is called on the caller's behalf.
</remarks>
            <param name="autoloaderIndex">Specifies the 0 based index of the Autoloader.</param>
            <param name="readerIndex">Specifies the 0 based index of the Reader. This is typically 0.</param>
            <param name="key">Specifies the information to return. Some of the choices are ReaderInquiryString, CanReadDVD, etc. Refer to ServerEnums.h in the SDK installation folder.</param>
            <returns>The string value representation of the requested information. </returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of an invalid Autoloader index, a network or an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ProductionServer.GetRecorderInfo(System.UInt16,System.UInt16,Rimage.Rapid.Dotnet.Api.RecorderInfoType)">
            <summary>
	Returns specific Recorder information based on the key provided.
</summary>
            <remarks>
	Note: First time a GetRecorderInfo() method is called, RefreshInfo(RefreshAutoloaderInfo) is called on the caller's behalf.
</remarks>
            <param name="autoloaderIndex">Specifies the 0 based index of the Autoloader.</param>
            <param name="recorderIndex">Specifies the 0 based index of the Recorder. This is typically 0.</param>
            <param name="key">Specifies the information to return. Some of the choices are RecorderInquiryString, RecorderDiscCount, etc. Refer to ServerEnums.h in the SDK installation folder.</param>
            <returns>The string value representation of the requested information. </returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of an invalid Autoloader index, a network or an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ProductionServer.GetPrinterInfo(System.UInt16,System.UInt16,Rimage.Rapid.Dotnet.Api.PrinterInfoType)">
            <summary>
	Returns specific Printer information based on the key provided.
</summary>
            <remarks>
	Note: First time a GetPrinterInfo() method is called, RefreshInfo(RefreshAutoloaderInfo) is called on the caller's behalf.
</remarks>
            <param name="autoloaderIndex">Specifies the 0 based index of the Autoloader.</param>
            <param name="printerIndex">Specifies the 0 based index of the Printer. This is typically 0.</param>
            <param name="key">Specifies the information to return. Some of the choices are PrinterType, PrinterDiscCount, etc. Refer to ServerEnums.h in the SDK installation folder.</param>
            <returns>The string value representation of the requested information. </returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of an invalid Autoloader index, a network or an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ProductionServer.GetMailslotInfo(System.UInt16,System.UInt16,Rimage.Rapid.Dotnet.Api.MailslotInfoType)">
            <summary>
	Returns specific Mailslot information based on the key provided.
</summary>
            <remarks>
	Note: First time a GetMailslotInfo() method is called, RefreshInfo(RefreshAutoloaderInfo) is called on the caller's behalf.
</remarks>
            <param name="autoloaderIndex">Specifies the 0 based index of the Autoloader.</param>
            <param name="mailslotIndex">Specifies the 0 based index of the Mailslot. This is typically 0.</param>
            <param name="key">Specifies the information to return. Some of the choices are MailslotUsage, MailslotNumberOfSlots, etc. Refer to ServerEnums.h in the SDK installation folder.</param>
            <returns>The string value representation of the requested information. </returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of an invalid Autoloader index, a network or an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ProductionServer.GetBinInfo(System.UInt16,System.UInt16,Rimage.Rapid.Dotnet.Api.BinInfoType)">
            <summary>
	Returns specific Bin information based on the key provided.
</summary>
            <remarks>
	Note: First time a GetBinInfo() method is called, RefreshInfo(RefreshAutoloaderInfo) is called on the caller's behalf.
</remarks>
            <param name="autoloaderIndex">Specifies the 0 based index of the Autoloader.</param>
            <param name="binIndex">Specifies the 0 based index of the Bin.</param>
            <param name="key">Specifies the information to return. Some of the choices are BinUsage, BinDiscsRemaining, etc. Refer to ServerEnums.h in the SDK installation folder.</param>
            <returns>The string value representation of the requested information. </returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of an invalid Autoloader index, a network or an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ProductionServer.GetAutoloaderInfo(System.UInt16,Rimage.Rapid.Dotnet.Api.AutoloaderInfoType)">
            <summary>
	Returns specific Autoloader information based on the key provided.
</summary>
            <remarks>
	Note: First time a GetAutoloaderInfo() method is called, RefreshInfo(RefreshAutoloaderInfo) is called on the caller's behalf.
</remarks>
            <param name="autoloaderIndex">Specifies the 0 based index of the Autoloader.</param>
            <param name="key">Specifies the information to return. Some of the choices are AutoloaderType, AutoloaderMediaType, etc. Refer to ServerEnums.h in the SDK installation folder.</param>
            <returns>The string value representation of the requested information. </returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of an invalid Autoloader index, a network or an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ProductionServer.GetProductionInfo(Rimage.Rapid.Dotnet.Api.ProductionServerInfoType)">
            <summary>
	Returns this ProductionServer information based on the key provided.
</summary>
            <remarks>
	Note: First time a GetProductionInfo() method is called, RefreshInfo(RefreshBasicInfo) is called on the caller's behalf.
</remarks>
            <param name="key">Specifies the information to return. Some of the choices are CanStream, CopiesProduced, etc. Refer to ServerEnums.h in the SDK installation folder.</param>
            <returns>The string value representation of the requested information. </returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ProductionServer.GetNumReaders(System.UInt16)">
            <summary>
	Returns the number of Readers for a specific Autoloader.
</summary>
            <param name="autoloaderIndex">Specifies the 0 based index of the Autoloader containing the Readers.</param>
            <returns>Number of Autoloader Readers</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of an invalid Autoloader index.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ProductionServer.GetNumRecorders(System.UInt16)">
            <summary>
	Returns the number of Recorders for a specific Autoloader. This can be 1, 2, or 4.
</summary>
            <param name="autoloaderIndex">Specifies the 0 based index of the Autoloader containing the Recorders.</param>
            <returns>Number of Autoloader Recorders</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of an invalid Autoloader index.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ProductionServer.GetNumPrinters(System.UInt16)">
            <summary>
	Returns the number of Printers for a specific Autoloader. This is typically 1.
</summary>
            <param name="autoloaderIndex">Specifies the 0 based index of the Autoloader containing the Printers.</param>
            <returns>Number of Autoloader Printers</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of an invalid Autoloader index.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ProductionServer.GetNumMailslots(System.UInt16)">
            <summary>
	Returns the number of Mailslots for a specific Autoloader.
</summary>
            <param name="autoloaderIndex">Specifies the 0 based index of the Autoloader containing the Mailslots.</param>
            <returns>Number of Autoloader Mailslots</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of an invalid Autoloader index.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ProductionServer.GetNumBins(System.UInt16)">
            <summary>
	Returns the number of Bins for a specific Autoloader.
</summary>
            <param name="autoloaderIndex">Specifies the 0 based index of the Autoloader containing the Bins.</param>
            <returns>Number of Autoloader Bins</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of an invalid Autoloader index.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ProductionServer.GetNumAutoloaders">
            <summary>
	Returns the number of Autoloaders under the control of this ProductionServer.
</summary>
            <returns>Number of Autoloaders</returns>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.ProductionServer">
            <summary>
	Represents a Rimage Production server and exposes methods specific to the Production server.
</summary>
            <remarks>
                <para>
	ProductionServer extends the Server class and adds functionality specific to the Production server.
	ProductionServer typically controlls one or more Rimage Autoloaders. An Autoloader typically contains
	disc input and output bins, a number of recorders, and a printer. ProductionServer allows the caller
	to get information about all of these elements as well as make setting changes.
</para>
                <para>
	The methods conforming to the 'GetNum*()" signature, such as GetNumAutoloaders(), return the counts of various
	components (recorders, bins, etc.). Once the count of a specific component is known methods which take component
	indexes can be used. These include query methods such as GetAutoloaderInfo(), GetRecorderInfo(), SetAutoloaderParam(), 
	and GetBinParam() as well as setter methods such as SetAutoloaderParam() and SetBinParam().
</para>
                <para>
	There are settings that don't pertain to any specific element of the Autoloader, but effect the ProductionServer as a whole.
	Methods GetProductionParam() and SetProductionParam() allow for querying and changing these settings on the server. These
	methods are overloaded to take in different enumerated types as keys. Key values are grouped into several enum constructs
	to produce logical groupping of settings.
</para>
                <para>
	To change ProductionServer settings use multiple Set*Param() calls (be it SetProductionParam() or SetAutoloaderParam(), etc.)
	followed by a call to CommitParamChanges() method.
</para>
                <para>
	To get ProductionServer specific read-only information use RefreshInfo() and GetProductionInfo() methods.
</para>
                <para>
	Refer to Server class for more information on what you can do with this class.
</para>
                <para>
	Rimage Corporation, Copyright (c) 2007 - 2012
</para>
            </remarks>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ImagingServer.GetImagingInfo(Rimage.Rapid.Dotnet.Api.ImagingServerInfoType)">
            <summary>
	Returns this ImagingServer information based on the key provided.
</summary>
            <remarks>
	Note: First time a GetImagingInfo() method is called, RefreshInfo(RefreshBasicInfo) is called on the caller's behalf.
</remarks>
            <param name="key">Specifies the information to return. Some of the choices are ImagesWritten, WaitForSpace, etc. Refer to ServerEnums.h.</param>
            <returns>The string value representation of the requested information. </returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of an internal problem.</exception>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.ImagingServer">
            <summary>
	Represents a Rimage Imaging server and exposes methods specific to the Imaging server.
</summary>
            <remarks>
                <para>
	ImagingServer extends the Server class and adds functionality specific to the Imaging server. 
</para>
                <para>
	To get ImagingServer specific read-only information use RefreshInfo() and GetImagingInfo() methods.
</para>
                <para>
	Note: SuspendActiveOrder(), ResumeActiveOrder(), and ChangeActiveOrderQuantity() don't apply to ImagingServer.
</para>
                <para>
	Refer to Server class for more information on what you can do with this class.
</para>
                <para>
	Rimage Corporation, Copyright (c) 2007 - 2012
</para>
            </remarks>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.Server.GetXml">
            <summary>
	Returns the last xml document sent to this client application by the server.
</summary>
            <remarks>
	This is the method to call to get the result of server request after a call to ExecuteRequest().
</remarks>
            <returns>Last xml as a string.</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of a network or an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.Server.ExecuteRequest(System.String,System.Int32)">
            <summary>
	Sends a server request xml to the server for execution. To get the response xml, call the GetXml() method.
</summary>
            <remarks>
	Note: This method exists only for those cases where a specific server request isn't handled through
	other methods on the Server class. In those cases a client application writer would create the xml request
	string conforming to either the ImageServerRequest or the ProductionServerRequest DTD. XmlWriter can be 
	extended for this purpose.
</remarks>
            <param name="requestXml">Specifies the xml string conforming to either the ImageServerRequest or the ProductionServerRequest DTD.</param>
            <param name="timeout">Specifies number of milliseconds to wait before there is no response and then timeout.</param>
            <returns>void</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of a server, network, or an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.Server.RemoveAcknowledgedAlerts">
            <summary>
	Removes ServerAlert objects that have been acknowledged from an internal list of alerts.
	Future calls to GetAlert() with acknowledged alert Ids will return null.
</summary>
            <returns>void</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of a network or an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.Server.GetAlert(System.String)">
            <summary>
	Returns a ServerAlert or ServerError specified by the alertId.
</summary>
            <remarks>
	An alertId is given to the caller through ISessionStatusListener::OnServerAlert() callback method if
	an ISessionStatusListener interface is implemented and set up using the ClientSession class.
	Note: A ServerAlert or ServerError could be active or acknowledged.
</remarks>
            <param name="alertId">Specifies the ServerAlert or ServerError to return.</param>
            <returns>The ServerAlert or ServerError requested by the alertId. A null is returned if the alert doesn't exist.</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown if alertId is null and in case of an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.Server.GetAlerts">
            <summary>
	Initializes a temporary collection of ServerAlert object references to enable enumeration inside a foreach loop.
</summary>
            <remarks>
	Note: A ServerAlert or ServerError could be active or acknowledged.
</remarks>
            <returns>Reference to initialized ServerAlert IEnumerable object.</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of a network or an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.Server.GetPendingOrders(System.Int32,System.Boolean)">
            <summary>
	Initializes a temporary collection of pending ServerOrder object references to enable enumeration inside a foreach loop.
</summary>
            <remarks>
	ServerOrder enumerable allows enumeration over pending ImagingOrder, ProductionOrder or OrderSet objects.
</remarks>
            <param name="maxOrders">Specifies maximum number of orders to return. 
	If maxOrders=-1, all orders in the cluster are returned.
	If maxOrders=20 and a cluster has 100 orders, only 20 are returned.
	If maxOrders=20 and a cluster has only 10 orders, then only 10 are returned.</param>
            <param name="targetedOrdersOnly">If true then only orders specifically targeted for this server are returned, 
	otherwise orders that are not targeted to a servera are returned as well. Defaulted to true.</param>
            <returns>void</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of a network or an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.Server.GetActiveOrders">
            <summary>
	Initializes a temporary collection of ServerOrder object references to enable enumeration inside a foreach loop.
</summary>
            <remarks>
	ServerOrder enumerable allows enumeration over ImagingOrder or ProductionOrder objects, depending on the type of the server.
<para>
	Note: RefreshInfo(RefreshActiveOrders) is called before the enumerable is initialized
</para></remarks>
            <returns>Reference to initialized ServerOrder IEnumerable object.</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of a network or an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.Server.GetCommandLineSwitches">
            <summary>
	Initializes a temporary collection of CommandLineSwitch strings to enable enumeration inside a foreach loop.
</summary>
            <remarks>
	Note: RefreshInfo(RefreshCommandLineSwitches) is called before the enumerator is initialized
</remarks>
            <returns>Reference to initialized string IEnumerator object.</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of a network or an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.Server.GetSessionLogs">
            <summary>
	Initializes a temporary collection of SessionLog strings to enable enumeration inside a foreach loop.
</summary>
            <remarks>
	Note: RefreshInfo(RefreshSessionLog) is called before the enumerator is initialized
</remarks>
            <returns>Reference to initialized string IEnumerable object.</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of a network or an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.Server.ChangeActiveOrderQuantity(System.String,System.Int32)">
            <summary>
	Changes the number of copies produced by a currently active order on this server.
</summary>
            <param name="orderId">Specifies the order to change.</param>
            <returns>void</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown if orderId is null and in case of an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.Server.ResumeActiveOrder(System.String)">
            <summary>
	Resumes a suspended order on this server.
</summary>
            <param name="orderId">Specifies the order to resume.</param>
            <returns>void</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown if orderId is null and in case of an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.Server.SuspendActiveOrder(System.String)">
            <summary>
	Suspends a currently active order on this server. This order can be resumed later by using ResumeActiveOrder().
</summary>
            <param name="orderId">Specifies the order to suspend.</param>
            <returns>void</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown if orderId is null and in case of an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.Server.CancelActiveOrder(System.String,System.Boolean)">
            <summary>
	Cancels a currently active order on this server.
</summary>
            <param name="orderId">Specifies the order to cancel.</param>
            <param name="abortInProcess">Specifies whether the server aborts this order right away or completes the current copy.</param>
            <returns>void</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown if orderId is null and in case of an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.Server.ClearPassword">
            <summary>
	Removes the server password for this server.
</summary>
            <remarks>
	Note: VerifyPassword() has to be called first, otherwise an exception will be thrown.
</remarks>
            <returns>void</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown if VerifyPassword() has not been called on this server or in case of a network or an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.Server.VerifyPassword(System.String)">
            <summary>
	Verifies that the passed in password is the same as what is set on the server.
</summary>
            <remarks>
	Note: After VerifyPassword() has been called once for this server it is cached and used for 
	subsequent password protected operations. Refer to SetPassword() method documentation for a 
	list of protected methods.
</remarks>
            <param name="password">Specifies the password to verify.</param>
            <returns>void</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown if VerifyPassword() has not been called on this server or in case of a network or an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.Server.SetPassword(System.String,System.String)">
            <summary>
	Sets a password on the server.
</summary>
            <remarks>
	Note: Certain operations on a server can be password protected. If a passwod has not been set on a server then these
	operations are not secured. Here is the list of those methods:
<para>
	SetParam() / CommitParamChanges() combination, Pause(), Resume(), Stop(), ChangeActiveOrderQuantity(),
	CancelActiveOrder(), SuspendActiveOrder(), ResumeActiveOrder().
</para></remarks>
            <param name="oldPassword">Specifies the current password.</param>
            <param name="newPassword">Specifies the new password to set on this server.</param>
            <returns>void</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown if VerifyPassword() has not been called on this server or in case of a network or an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.Server.IsPasswordSet">
            <summary>
	Returns an indication of whether a password is set on this server.
</summary>
            <returns>A boolean true or false.</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of a network or an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.Server.CommitParamChanges">
            <summary>
	Commits the changed Server settings made with possibly multiple preceding calls to SetParam().
</summary>
            <remarks>
	Note: If you have multiple settings to change, call SetParam() multiple times before calling CommitParamChanges() once.
	If any one of the settings fail, none of the settings will be set. This is analogous to a database transaction commit.
</remarks>
            <returns>void</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of a network or an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.Server.GetParam(Rimage.Rapid.Dotnet.Api.ServerParamType)">
            <summary>
	Returns a specific Server setting based on the key provided.
</summary>
            <remarks>
	Note: First time a GetParam() method is called, RefreshParams() is called on the caller's behalf.
</remarks>
            <param name="key">Specifies the setting to return. Some of the choices are DescriptionParam, OrderStatusIntervalParam, etc. Refer to ServerEnums.h.</param>
            <returns>The string value representation of the requested setting. </returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.Server.SetParam(Rimage.Rapid.Dotnet.Api.ServerParamType,System.String)">
            <summary>
	Sets a specific Server setting based on the key provided.
</summary>
            <param name="key">Specifies the setting to set. Some of the choices are DescriptionParam, OrderStatusIntervalParam, etc. Refer to ServerEnums.h.</param>
            <param name="value">The string value representation of the setting.</param>
            <returns>The string value representation of the requested setting. </returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.Server.RefreshParams">
            <summary>
	Requests updated setting values from an active Rimage server.
</summary>
            <remarks>
	Note: First time a GetParam() method is called, RefreshParams() is called on the caller's behalf.
</remarks>
            <returns>void</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of a network or an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.Server.GetInfo(Rimage.Rapid.Dotnet.Api.ServerInfoType)">
            <summary>
	Returns this Server information based on the key provided.
</summary>
            <remarks>
	Note: First time a GetInfo() method is called, RefreshInfo(RefreshBasicInfo) is called on the caller's behalf.
</remarks>
            <param name="key">Specifies the information to return. Some of the choices are SoftwareVersion, SystemFolder, etc. Refer to ServerEnums.h.</param>
            <returns>The string value representation of the requested information. </returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.Server.Start">
            <summary>
	Starts an offline Rimage server.
</summary>
            <returns>void</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of a network or an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.Server.Stop">
            <summary>
	Stops a running Rimage server.
</summary>
            <returns>void</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of a network or an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.Server.Resume">
            <summary>
	Resumes a paused Rimage server.
</summary>
            <returns>void</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of a network or an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.Server.Pause">
            <summary>
	Pauses a running Rimage server. This is a request to pause. To definitively find out if
	a server is paused either call Server.State or get notified through ISessionStatusListener.OnServerState()
</summary>
            <returns>void</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of a network or an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.Server.GetStartupMessages">
            <summary>
	Returns the list of startup messages for this server.
</summary>
            <returns>New-line delimited list of startup messages</returns>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.Server.Type">
            <summary>
	Returns the type of this server.
</summary>
            <returns>ServerType.ImagingServerType or ServerType.ProductionServerType</returns>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.Server.State">
            <summary>
	Returns the current state for this server.
</summary>
            <returns>One of ServerStateType enum values</returns>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.Server.ServerId">
            <summary>
	Gets the server Id for this server.
</summary>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.Server.ConnectionId">
            <summary>
	Gets the connection Id of the messaging server this server is connected to.
</summary>
            <returns>String representation of the connection, 'host:port'.</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.Server.RefreshInfo(Rimage.Rapid.Dotnet.Api.ServerInfoRefreshType)">
            <summary>
	Requests updated read-only information/status from an active Rimage server.
</summary>
            <remarks>
	Note: First time a GetInfo() method is called, RefreshInfo(RefreshBasicInfo) is called on the caller's behalf.
</remarks>
            <param name="infoType">Specifies the type of information to refresh. Some of the choices are BasicInfo, ActiveOrders, etc. Refer to ServerEnums.h.</param>
            <returns>void</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of a network or an internal problem.</exception>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.Server">
            <summary>
	Represents a Rimage server and exposes methods for managing and querying the server.
</summary>
            <remarks>
                <para>
	Server is a base class for two concrete server types - ImagingServer and ProductionServer. 
	Server objects are never instantiated directly, instead a Server object is instantiated
	by Rapid API when a specific Server comes on line. An event is also sent to the application if
	an ISessionStatusListener interface is implemented and set up using the ClientSession class.
</para>
                <para>
	To manage Server states use Pause(), Resume(), and Stop() methods.
</para>
                <para>
	To get Server read-only information use RefreshInfo() and GetInfo() methods.
</para>
                <para>
	To read Server settings use RefreshParams() and GetParam() methods.
</para>
                <para>
	To change Server settings use multiple SetParam() calls followed by a call to CommitParamChanges() method.
</para>
                <para>
	Server alerts (represented by ServerAlert and ServerError classes) are attached to a Server object
	by RAPID when they are sent out by a Rimage server. To see all the active alerts use the GetAlerts() method.
	An event for a new or acknowledged alert is sent to the 
	application as well, if an ISessionStatusListener interface is implemented and set up using the ClientSession class.
</para>
                <para>
	Server class allows you to work with orders that are currently active on the server. These orders can be initiated by any 
	client application on the network - not necessarily yours. Orders are represented by ServerOrder base class and
	ImagingOrder and ProductionOrder concrete classes.
	To see all orders currently active on a server use the GetActiveOrders() method.
	An application can also CancelActiveOrder(), SuspendActiveOrder(), and ResumeActiveOrder() server orders.  
	To change number of copies use ChangeActiveOrderQuantity() method.
</para>
                <para>
	For information on specific Servers refer to ImagingServer and ProductionServer classes.
</para>
                <para>
	Rimage Corporation, Copyright (c) 2007 - 2012
</para>
            </remarks>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.OrderSet.GetSuborderId(System.UInt16)">
            <summary>
	Returns the id of a specified sub order.
</summary>
            <param name="suborderIndex">Specifies the 0 based index of the sub order.</param>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of an invalid sub order index or an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.OrderSet.GetNumSuborders">
            <summary>
	Returns the number of sub orders in this order set.
</summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.OrderSet">
            <summary>
	Represents a pending order set. Extends the ServerOrder class.
<para>
	Rimage Corporation, Copyright (c) 2007 - 2012
</para></summary>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.ProductionOrder.CopiesRequested">
            <summary>
	Gets the string representation of number of discs requested by this order.
</summary>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.ProductionOrder.CopiesCompleted">
            <summary>
	Gets the string representation of number of discs completed for this order.
</summary>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.ProductionOrder.ProductionType">
            <summary>
	Gets the production kind of order this is: 'Read', 'Record', 'Copy', 'Print', or 'Destroy'.
</summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.ProductionOrder">
            <summary>
	Represents an order being processed by the Production server. Extends the ServerOrder class.
<para>
	Rimage Corporation, Copyright (c) 2007 - 2012
</para></summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.ImagingOrder">
            <summary>
	Represents an order being processed by the Imaging server. Extends the ServerOrder class.
<para>
	Rimage Corporation, Copyright (c) 2007 - 2012
</para></summary>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.ServerOrder.StatusXml">
            <summary>
	Gets the ImagingOrder or the ProductionOrder portion of the ImagingServerReply or the ProductionServerReply xml.
</summary>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.ServerOrder.PercentCompleted">
            <summary>
	Gets the string representation of the order progress.
</summary>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.ServerOrder.ClientId">
            <summary>
	Gets the clientId of the application which submitted this order.
</summary>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.ServerOrder.JobId">
            <summary>
	Gets the JobId of the Job which submitted this order.  
</summary>
            <remarks>
	Note: If this order was submitted by the current application, then JobId is non empty, otherwise the JobId will be either null or empty.
</remarks>
            <returns>Job Id of the job containing this order, or null/empty.</returns>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.ServerOrder.ServerId">
            <summary>
	Returns the server Id of the server processing this order.
</summary>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.ServerOrder.ConnectionId">
            <summary>
	Returns the connection Id of the server processing this order.
</summary>
            <returns>String representation of the connection, 'host:port'.</returns>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.ServerOrder.OrderId">
            <summary>
	Gets the identifier for this order.  
</summary>
            <remarks>
	Note: If this order was submitted by the current application, then the order Id is equivalent to the JobId of the submitted job.
</remarks>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.ServerOrder.Stage">
            <summary>
	Gets the current production stage of this order.
</summary>
            <returns>Either Imaging, Waiting, Recording, Printing, etc.</returns>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.ServerOrder.State">
            <summary>
	Gets the current state of this order.
</summary>
            <returns>Either Pending, Completed, Cancelled, Failed, or Active.</returns>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.ServerOrder.Type">
            <summary>
	Gets the type of server order this is.  
</summary>
            <returns>Either ImagingOrderType for ServerAlert or ProductionOrderType for ServerError </returns>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.ServerOrder">
            <summary>
	Represents an order that has been submitted to the system by a client application, not necessarily this one.
</summary>
            <remarks>
	A Rapid API Job can consist of 1 or 2 orders which are hidden from the caller. Rimage servers however
	work on orders, not Jobs. An order can be either Imaging or Production. Both of these extend
	the ServerOrder base class.
<para>
	Server orders are attached to a Server object by Rapid API after a call to Server.RefreshInfo(RefreshActiveOrders) has been made. 
	To see all the active orders use the GetActiveOrders() method on a specific Server object.
</para><para>
	Rimage Corporation, Copyright (c) 2007 - 2012
</para></remarks>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ServerError.GetSuggestedResolution(Rimage.Rapid.Dotnet.Api.ProductionServerError)">
            <summary>
	Returns the 'Suggested Resolution' for the specified ErrorId or SubErrorId when ServerError occurs.
</summary>
            <param name="errorIdOrSubErrorId">Specifies the ErrorId or SubErrorId as returned by ServerError object.</param>
            <returns>The 'Suggested Resolution' string corresponding to the ErrorId or SubErrorId. Returns NULL if the ErrorId or SubErrorId is invalid.</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ServerError.GetErrorString(Rimage.Rapid.Dotnet.Api.ProductionServerError)">
            <summary>
	Returns error string for the specified ErrorId or SubErrorId when ServerError occurs. 
	For detailed Server errors, see ProductionServerError and ImageServerError.
</summary>
            <param name="errorIdOrSubErrorId">Specifies the ErrorId or SubErrorId as returned by ServerError object.</param>
            <returns>The string value corresponding to the ErrorId or SubErrorId. Returns NULL if the ErrorId or SubErrorId is invalid.</returns>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.ServerError.ReferencedOrderId">
            <summary>
	Gets the Id of the order during which the problem occured. If this order was submitted by
	Rapid API, then this value is the same as the job Id.
</summary>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.ServerError.SubErrorId">
            <summary>
	Returns the value of SubErrorId attribute in the ErrorDialog XML, see ErrorDialog DTD for more details.  
</summary>
            <returns>The value of the SubErrorId attribute.</returns>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.ServerError.ErrorId">
            <summary>
	Returns the value of ErrorId attribute in the ErrorDialog XML, see ErrorDialog DTD for more details.  
</summary>
            <returns>The value of the ErrorId attribute.</returns>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.ServerError.SupplyError">
            <summary>
	Gets whether this is a supply error or not. 
</summary>
            <returns>'true' or 'false'.</returns>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.ServerError.Device">
            <summary>
	Gets the identification for the Autoloader component which caused the ServerError. 
</summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.ServerError">
            <summary>
	Represents a Rimage server error and exposes methods for querying error information.
</summary>
            <remarks>
	ServerError extends the ServerAlert class and adds error specific information. It also signifies
	an error condition as opposed to just a warning. The rest of the operation on a ServerError is identical to
	a ServerAlert. Refer to ServerAlert class for more information on what you can do with this class.
<para>
	Rimage Corporation, Copyright (c) 2007 - 2012
</para></remarks>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.ServerAlert.Type">
            <summary>
	Gets the type of the alert.  
</summary>
            <returns>ServerAlertType for ServerAlert object or ServerErrorType for ServerError object.</returns>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.ServerAlert.AlertXML">
            <summary>
	Returns the whole alert XML that was returned from Server as Server Reply. This is a way for user to get detailed
	information about the alert in case RAPID does not have specific method to get to those elements.
</summary>
            <returns>The whole XML string that was returned by the Server.</returns>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.ServerAlert.Subtype">
            <summary>
	Gets related information for this alert. Can be either 'ManualLoad', 'LoaderDoor', or 'None'(default). 
</summary>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.ServerAlert.Code">
            <summary>
	Gets the error code or another numerical identifier for what caused the alert. 
</summary>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.ServerAlert.Description">
            <summary>
	Returns the description of the alert, the "Message" attribute of the AlertDialg or ErrorDialog element. 
</summary>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.ServerAlert.Title">
            <summary>
	Gets the short description of the alert. This would typically be displayed on the title bar of the dialog. 
</summary>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.ServerAlert.AlertId">
            <summary>
	Gets the identifier for this alert. 
</summary>
            <remarks>
	Strictly speaking, an alert is uniquely identified by a combination of ConnectionId, ServerId, and AlertId.
	In a single connection system, represented by SingleConnectionSession class, an alert is uniquely identified by a
	combination of ServerId and AlertId.
</remarks>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.ServerAlert.ServerId">
            <summary>
	Gets the identifier for the server which sent this alert. 
</summary>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.ServerAlert.ConnectionId">
            <summary>
	Gets the identifier for the connection this alert was received on. 
</summary>
            <returns>String representation of the connection, 'host:port'.</returns>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ServerAlert.ReplyWithActionId(System.String)">
            <summary>
	Replies to the server with the action specified by the action Id. The action Id of the reply is the same
	action Id as obtained by calling GetReplyActionId() method.
</summary>
            <param name="actionId">Specifies the action Id of the reply to send back to the server.</param>
            <returns>void</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of a server, a network, or an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ServerAlert.ReplyWithText(System.String)">
            <summary>
	Replies to the server with the action specified by the text of the reply. The text of the reply is the same
	text as obtained by calling GetReplyText() method.
</summary>
            <param name="replyText">Specifies the text of the reply to send back to the server. This is converted to an index internally.</param>
            <returns>void</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of invalid index, a network, or an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ServerAlert.ReplyWithIndex(System.UInt16)">
            <summary>
	Replies to the server with the action specified by the index of the reply.
</summary>
            <param name="replyIndex">Specifies the 0 based index of the reply to send back to the server, typically 0, 1, or 2.</param>
            <returns>void</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of invalid index, a network, or an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ServerAlert.GetReplyActionId(System.UInt16)">
            <summary>
	Returns the action Id for the requested reply. This is the unique value assigned to every possible reply for
	every possible ServerAlert that can be produced by a Rimage server. 
</summary>
            <remarks>
	The possible action Ids are:
<list><item> 1 - "OK"</item><item> 2 - "Retry"</item><item> 3 - "Yes"</item><item> 4 - "No"</item><item> 5 - "Cancel"</item><item> 6 - "Reject Disc"</item><item> 7 - "Retry or Pass"</item><item> 8 - "Pass Disc"</item><item> 9 - "Stop Line"</item><item> 10- "End Job"</item><item> 11- "Abort Job"</item><item> 12- "Disable Autoloader"</item><item> 13- "Disable Printer"</item><item> 14- "Disable Recorder"</item></list></remarks>
            <param name="index">Specifies the 0 based index of the reply to send back to the server, typically 0, 1, or 2.</param>
            <returns>Action Id for the specific reply.</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of invalid index or an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ServerAlert.GetReplyText(System.UInt16)">
            <summary>
	Returns the text for the requested reply. This is the text that would be displayed on the button
	of a typical alert dialog.
</summary>
            <param name="index">Specifies the 0 based index of the reply to send back to the server, typically 0, 1, or 2.</param>
            <returns>Meaningful action text for the specific reply.</returns>
            <exception cref="T:Rimage.Rapid.Dotnet.Api.RimageException">Thrown in case of invalid index or an internal problem.</exception>
        </member>
        <member name="M:Rimage.Rapid.Dotnet.Api.ServerAlert.GetNumReplies">
            <summary>
	Returns the number of different replies a server expects for this alert. Number of replies 
	directly relates to the number of buttons a typical alert dialog would display.
</summary>
            <returns>Number of replies, typically 1, 2, or 3.</returns>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.ServerAlert.State">
            <summary>
	Returns the current state for this server alert.
</summary>
            <returns>One of ServerAlertStateType enum values</returns>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.ServerAlert">
            <summary>
	Represents a Rimage server alert and exposes methods for managing that alert.
</summary>
            <remarks>
	Server alerts come in two flavors: Alerts and Errors. ServerAlerts represent Warning severity and 
	ServerErrors represent error severity. Alerts and Errors are sent out by Rimage servers when an
	alert or an error condition is reached. An example would be 'Input bin is empty'. 
<para>
	Server alerts and errors are attached to a Server object by the Rapid API when they are sent out by a Rimage server. 
	To see all the active alerts use the GetAlerts() method on either a specific Server object or on a ClientSession instance.
	An event for a new or acknowledged alert is sent to the application as well, if an ISessionStatusListener 
	interface is implemented and set up using the ClientSession class.
</para><para>
	Alerts and Errors are not just informational, instead they require a response from the user. In the case of 'Input
	bin empty' alert, an operator, on seeing an alert dialog, would refill the input bin and then reply
	to the server by clicking one of the buttons presented on the dialog. ServerAlert class is in either AlertPosted or 
	AlertAcknowledged state. 
</para><para>
	The typical use case for handling alerts is as follows:
	<list><item>1) Server sends out an alert.</item><item>2) Client application receives the notification of the alert in ISessionStatusListener::OnServerAlert() callback method.</item><item>3) Client application displays the alert in a dialog. The dialog shows buttons with corresponding strings received from GetNumReplies() and GetReplyText() methods.</item><item>4) An operator resolves the alert condition (places more blank discs in the input bin for example).</item><item>5) The operator clicks on one of the buttons which triggers a call to one of the Reply Server methods which are listed below.</item><item>6) The server receives the reply, checks that the condition has been fixed and sends out an alert acknowledgement.</item><item>7) Client application receives the alert acknowledgement through the ISessionStatusListener::OnServerAlert() with	AlertAcknowledged value.</item></list></para><para>There are three methods to choose from to reply to a ServerAlert:
	<list><item>ReplyWithActionId()</item><item>ReplyWithText()</item><item>ReplyWithIndex()</item></list></para><para>
	Rimage Corporation, Copyright (c) 2007 - 2012
</para></remarks>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.ProductionServerError">
            <summary>
	A complete list of errors generated by Production Server. Thesre error IDs are returned from ServerError methods 
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_JOBSTREAM_NO_BLANK">
            <summary> Two masters encountered in a row in Job Streaming. Place blanks in input bin and press 'Eject Disc', or press 'Retry' to use the non-blank disc as a new master.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_JOBSTREAM_UNEXPECTED_BLANK">
            <summary> Unexpected blank disc encountered in Job Streaming. Place the next disc to be copied on top of the input bin.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_VERIFY_HASH_EMPTY">
            <summary> Accumulated hash is empty.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_VERIFY_HASH_MISMATCH">
            <summary> Verify hash mismatch.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_VERIFY_MISCOMPARE">
            <summary> Data miscompare.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_VERIFY_CACHE_READ">
            <summary> Failed to read from cache file.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_VERIFY_IMAGE_READ_EOF">
            <summary> Premature end of file while reading from image file.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_VERIFY_IMAGE_READ">
            <summary> Failed to read from image file.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_VERIFY_READ_BLOCKS">
            <summary> Failed to read from disc.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_VERIFY_HASH_CALCULATE">
            <summary> CryptHashData error in Crypto-API.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_VERIFY_IMAGE_OPEN">
            <summary> Failed to open image file.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_VERIFY_BUFFER_ALLOC">
            <summary> Memory allocation failure.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_VERIFY_HASH_INIT">
            <summary> Crypto-API init failed for hash verification.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_VERIFY_INVALID_DRIVE_LETTER">
            <summary> Failed to get valid drive letter to pass to 'FullVerify' function in VerCheck DLL (non-SPTI interface used).</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_VERIFY_CHKSUM_FAIL">
            <summary> VerCheck DLL failed verify.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_VERIFY_INITCHKSUM_FAIL">
            <summary> Failed VerCheck DLL setup.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_VERIFY_SUBCODE_UPC_EAN">
            <summary> Subchannel UPC/EAN mismatch.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_VERIFY_SUBCODE_ISRC">
            <summary> Subchannel ISRC mismatch.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_VERIFY_SUBCODE_CONTROL">
            <summary> Subchannel control mismatch.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_VERIFY_IMAGE_MAP_INVALID">
            <summary> Internal Image Map is corrupted (software problem).</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_VERIFY_TOO_FEW_TRACKS">
            <summary> TOC has less tracks than just recorded.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_VERIFY_TOC_EMPTY">
            <summary> TOC is empty.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_VERIFY_DISC_MAPPING">
            <summary> Failed to determine disc structure prior to verifying.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORD_INLINE_SERIALIZATION">
            <summary> Failed to generate a new inline serial number.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORD_DISC_HASH_INIT_FAILED">
            <summary> Failed to initialize disc hash.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORD_ENGINE_CIRQUEUE">
            <summary> Circular queue error during recording.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORD_ENGINE_THREAD_HUNG">
            <summary> Write Thread hung during recording.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORD_ENGINE_CACHE_EMPTIED">
            <summary> Memory cache emptied during recording.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORD_ENGINE_STREAM">
            <summary> Streaming failed during recording.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORD_ENGINE_POWERIMG">
            <summary> PowerImage expansion failed during recording.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORD_ENGINE_CACHE_READ">
            <summary> Cache file read failed during recording.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORD_ENGINE_CACHE_OPEN">
            <summary> Cache file open failed during recording.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORD_ENGINE_WRITE_FAILED">
            <summary> Recording failed.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORD_ENGINE_STATUS_BAD">
            <summary> Invalid status from recording engine.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORDER_PMA_UPDATE_FAILED">
            <summary> PMA Update failed after recording in track-at-once mode.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORDER_SYNC_CACHE">
            <summary> Synchronize Cache failed after recording.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORDER_ECC_FILL">
            <summary> Failed to fill remaining ECC blocks after track data.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORDER_ENGINE_START_FAILED">
            <summary> Setup of recording engine failed - probable cause is low memory condition.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORDER_TAO_WRITE_SETUP">
            <summary> Setup for recording in track-at-once mode failed.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORDER_CDTEXT_SETUP">
            <summary> Error sending CD-TEXT to recorder.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORDER_SAO_WRITE_SETUP">
            <summary> Setup for recording in session-at-once mode failed.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORDER_RAW_WRITE_PARAMS">
            <summary> Error in Write Parameters Page for raw mode.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORDER_INIT_DECRYPTOR">
            <summary> Failed to initialize copied image decryptor object.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORDER_STREAM_READ">
            <summary> Error reading from stream for image to record/verify.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORDER_STREAM_CONNECT">
            <summary> Failed to initialize streaming for image to record/verify.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORDER_FIXATE_FAILED">
            <summary> Fixate failed.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORDER_MODRECORD_EXCEPTION">
            <summary> Recording cancelled because of exception in ModifyDisc DLL's RecordDisc function.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORDER_MODRECORD_ABORT">
            <summary> Job cancelled by ModifyDisc DLL's RecordDisc function.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORDER_MODRECORD_CANCEL">
            <summary> Recording cancelled by ModifyDisc DLL's RecordDisc function.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORDER_MODIMAGE_EXCEPTION">
            <summary> Recording cancelled because of exception in ModifyDisc DLL's ModifyImage function.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORDER_MODIMAGE_ABORT">
            <summary> Job cancelled by ModifyDisc DLL's ModifyImage function.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORDER_MODIMAGE_CANCEL">
            <summary> Recording cancelled by ModifyDisc DLL's ModifyImage function.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORDER_NOT_SPECIFIED_MEDIA">
            <summary> Media ID does not match allowed media IDs.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RVP_UNKNOWN_ERROR">
            <summary> RVP serialization - undefined error occurred.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RVP_UPDATE_ERROR">
            <summary> RVP serialization - the current serial number is less than the number already in the file.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RVP_NOT_PROTECTED_IMAGE">
            <summary> RVP serialization - incorrect image type.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RVP_INPUT_FILE_ERROR">
            <summary> RVP serialization - input file error.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORDER_RAW_WRITE_SETUP">
            <summary> Setup for recording in raw mode failed.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORDER_SESSION_PATCH">
            <summary> ISO-9660 last session visible patching failed.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORDER_IMAGE_SIZE_GREW">
            <summary> Image size increased beyond disc capacity during session merge operation.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORDER_SESSION_MERGE">
            <summary> ISO9660 incremental multi-session merge failed.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORDER_SESSION_MERGE_TYPE">
            <summary> ISO-9660 incremental multi-session merge failed because track types differ.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORDER_VOL_ID_MISMATCH">
            <summary> Disc doesn't have a matching Volume ID.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORDER_VOLID_DISALLOWED">
            <summary> Disc failed because its Volume ID is dis-allowed.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORDER_INCRMS_NON_ISO">
            <summary> Incremental multi-session with non-ISO9660 discs is disabled.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORDER_RESERVE_TRACK">
            <summary> Reserve Track failed.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORDER_OPC_CHECK">
            <summary> OPC check failed.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORDER_SET_SPEED_FAILED">
            <summary> Set write speed failed.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORDER_RAW_NO_SIMULATE">
            <summary> Recording cannot be simulated in raw mode.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORDER_NON_BLANK_RAW">
            <summary> Can't record a non-blank disc in raw mode.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORDER_NOTENOUGHFREESPACE">
            <summary> Not enough free space on disc.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORDER_BD_NO_SIMULATE">
            <summary> Simulate not supported on Blu-ray media.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORDER_PLUSR_NO_SIMULATE">
            <summary> Simulate not supported on DVD+R media.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORDER_NEEDS_SOQ_MEDIA">
            <summary> SecurOQ media is required.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORDER_NEEDS_CDR_MEDIA">
            <summary> CD-R media is required.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORDER_NEEDS_BD_MEDIA">
            <summary> Blu-ray media is required.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORDER_NEEDS_DVDR_MEDIA">
            <summary> DVDR media is required.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORDER_NEEDS_DVDR_DL_MEDIA">
            <summary> DVDR dual-layer media is required.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORDER_NEEDS_BD_DL_MEDIA">
            <summary> Blu-ray dual-layer media is required.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORDER_NEEDS_CSS_DL_MEDIA">
            <summary> DVD-Download dual-layer media is required.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORDER_NEEDS_CSS_MEDIA">
            <summary> DVD-Download media is required.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORDER_DISCALREADYWRITTEN">
            <summary> Disc is already recorded, new sessions disabled.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORDER_DISCNOTWRITABLE">
            <summary> Disc is not recordable or is finalized.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORDER_DISC_MAPPING">
            <summary> Examination of disc prior to recording failed.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_VERIFY_ERROR">
            <summary> Verification failed.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORD_ERROR">
            <summary> Recorder could not create disc (recording failed).</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_MODIFY_ERROR">
            <summary> ModifyDisc DLL failed.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RVP_SERIALIZE_ERROR">
            <summary> Rimage Video Protect image serialization failed.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORD_SETUP_ERROR">
            <summary> Problem occured prior to recording disc.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORDER_WRONG_MEDIA">
            <summary> The wrong disc type was loaded into the recorder.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORDER_NOT_READY">
            <summary> Recorder can't become ready with current disc.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORDER_TRAY_CLOSE_ERROR">
            <summary> Tray close failed. Close recorder tray manually to retry.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_RECORDER_TRAY_OPEN_ERROR">
            <summary> Tray open failed. Open recorder tray manually to retry.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LIBERTY_END_PRINT_FAILED">
            <summary> Printing failed - EndPrintDisc function (see SubErrorId for detail).</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LIBERTY_SEND_PRINT_FAILED">
            <summary> Printing failed - SendDiscData function (see SubErrorId for detail).</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LIBERTY_START_PRINT_FAILED">
            <summary> Printing failed - StartPrintDisc function (see SubErrorId for detail).</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LIBERTY_NO_CARTRIDGE">
            <summary> No cartridge installed in printer.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LIBERTY_ONLY_PHOTO_CARTRIDGE">
            <summary> Photo cartridge (right) cannot be used alone.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LIBERTY_BAD_PHOTO_CARTRIDGE">
            <summary> Invalid Photo cartridge (right).</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LIBERTY_BAD_COLOR_CARTRIDGE">
            <summary> Invalid Color cartridge (left).</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LIBERTY_BAD_BLACK_CARTRIDGE">
            <summary> Invalid Black cartridge (right).</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LIBERTY_NO_PEN_INSTALLED">
            <summary> No pen installed in printer.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LIBERTY_PRINT_FILE_OPEN_ERROR">
            <summary> The printer driver could not open the print file.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LIBERTY_PRINT_JOB_CANCELLED">
            <summary> The print job was cancelled on the printer.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LIBERTY_CLAMP_ERROR">
            <summary> Disc clamping error.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LIBERTY_DISC_MISSING">
            <summary> Disc not detected in printer (may have become unclamped).</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LIBERTY_INK_LOW_BOTH">
            <summary> Both cartridge ink levels are low.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LIBERTY_INK_LOW_RIGHT">
            <summary> The right cartridge ink level is low.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LIBERTY_INK_LOW_LEFT">
            <summary> The left cartridge ink level is low.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LIBERTY_CARTRIDGE_MISSING">
            <summary> An ink cartridge is missing or mis-seated.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LIBERTY_PRINTER_UNAVAILABLE">
            <summary> The printer is in use by another process.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LIBERTY_UNDEFINED_SENSE">
            <summary> Undefined sense code from printer.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LIBERTY_REQ_SENSE_FAILED">
            <summary> Request Sense failed - unable to get cause of error.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LIBERTY_INIT_FAILURE">
            <summary> Printer mechanism did not start up correctly after power-on.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LIBERTY_FLOW_EXECUTION_TIMEOUT">
            <summary> Printer mechanism accepted, began processing, but did not complete a command.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LIBERTY_FLOW_ASSERTION_TIMEOUT">
            <summary> Printer mechanism accepted but did not begin processing a command.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LIBERTY_FLOW_REJECT">
            <summary> Printer mechanism is not accepting commands.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LIBERTY_JOB_STARTED_PRINTER_FAILED">
            <summary> Print job was started but printer failed to get top of form.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LIBERTY_TURNON_FAILURE">
            <summary> Could not bring the printer mechanism out of the sleep state.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LIBERTY_TURNOFF_FAILURE">
            <summary> Could not put the printer mechanism into a sleep state.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LIBERTY_CLAMP_FAILURE">
            <summary> Disc not successfully clamped.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LIBERTY_UNRECOGNIZED_CMD_REQUEST">
            <summary> Command not recognized.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LIBERTY_MECHANISM_OFF">
            <summary> Printer mechanism is powered off or sleeping.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LIBERTY_TRAY_MOVE_ERROR">
            <summary> Printer failed to complete a tray movement. Printer must be power-cycled.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LIBERTY_COVER_OPEN">
            <summary> Printer cover is open.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LIBERTY_ILLEGAL_REQ">
            <summary> Illegal command or parameter.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LIBERTY_UNINITIALIZED">
            <summary> Printer has been powered up, but not initialized.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LIBERTY_BUSY">
            <summary> Printer mechanism is busy printing, moving tray, cartridge servicing, etc.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LIBERTY_ZERO_SENSE">
            <summary> Sense code value of zero from printer (should never occur).</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_EVEREST_UNDEFINED_SENSE">
            <summary> Undefined sense code from Everest printer.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_EVEREST_UNKNOWN_ERROR">
            <summary> Unknown Printer Error.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_EVEREST_RETRANSFER_TIMEOUT">
            <summary> Timed-out during retransfer operation.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_EVEREST_BAD_STATUS">
            <summary> Status unexpectedly changed to zero between print and retransfer phases.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_EVEREST_IDLE_DURING_PRINTING">
            <summary> Status unexpectedly changed to zero while printing.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_EVEREST_RETRANSFER_SHEET_STUCK">
            <summary> retransfer sheet stuck, clear manually.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_EVEREST_RFID_RIBBON_ERROR">
            <summary> Invalid ribbon or RFID error.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_EVEREST_EEPROM_BAD">
            <summary> EEPROM format or checksum bad.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_EVEREST_ENV_THERM_BROKEN">
            <summary> Environment thermistor is broken.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_EVEREST_RET_THERM_BROKEN">
            <summary> Retransfer thermistor is broken.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_EVEREST_PRN_THERM_BROKEN">
            <summary> Printhead thermistor is broken.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_EVEREST_WINDING_MOTOR">
            <summary> Motor for winding the retransfer sheet is broken.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_EVEREST_DRAWER_ENCODER">
            <summary> Drawer motor encoder not responding.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_EVEREST_POS_HEAT_ROLLER">
            <summary> Cannot position the retransfer heat roller (up/down).</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_EVEREST_RETRANSFER_LOWER_SENSOR">
            <summary> Retransfer sheet lower sensor error.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_EVEREST_LAMP_NOT_RESPONDING">
            <summary> Halogen lamp is not responding.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_EVEREST_RIBBON_SENSOR">
            <summary> Ink ribbon sensor error.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_EVEREST_RETRANSFER_UPPER_SENSOR">
            <summary> Retransfer sheet upper sensor error.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_EVEREST_CANT_OPEN_DRAWER">
            <summary> Cannot open the drawer when mechanism is initialized.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_EVEREST_POS_FRAME_LEVER">
            <summary> Invalid position of the frame lever for locking mid-frame.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_EVEREST_INVALID_DATA">
            <summary> Corrupt or invalid data in command.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_EVEREST_CLAMP">
            <summary> Error clamping disc.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_EVEREST_DRAWER_OUT">
            <summary> Error positioning the drawer outward.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_EVEREST_DRAWER_IN">
            <summary> Error positioning the drawer inward.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_EVEREST_PRN_RAISE">
            <summary> Error raising the printhead.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_EVEREST_PRN_LOWER">
            <summary> Error lowering the printhead.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_EVEREST_RET_LEVER">
            <summary> Retransfer release lever not latched.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_EVEREST_PRN_LEVER">
            <summary> Printhead release lever not latched.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_EVEREST_RET_RIBBON_MISSING">
            <summary> Retransfer ribbon missing.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_EVEREST_INK_RIBBON_MISSING">
            <summary> Ink ribbon missing.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_EVEREST_COVER_OPEN">
            <summary> Cover open.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_EVEREST_RETRANSFER_OUT">
            <summary> Retransfer out.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_EVEREST_RIBBON_ID">
            <summary> Ribbon ID error.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_EVEREST_RIBBON_OUT">
            <summary> Ribbon out.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_EVEREST_NEEDS_RESET">
            <summary> Waiting for button press or reset command to clear error state.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_EVEREST_NOT_SWITCH1">
            <summary> Rotatry switch not set to 1 or 2.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_EVEREST_WAITING_FORM_FEED">
            <summary> Done printing, waiting to retransfer to disc.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_EVEREST_WAITING_REMOVAL_REPEAT">
            <summary> Waiting for the removal of a retransferred disc when repeat printing.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_EVEREST_TRANSFERRING_REPEAT">
            <summary> Printer is transfering label to the disc when repeat printing.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_EVEREST_PRINTING_TO_RETRANSFER_SHEET">
            <summary> Printer is printing to the retransfer sheet (repeast print?).</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_EVEREST_INITIALIZING">
            <summary> Printer is initializing.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_EVEREST_WAITING_REMOVAL">
            <summary> Waiting for the removal of a retransferred disc (also reports if powered on with a disc).</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_EVEREST_TRANSFERRING">
            <summary> Printer is transfering label to the disc.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_EVEREST_BUSY_PRINTING">
            <summary> Printer is printing to the retransfer sheet.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_EVEREST_WARMING_UP">
            <summary> Printer is warming up.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_EVEREST_ZERO_SENSE">
            <summary> Printer is idle.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_PRISM_REQ_SENSE_FAILED">
            <summary> Request Sense failed - unable to get cause of error.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_PRISM_NOT_STARTED">
            <summary> Printing in progress not detected.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_PRISM_UNDEFINED_SENSE">
            <summary> Undefined sense code from Prism printer.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_PRISM_PRINTHEAD">
            <summary> Printhead test failed, possible bad element(s).</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_PRISM_ABORTED">
            <summary> Printing was aborted by pressing button on printer.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_PRISM_COLOR_CHANGE">
            <summary> Color change error (usually from printing color label on monochrome ribbon).</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_PRISM_DISC_POSITION">
            <summary> Disc is out of position.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_PRISM_NO_MARGIN">
            <summary> No left margin specified without RLE.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_PRISM_LEFT_MARGIN">
            <summary> Invalid Left Margin.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_PRISM_DATA_MISMATCH">
            <summary> Data mismatch.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_PRISM_INVALID_PRINT_DATA">
            <summary> Invalid print data was received.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_PRISM_DRAWER_OUT_ERROR">
            <summary> Error positioning drawer out.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_PRISM_DRAWER_IN_ERROR">
            <summary> Error positioning drawer in.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_PRISM_DRAWER_HOME_ERROR">
            <summary> Error positioning drawer home.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_PRISM_ERROR_RAISING_PRINTHEAD">
            <summary> Error raising printhead.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_PRISM_ERROR_LOWERING_PRINTHEAD">
            <summary> Error lowering printhead.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_PRISM_PRINTING">
            <summary> Printing in progress.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_PRISM_RIBBON_EMPTY">
            <summary> Out of ribbon.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_PRISM_ZERO_SENSE">
            <summary> Sense code from printer was zero (should never occur).</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_PRINTER_PRINT_FILE_OPEN">
            <summary> Failed to open rendered print file.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_PRINTER_COMM_ERROR">
            <summary> Printer communication failure.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_PRINTER_PRINT_FILE_READ">
            <summary> Failed to read rendered print file.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_PRINTER_REJECT_RENDERING_FAILED">
            <summary> Reject label rendering failed.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_PRINTER_REJECT_LABEL_MISSING">
            <summary> Reject label is missing.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_PRINTER_NO_PRINTER">
            <summary> Printer not found.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_PRINTER_UNDEFINED_SENSE_CODE">
            <summary> Undefined sense code.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_PRINTER_EV_CLAMP_ERROR">
            <summary> Failed to clamp disc.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_PRINTER_EV_RIBBON_PROBLEM">
            <summary> Problem with the Ink Ribbon. Open printer cover and check ribbon.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_PRINTER_EV_RESTART_PS">
            <summary> Did not recover from label download timeout. Exit and restart Production Server.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_PRINTER_EV_DOWNLOAD_TIMEOUT">
            <summary> Timeout waiting for label download to Everest printer. Turn the printer off and on again to retry.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_PRINTER_WAIT_PRINT_COMPLETE_ERROR">
            <summary> Error occurred while waiting for printing to complet (to be expanded later).</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_PRINTER_PRINTING_ERROR">
            <summary> Error occurred during printing (to be expanded later).</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_PRINTER_LOW_INK">
            <summary> Low ink level in inkjet printer.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_PRINTER_CLOSE_TRAY">
            <summary> Error closing printer tray.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_PRINTER_OPEN_TRAY">
            <summary> Error opening printer tray.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_PPC_NOT_AUTHENTICATED">
            <summary> PPC not authenticated.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_PPC_AUTHENTICATION_ERROR">
            <summary> PPC authentication failure.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_PPC_KEY_STORAGE_ERROR">
            <summary> PPC failed to store KEY.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_PPC_DUP_KEY_REJECTED">
            <summary> PPC duplicate KEY rejected.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_PPC_KEY_TYPE_UNKNOWN">
            <summary> PPC KEY type unknown.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_PPC_HMAC_INVALID">
            <summary> PPC hash check failed.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_PPC_KEY_FORMAT_INVALID">
            <summary> PPC KEY format invalid.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_PPC_COUNT_AT_LIMIT">
            <summary> PPC COUNT at LIMIT.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_ILLEGAL_RIBBON">
            <summary> Installed ribbon is not authorized for use in this system.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_ILLEGAL_SYSTEM">
            <summary> System has been reprogrammed with firmware that is not legitimate for the product - update to current version.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_INVALID_FIRMWARE">
            <summary> Invalid product firmware (firmware update failure - tried to install PPC version on a non-PPC enabled system or vice-versa).</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_CANT_RELEASE_DISC">
            <summary> Unable to release disc from gripper.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_DROP_HOPPER_OPEN">
            <summary> Drop hopper is open.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_SLOT_FULL">
            <summary> Output slot is full.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_SLOT_NO_DISC_DETECTED">
            <summary> Disc put into slot was not detected.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_FORCED_TO_TOP_SLOT">
            <summary> Disc was forced into slot 1.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_PERFECT_PRINT_ERROR">
            <summary> Rotator failure, disc may not have an index mark.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_MAILBOX_ERROR">
            <summary> Mailslot failure.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_ROTATE_ERROR">
            <summary> Rotator failure.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_FLASH_UPDATE_ERROR">
            <summary> Flash programming failure.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_PRISM_PRINTHEAD_ERROR">
            <summary> Prism printhead may be defective.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_PRINTER_BUSY">
            <summary> Printer busy is preventing movement.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_RETRANSFER_ERROR">
            <summary> Retransfer command to the printer failed.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_SENSOR_FAILURE">
            <summary> Drive sensor array failure (Producer I family only).</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_LIFT_FAILURE">
            <summary> Unable to position the lift.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_CAROUSEL_ERROR">
            <summary> Unable to position the carousel.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_NO_PRINTER">
            <summary> Cannot communicate with the printer.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_CAROUSEL_NOT_DETECTED">
            <summary> Carousel not detected.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_DRIVE_NOT_FOUND">
            <summary> Element not detected.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_UNIT_ATTENTION">
            <summary> Door is or was opened.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_ILLEGAL_REQUEST">
            <summary> Illegal command or parameter.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_HARDWARE_ERROR">
            <summary> Mechanism failure, disc may have been dropped.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_MEDIUM_ERROR">
            <summary> Loader not ready (just powered up).</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_NOT_READY">
            <summary> Loader not ready (just powered up).</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_RECOVERED_FROM_ERROR">
            <summary> Loader recovered from previous error condition.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_ZERO_SENSE">
            <summary> Sense code from loader was zero.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_POSITION_FAILED_ON_PRINTER_ERROR">
            <summary> Positioning command failed because of printer error.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_DROPPED_DISC_FROM_INPUT">
            <summary> Disc may have been dropped while picking from bin. Check for upside-down disc and clear manually to retry.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_REQ_SENSE_FAILED">
            <summary> Request Sense failed - unable to get cause of error.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_COMM_RECEIVE_TIMEOUT">
            <summary> Communication esponse timeout.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_COMM_CTS_OFF">
            <summary> Communication disabled by CTS line.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_COMM_ERROR">
            <summary> Communication error.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_UNDEFINED_SENSE_CODE">
            <summary> Undefined sense code.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_PRINT_REJECT_ERROR">
            <summary> Error printing the reject pattern.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_MAILSLOT_CLOSE_ERROR">
            <summary> Error closing mailslot.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_PRINTER_CLOSE_ERROR">
            <summary> Error closing printer drawer.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_PRINTER_OPEN_ERROR">
            <summary> Error opening printer drawer.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_LOAD_MAILBOX_ERROR">
            <summary> Error loading mailslot. Clear manually to retry.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_LOAD_DROP_HOPPER_ERROR">
            <summary> Error loading drop hopper(external bin). Clear manually to retry.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_NO_DISC_IN_GRIPPER_TO_MAILSLOT">
            <summary> Autoloader lost disc going to mailslot. Put disc in gripper manually to retry.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_BIN_LEVEL_CHECK_ERROR">
            <summary> Error picking from bin to check the level. Bin may be too full.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_LOAD_OUTPUT_ERROR">
            <summary> Error loading output bin. Clear manually to retry.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_DISC_PUT_RECORDER">
            <summary> Error putting disc in recorder tray. Put disc in tray manually to retry.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_PICK_FROM_BIN_ERROR">
            <summary> Error picking disc from bin. Clear manually to retry.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_DROPPED_DISC_FROM_PICKER">
            <summary> Disc may have been dropped from picker. Place disc on picker manually to retry.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_DISC_NOT_DETECTED_IN_PRINTER">
            <summary> Disc not detected in printer drawer. Center disc in printer manually to retry.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_FORCE_OUTPUT_TO_SLOT1">
            <summary> Autoloader must place disc in slot 1 to recover from previous error. Pressing Retry will unload disc to slot 1.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_FORCE_OUTPUT_TO_SLOT1_REMOVE_CURRENT">
            <summary> Autoloader must place disc in slot 1 to recover from previous error. Remove current disc from slot 1 to resume.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_ELEMENT_STATUS_ERROR">
            <summary> Read Element Status failed (communication error or unexpected response).</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_LOST_DISC_TO_OUTPUT">
            <summary> Autoloader lost disc. Place disc in output bin manually to retry.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_LOST_DISC_TO_REJECT">
            <summary> Autoloader lost disc. Place disc in reject bin manually to retry.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_COLLATE_PICK">
            <summary> Error picking disc from collate bin. Clear manually to retry.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_LOST_DISC_FROM_PRINTER">
            <summary> Autoloader lost disc from printer. Put disc in gripper manually to retry.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_LOADING_PRINTER">
            <summary> Error putting disc in printer. Put disc in printer drawer manually to retry.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_PRINTER_CLAMP_ERROR">
            <summary> Autoloader is having a problem placing disc in printer - possible clamping failure. Center disc in printer manually to retry.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_NO_DISC_BEFORE_LOADING_PRINTER">
            <summary> Disc not detected in gripper before loading the printer. Place disc on printer tray manually to retry.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_NO_DISC_AFTER_LOADING_PRINTER">
            <summary> Disc not detected in printer after loading the printer. Place disc on printer tray manually to retry.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_LOST_DISC_GOING_TO_PRINTER">
            <summary> Autoloader lost disc going to printer. Put disc in gripper manually to retry.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_LOST_DISC_FROM_GRIPPER">
            <summary> Autoloader lost disc from gripper. Put disc in gripper manually to retry.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_GRIP_GET_PRINTER">
            <summary> Error gripping disc in printer. Center disc in open drawer manually to retry.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_GRIP_GET_RECORDER">
            <summary> Error gripping disc in recorder. Center disc in open drawer manually to retry.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_LOST_DISC_FROM_INPUT">
            <summary> Autoloader lost disc after picking from input bin. Make sure disc is not upside down, then clear manually to retry.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_GRIPPER_HOME">
            <summary> Error bringing gripper to top.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_UNEXPECTED_DISC_IN_GRIPPER">
            <summary> An unexpected disc was detected in the gripper. Remove it to retry.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_ROTATOR_ERROR">
            <summary> Rotator failed.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_PRINTER_RETRANSFER_EMPTY">
            <summary> Retransfer ribbon empty (Everest).</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_PRINTER_INK_RIBBON_EMPTY">
            <summary> Ink ribbon empty (Prism or Everest).</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_MAILSLOT5_FULL">
            <summary> Mailslot #5 is full.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_MAILSLOT4_FULL">
            <summary> Mailslot #4 is full.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_MAILSLOT3_FULL">
            <summary> Mailslot #3 is full.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_MAILSLOT2_FULL">
            <summary> Mailslot #2 is full.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_MAILSLOT1_FULL">
            <summary> Mailslot #1 is full.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_ALL_MAILSLOTS_FULL">
            <summary> All output slots are full. Remove discs to resume.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_COLLATE_INPUT_EMPTY">
            <summary> Collator supply bin/hopper is empty.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_MAILSLOT_FULL">
            <summary> Mailslot is full.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_DROP_HOPPER_FULL">
            <summary> Drop hopper(external bin) is full.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_OUTPUT_FULL">
            <summary> Output bin is full.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_LOADER_INPUT_EMPTY">
            <summary> Input bin/hopper is empty.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerError.PSE_NO_ERROR">
            <summary> Successful result, no error.</summary>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.SubOrderStatus.LastStatusUpdateTime">
            <summary>
	Returns whether this job spans discs.
</summary>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.SubOrderStatus.ProductionXml">
            <summary>
	Returns production order xml for this sub order.
</summary>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.SubOrderStatus.ImageFileName">
            <summary>
	Returns image file name for this volume.
</summary>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.SubOrderStatus.ErrorMessage">
            <summary>
	Gets the error message for this sub order, if any.
</summary>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.SubOrderStatus.ErrorCode">
            <summary>
	Gets the error code for this sub order, if any.
</summary>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.SubOrderStatus.CopiesCompleted">
            <summary>
	Gets the # of copies completed for this sub order.
</summary>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.SubOrderStatus.PercentComplete">
            <summary>
	Gets the percentage complete. Note that for ImageAndRecordJob and its subclasses, the percentage
	complete is for the whole job, it shows 50% for Imaging and another 50% for Production.
</summary>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.SubOrderStatus.Stage">
            <summary>
	Gets the Job stage, this is for display purpose.
</summary>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.SubOrderStatus.State">
            <summary>
	Gets the Job state, see JobStateType for more detail .
</summary>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.SubOrderStatus.SubOrderId">
            <summary>
	Gets the ID of this sub order.
</summary>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.SubOrderStatus.ParentJobId">
            <summary>
	Gets Parent Job ID that this suborder status object is related to.
</summary>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.RimageException.ErrorCode">
            <summary>
	Returns a code that identifies the current exception.  
</summary>
            <returns>Exception code.</returns>
        </member>
        <member name="P:Rimage.Rapid.Dotnet.Api.RimageException.DetailedMessage">
            <summary>
	Returns a code that identifies the current exception.  
</summary>
            <returns>Exception code.</returns>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.RimageException">
            <summary>
	Represents an exception thrown from a Rapid API method. 
	All exceptions thrown from Rapid API are of this type or extend this class.
</summary>
            <para>
	Rimage Corporation, Copyright (c) 2007 - 2012
</para>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.CopyJobParamType">
            <summary>ReadJobParamType are keys for CD Text File parameters. They are used in SetProductionParam() and
GetProductionParam() in ProductionOnlyJob and ImageAndRecordJob, and their dervied classes.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.CopyJobParamType.ReadSpeedParam">
            <summary>Specifies the speed of writing, it can be one of the following values:
<list><item>1</item><item>2</item><item>4</item><item>8</item><item>Maximum</item></list>
The default is Maximum.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.CopyJobParamType.VerifyChecksumParam">
            <summary>Parameter key to provide a 64-bit hexadecimal value used to checksum the master and copies if the Vercheck DLL (plug-in DLL for EPS) is used.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.CopyJobParamType.CDGParam">
            <summary>Parameter key to copy an audio CD as if it were a Karaoke CD (reads and records the R-W channels, where the Karaoke information resides (if present).
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.CopyJobParamType.RawModeParam">
            <summary>Parameter key to copy the original by reading in raw mode (CD-R only). This requires a special license to enable in EPS.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.CopyJobParamType.ForceDAOParam">
            <summary>Parameter key to record the copies in disc-at-once mode even if the original is track at once or not finalized.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.CopyJobParamType.DisplayMapParam">
            <summary>Parameter key to display a list of tracks: sizes and types that are on the original (if EPS GUI is enabled).
</summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.ReadJobParamType">
            <summary>ReadJobParamType are keys for CD Text File parameters. They are used in SetProductionParam() and
GetProductionParam() in ProductionOnlyJob and ImageAndRecordJob, and their dervied classes.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ReadJobParamType.TerminateReadOutputToAcceptBinParam">
            <summary>Parameter key to indicate if output bin can be used as accept bin.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ReadJobParamType.TerminateReadPrintRejectLabelParam">
            <summary>Parameter key to indicate if printing eject label is required.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ReadJobParamType.TerminateReadEjectDiscParam">
            <summary>Parameter key to indicate if eject disc is required if a disc is rejected.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ReadJobParamType.MapGetBarcodeParam">
            <summary>Parameter key for setting and getting the flag of reading the barcode.
</summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.CDTextFileParamType">
            <summary>CDTextFileParamType are keys for CD Text File parameters. They are used in SetProductionParam() and
GetProductionParam() in ProductionOnlyJob and ImageAndRecordJob, and their dervied classes.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.CDTextFileParamType.CDTextFilePathUsedByServer">
            <summary>The path that the server uses to access this CD Text File.
</summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.MergeFileParamType">
            <summary>MergeFileParamType are keys for Merge File parameters. They are used in SetProductionParam() and
GetProductionParam() in ProductionOnlyJob and ImageAndRecordJob, and their dervied classes.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.MergeFileParamType.MergeFilePathUsedByServer">
            <summary>The path that the server uses to access this Merge File.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.MergeFileParamType.MergeFileHasFieldNamesParam">
            <summary>Parameter key for setting and getting the flag that Merge File Has Field Names, defaults to ParamValues.False. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.MergeFileParamType.DeleteMergeFileAfterPrintingParam">
            <summary>Parameter key for setting and getting the flag of Deleting Merge File After Printing, defaults to ParamValues.False. </summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.LabelFileParamType">
            <summary>LabelFileParamType are keys for Label File parameters. They are used in SetProductionParam() and
GetProductionParam() in ProductionOnlyJob and ImageAndRecordJob, and their dervied classes.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.LabelFileParamType.LabelFilePathUsedByServer">
            <summary>The path that the server uses to access this Label File.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.LabelFileParamType.BTWODBCSQLSelectStringParam">
            <summary>Parameter key for setting and getting BTW ODBC SQL Select String, required if ODBC connection is made for merge data. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.LabelFileParamType.BTWODBCConnectStringParam">
            <summary>Parameter key for setting and getting BTW ODBC Connect String, required if ODBC connection is made for merge data. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.LabelFileParamType.BTWRenderLocalCopyParam">
            <summary>Parameter key for setting and getting the flag of BTW Rendering Local Copy, defaults to ParamValues.False. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.LabelFileParamType.BTWSaveAfterRenderingParam">
            <summary>Parameter key for setting and getting the flag of BTW Saving After Rendering, optional, defaults to ParamValues.False. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.LabelFileParamType.PerfectPrintAngleParam">
            <summary>Parameter key for setting and getting the flag of Perfecting Print Angle. Note that the angle is the string form of deceimal
numbers, such as "25553.4549999". The integral part is modulized by 360 (25553 \% 360) = 353, and the decimal portion is rounded to nearest .25
(in this case, it's rounded to 0.50). So the actual angle is set to "353.50".
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.LabelFileParamType.DeleteLabelFileAfterPrintingParam">
            <summary>Parameter key for setting and getting the flag of Deleting Label File After Printing, defaults to ParamValues.False. </summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.LabelType">
            <summary>LabelType are values for  for Label File. They are used in SetLabelFile() in ProductionOnlyJob and ImageAndRecordJob, and their dervied classes.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.LabelType.BTWODBCLabelType">
            <summary> Represents BTW with ODBC label file. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.LabelType.PCLLabelType">
            <summary> Represents PCL label file. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.LabelType.PDFLabelType">
            <summary> Represents PDF label file. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.LabelType.BTWLabelType">
            <summary> Represents BTW label file. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.LabelType.AutomaticLabelType">
            <summary> When this type is set, the system will determine the label type by the file
extention provided in SetLabelFile().
</summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.FixateParamType">
            <summary>FixateParamType are keys for Production Audio Track parameters. They are used in SetProductionParam() and
SetProductionParam() in ProductionOnlyJob and ImageAndRecordJob, and their dervied classes.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.FixateParamType.FixateUPCEANParam">
            <summary>Parameter key for setting and getting the flag of using UPCEAN, optional, defaults to ParamValues.False. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.FixateParamType.FixateTypeParam">
            <summary>Parameter key for setting and getting FixateType, defaults to FIXATE_TYPE_SAO.
Possible values are:
<list><item>JobParamValues.FixateTypeSAO</item><item>JobParamValues.FixateTypeTAO</item><item>JobParamValues.FixateTypeSAOSegmented</item><item>JobParamValues.FixateTypeTAOSegmented</item><item>JobParamValues.FixateTypeRAW</item><item>JobParamValues.FixateTypeSKIP</item></list></summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.FixateParamType.FixateFinalizeDiscParam">
            <summary>Parameter key for setting and getting the flag of Finalizing Disc, defaults to ParamValues.False. </summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.AudioTrackParamType">
            <summary>AudioTrackParamType are keys for Production Audio Track parameters. They are used in SetAudioTrackParam() and
GetAudioTrackParam() in ProductionOnlyJob and ImageAndRecordJob, and their dervied classes.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.AudioTrackParamType.AudioTrackPathUsedByServer">
            <summary>The path that the server uses to access this Audio Track.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.AudioTrackParamType.AudioTrackHasFourChannelsParam">
            <summary>Parameter key for setting and getting the flag of Having Four Channels, defaults to ParamValues.False. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.AudioTrackParamType.AudioTrackHasPreEmphasisParam">
            <summary>Parameter key for setting and getting the flag of Having Prepemphasis, defaults to ParamValues.False. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.AudioTrackParamType.AudioTrackAllowCopyParam">
            <summary>Parameter key for setting and getting the flag of Allowing Copy, defaults to ParamValues.False. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.AudioTrackParamType.AudioTrackHasNumberOfPregapBlocksParam">
            <summary>Parameter key for setting and getting Number of Pregap Blocks, optional. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.AudioTrackParamType.AudioTrackNumberOfPregapBlocksToAddParam">
            <summary>Parameter key for setting and getting Number of Pregap Blocks to Add, optional. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.AudioTrackParamType.AudioTrackISRCParam">
            <summary>Parameter key for setting and getting the flag of ISRC, optional. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.AudioTrackParamType.DeleteAudioFileAfterRecordingParam">
            <summary>Parameter key for setting and getting the flag of Deleting Audio File AfterRecording, defaults to ParamValues.False. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.AudioTrackParamType.ReservedAudioTrackNumberParam">
            <summary>Parameter key for setting and getting Reserved Audio Trac kNumber, optional. </summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.DataTrackParamType">
            <summary>DataTrackParamType are keys for Production Data Track parameters. They are used in SetDataTrackParam() and
GetDataTrackParam() in ProductionOnlyJob and ImageAndRecordJob, and their dervied classes.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.DataTrackParamType.DeleteProtectedImageAfterRecordingParam">
            <summary>Specifies whether to to automatically delete temporary Rimage Video Protection.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.DataTrackParamType.DataTrackPathUsedByServer">
            <summary>The path that the server uses to access this Data Track.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.DataTrackParamType.DataTrackDVDProtectParam">
            <summary>Specifies whether to apply Rimage Video Protection to this video track.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.DataTrackParamType.DataTrackDVDADP_TYParam">
            <summary>Parameter key for setting and getting DVD ADP Type, defaults to DATA_TRACK_DVD_ADP_TY_0.
Possible values are DATA_TRACK_DVD_ADP_TY_0 and DATA_TRACK_DVD_ADP_TY_1.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.DataTrackParamType.DataTrackDVDDualLayerSplitPointParam">
            <summary>Parameter key for setting and getting DVD Dual Layer Split Point, optional. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.DataTrackParamType.DataTrackVolumeIdPVDFileNameParam">
            <summary>Parameter key for setting and getting Volume ID PVD File Name, optional. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.DataTrackParamType.DataTrackVolumeIdUsageParam">
            <summary>Parameter key for setting and getting Volume ID Usage option, defaults to DATA_TRACK_VOLUME_ID_USAGE_EXIST.
Possible values are:
<list><item>JobParamValues.DataTrackVolumeIdUsageExist</item><item>JobParamValues.DataTrackVolumeIdUsageNotExist</item><item>JobParamValues.DataTrackVolumeIdUsageChangeTo</item><item>JobParamValues.DataTrackVolumeIdUsagePVDFromFile</item></list></summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.DataTrackParamType.DataTrackVolumeIdParam">
            <summary>Parameter key for setting and getting Volume ID, optional. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.DataTrackParamType.DataTrackVerifyChecksumParam">
            <summary>Parameter key for setting and getting the flag of Verifing Checksum, optional, defaults to ParamValues.False. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.DataTrackParamType.DataTrackDisableExtentFixupsParam">
            <summary>Parameter key for setting and getting the flag of Disabling Extent Fixups, defaults to ParamValues.False. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.DataTrackParamType.DataTrackMergeSessionsParam">
            <summary>Parameter key for setting and getting the flag of Merging Sessions, defaults to ParamValues.False. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.DataTrackParamType.DataTrackTypeParam">
            <summary>Parameter key for setting and getting Data Track type, defaults to DATA_TRACK_TYPE_MODE1. Possible values are:
<list><item>JobParamValues.DataTrackTypeMODE1</item><item>obParamValues.DataTrackTypeMODE2</item><item>JobParamValues.DataTrackTypeXA_FORM1</item><item>JobParamValues.DataTrackTypeXA_MIXED</item><item>JobParamValues.DataTrackTypeCD_I</item></list></summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.DataTrackParamType.DeleteImageFileAfterRecordingParam">
            <summary>Parameter key for setting and getting the flag for Deleting Image File After Recording, defaults to ParamValues.False. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.DataTrackParamType.ReservedDataTrackNumberParam">
            <summary>Parameter key for setting and getting Reserved Data Track Number. </summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.ProductionTargetParamType">
            <summary>ProductionTargetParamType are keys for Production Target parameters. They are used in SetProductionParam() and
SetProductionParam() in ProductionOnlyJob and ImageAndRecordJob, and their dervied classes.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionTargetParamType.TargetMailslotParam">
            <summary>Parameter key for setting and getting Target Mailslot, defaults to "ANY"  </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionTargetParamType.TargetInputBinParam">
            <summary>Parameter key for setting and getting Target Input Bin, defaults to "ANY"  </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionTargetParamType.TargetAutoloaderParam">
            <summary>Parameter key for setting and getting Target Autoloader, defaults to "ANY"  </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionTargetParamType.TargetProductionServerParam">
            <summary>Parameter key for setting and getting Target Production Server, defaults to "ANY"  </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionTargetParamType.TargetProductionClusterParam">
            <summary>Parameter key for setting and getting Target Production Cluster, defaults to "DefaultProductionCluster"  </summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.ProductionJobParamType">
            <summary>ProductionJobParamType are keys for Prouduction related parameters. They are used in SetProductionParam() and
GetProductionParam() in ProductionOnlyJob and ImageAndRecordJob, and their dervied classes.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionJobParamType.CustomProductionUserDataParam">
            <summary>Parameter key for setting and getting the Custom User Data, optional, used for ModifyDiscDll.  </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionJobParamType.CustomProductionUserTypeParam">
            <summary>Parameter key for setting and getting the Custom User Type, optional, used for ModifyDiscDll.  </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionJobParamType.StreamerLogonIdParam">
            <summary>Logon id of the process that started the Streamer. If the Streamer is started by eIS or DiscFlow, the logon id is 'RimageServices'
Default is 'RimageServices'.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionJobParamType.StreamerExternalParam">
            <summary>Flag to indicate how Production Server uses Streamer, false if started by the client API and true if started by eIS or DiscFlow.
Default is 'true'.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionJobParamType.StreamerHostParam">
            <summary>Optional parameter key for setting and getting the computer name of the streamer that Production server
will use to stream the image for recording. If this is not set no streaming will be performed. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionJobParamType.SimulatePrintingParam">
            <summary>Parameter key for setting and getting the flag for Simulating Printing, defaults to ParamValues.False. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionJobParamType.SimulateRecordingParam">
            <summary>Parameter key for setting and getting the flag for Simulating Recording, defaults to ParamValues.False. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionJobParamType.CopiesParam">
            <summary>Parameter key for setting and getting number of copies, defaults to 1. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionJobParamType.MediaSizeParam">
            <summary>Parameter key for setting and getting Media Size, defaults to MEDIA_SIZE_120MM.
Possible values are MEDIA_SIZE_120MM and MEDIA_SIZE_80MM.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionJobParamType.MediaTypeParam">
            <summary>Parameter key for setting and getting Media Type, defaults to MEDIA_TYPE_CDR. Possible values are:
<list><item>JobParamValues.MediaTypeCDR</item><item>JobParamValues.MediaTypeDVDR</item><item>JobParamValues.MediaTypeCDR_DL</item><item>JobParamValues.MediaTypeSOQ_CDR</item><item>JobParamValues.MediaTypeSOQ_DVDR</item><item>JobParamValues.MediaTypeSOQ_DVDR_DL</item><item>JobParamValues.MediaTypeDVDR_HD</item><item>JobParamValues.MediaTypeDVDR_HD_DL</item><item>JobParamValues.MediaTypeDVDR_BD</item><item>JobParamValues.MediaTypeDVDR_BD_DL</item><item>JobParamValues.MediaTypeDVDR_CSS</item><item>JobParamValues.MediaTypeDVDR_CSS_DL</item></list></summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.ControlParamType">
            <summary>ControlParamType are keys for Image Control Parameters. They are used in SetImageParam()
and GetImageParam() in ImageOnlyJob and ImageAndRecordJob and their derived classes.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ControlParamType.WaitForSpaceParam">
            <summary>Parameter key for Waiting For Space, defaults to ParamValues.False.  </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ControlParamType.AllowOverwriteParam">
            <summary>Parameter key for Allowing Overwrite, defaults to ParamValues.True.  </summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.PVDParamType">
            <summary>PVDParamType are keys for PVD Parameters. They are used in SetImageParam()
and GetImageParam() in ImageOnlyJob and ImageAndRecordJob and their derived classes.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.PVDParamType.PVDGMTOffsetParam">
            <summary>Parameter key for PVD GMT Offset, optional.  </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.PVDParamType.PVDEffectiveDateParam">
            <summary>Parameter key for PVD Effective Date, optional.  </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.PVDParamType.PVDExpirationDateParam">
            <summary>Parameter key for PVD Expiration Date, optional.  </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.PVDParamType.PVDBibliographyParam">
            <summary>Parameter key for PVD Bibliography, optional.  </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.PVDParamType.PVDAbstractParam">
            <summary>Parameter key for PVD Abstract, optional.  </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.PVDParamType.PVDApplicationParam">
            <summary>Parameter key for PVD Application, optional.  </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.PVDParamType.PVDPreparerParam">
            <summary>Parameter key for PVD Preparer, optional. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.PVDParamType.PVDPublisherParam">
            <summary>Parameter key for PVD Publisher, optional.  </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.PVDParamType.PVDCopyrightParam">
            <summary>Parameter key for PVD Copyright, optional.  </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.PVDParamType.PVDVolumeSetParam">
            <summary>Parameter key for PVD Volume Set, optional.  </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.PVDParamType.PVDSystemParam">
            <summary>Parameter key for PVD System, optional. </summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.VolumeNameParamType">
            <summary>FormatParamType are keys for Volume Name Parameters. They are used in SetImageParam()
and GetImageParam() in ImageOnlyJob and ImageAndRecordJob and their derived classes.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.VolumeNameParamType.HFSVolumeNameParam">
            <summary>Parameter key to set and get the Volume Name, defaults to VolumeNameParam value if not specified.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.VolumeNameParamType.VolumeNameParam">
            <summary>Parameter key to set and get the Volume Name, defaults to "No Label".
</summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.ImageFileParamType">
            <summary>FormatParamType are keys for Edit List Parameters. They are used in SetImageParam()
and GetImageParam() in ImageOnlyJob and ImageAndRecordJob and their derived classes.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ImageFileParamType.ImageFilePathUsedByServer">
            <summary>The path that the server uses to access this Image File.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ImageFileParamType.ImageFileSizeInMinutesParam">
            <summary>Parameter key to set and get the image file size in minutes, defaults to IMAGE_FILE_SIZE_IN_MINUTES_74.
Possible values are:
<list><item>JobParamValues.ImageFileSizeNone</item><item>JobParamValues.ImageFileSizeForCDR63</item><item>JobParamValues.ImageFileSizeForCDR74</item><item>JobParamValues.ImageFileSizeForCDR80</item><item>JobParamValues.ImageFileSizeForDVDR</item><item>JobParamValues.ImageFileSizeForDVDR_DL</item><item>JobParamValues.ImageFileSizeForBD</item><item>JobParamValues.ImageFileSizeForBD_DL</item><item>JobParamValues.ImageFileSizeForHD</item><item>JobParamValues.ImageFileSizeForHD_DL</item></list></summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ImageFileParamType.ImageFileAddPostgapParam">
            <summary>Parameter key to determine if adding Post Gap is needed, defaults to ParamValues.False.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ImageFileParamType.ImageFileIsCDXAParam">
            <summary>Parameter key to determine if the image file is a CDXA, defaults to ParamValues.False.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ImageFileParamType.ImageFileTypeParam">
            <summary>Parameter key for types of image file, defaults to IMAGE_FILE_TYPE_NORMAL. Possible values are:
<list><item>JobParamValues.ImageFileTypeNormal</item><item>JobParamValues.ImageFileTypePower</item><item>JobParamValues.ImageFileTypeRimageHeader</item></list></summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.EditListParamType">
            <summary>FormatParamType are keys for Edit List Parameters. They are used in SetEditListFileParam()
and GetEditListFileParam() in ImageOnlyJob and ImageAndRecordJob and their derived classes.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.EditListParamType.EditListPathUsedByServer">
            <summary>The path that the server uses to access this Edit List.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.EditListParamType.EditListOverrideTimestampParam">
            <summary>Used only for ImageOnlyJob and ImageAndRecordJob and their derived classes, defaults to "CCYY-MM-DD HH:MM:SS".
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.EditListParamType.EditListDestinationPartitionParam">
            <summary>Used only for ImageOnlyJob and ImageAndRecordJob and their derived classes, defaults to DESTINATION_PARTITION_BOTH.
Possible values are:
<list><item>JobParamValues.DestinationPartitionPC</item><item>JobParamValues.DestinationPartitionHFS</item><item>JobParamValues.DestinationPartitionBOTH</item></list></summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.ParentFolderParamType">
            <summary>FormatParamType are keys for Parent Folder Parameters. They are used in SetParentFolderParam()
and GetParentFolderParam() in ImageOnlyJob and ImageAndRecordJob and their derived classes.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ParentFolderParamType.ParentFolderPathUsedByServer">
            <summary>The path that the server uses to access this Parent Folder.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ParentFolderParamType.ParentFolderOverrideTimestampParam">
            <summary>Used only for ImageOnlyJob and ImageAndRecordJob and their derived classes, defaults to "CCYY-MM-DD HH:MM:SS".
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ParentFolderParamType.ParentFolderDestinationPartitionParam">
            <summary>Used only for ImageOnlyJob and ImageAndRecordJob and their derived classes, defaults to DESTINATION_PARTITION_BOTH.
Possible values are:
<list><item>JobParamValues.DestinationPartitionPC</item><item>JobParamValues.DestinationPartitionHFS</item><item>JobParamValues.DestinationPartitionBOTH</item></list></summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.ISORulesParamType">
            <summary>FormatParamType are keys for ISO Rules. They are used in SetImageParam()
and GetImageParam() in ImageOnlyJob and ImageAndRecordJob and their derived classes. These two parameters
are optional.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ISORulesParamType.CheckLevelsParam">
            <summary>Used only for ImageOnlyJob and ImageAndRecordJob and their derived classes, defaults to ParamValues.False.
Possible values are ParamValues.True and ParamValues.False.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ISORulesParamType.AllowDirExtParam">
            <summary>Used only for ImageOnlyJob and ImageAndRecordJob and their derived classes, defaults to ParamValues.True.
Possible values are ParamValues.True and ParamValues.False.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ISORulesParamType.CheckNamesParam">
            <summary>Used only for ImageOnlyJob and ImageAndRecordJob and their derived classes, defaults to ParamValues.True.
Possible values are ParamValues.True and ParamValues.False.
</summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.FormatOptionParamType">
            <summary>FormatParamType are keys for Imaging Format Parameter Options. They are used in SetImageParam()
and GetImageParam() in ImageOnlyJob and ImageAndRecordJob and their derived classes. These two parameters
are optional.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.FormatOptionParamType.ExpandShortcutsParam">
            <summary>Used only for ImageOnlyJob and ImageAndRecordJob and their derived classes, defaults to ParamValues.False.
Possible values are ParamValues.True and ParamValues.False.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.FormatOptionParamType.ZipPasswordParam">
            <summary>Creates an encrypted zip file.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.FormatOptionParamType.ZipPasswordTypeParam">
            <summary>Creates encrypted zip files. Choices are 'compatible' or 'AES':
<list><item>FORMAT_ZIPPASSWORDTYPE_COMPATIBLE</item><item>FORMAT_ZIPPASSWORDTYPE_AES</item></list></summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.FormatOptionParamType.ZipFilenameParam">
            <summary>Sets the name of the zip file, the default is 'COMP.ZIP'.
This has to be a file name only, not a full path.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.FormatOptionParamType.ZipWhichFilesParam">
            <summary>Gives control over zipping files in the root or not.
'RootFilesNotZipped' means only folders from the root down are zipped.
Possible values are
<list><item>FORMAT_ZIPWHICHFILES_ALL</item><item>FORMAT_ZIPWHICHFILES_ROOTNOTZIPPED</item><item>FORMAT_ZIPWHICHFILES_SELECTEDFILES</item></list></summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.FormatOptionParamType.ExcludeEmptyFoldersParam">
            <summary>If TRUE, Removes folders with no files, especially useful for spanned volumes.
Possible values are ParamValues.True and ParamValues.False, defaults to ParamValues.False.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.FormatOptionParamType.AllowBootableCDParam">
            <summary>Used only for ImageOnlyJob and ImageAndRecordJob and their derived classes, defaults to ParamValues.False.
Possible values are ParamValues.True and ParamValues.False.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.FormatOptionParamType.AddFilesToZipArchiveParam">
            <summary>Used only for ImageOnlyJob and ImageAndRecordJob and their derived classes, defaults to ParamValues.False.
Possible values are ParamValues.True and ParamValues.False.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.FormatOptionParamType.AllowCaseSensitiveFileNamesParam">
            <summary>Used only for ImageOnlyJob and ImageAndRecordJob and their derived classes, defaults to ParamValues.False.
Possible values are ParamValues.True and ParamValues.False.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.FormatOptionParamType.IgnoreBadFileNamesParam">
            <summary>Used only for ImageOnlyJob and ImageAndRecordJob and their derived classes, defaults to ParamValues.False.
Possible values are ParamValues.True and ParamValues.False.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.FormatOptionParamType.AddVersionsToFileNamesParam">
            <summary>Used only for ImageOnlyJob and ImageAndRecordJob and their derived classes, defaults to ParamValues.True.
Possible values are ParamValues.True and ParamValues.False.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.FormatOptionParamType.ForceShortFileNameParam">
            <summary>Used only for ImageOnlyJob and ImageAndRecordJob and their derived classes, defaults to ParamValues.False.
Possible values are ParamValues.True and ParamValues.False.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.FormatOptionParamType.AddDotToFileNamesParam">
            <summary>Used only for ImageOnlyJob and ImageAndRecordJob and their derived classes, defaults to ParamValues.True.
Possible values are ParamValues.True and ParamValues.False.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.FormatOptionParamType.AllowMultipleFilePathsParam">
            <summary>Used only for ImageOnlyJob and ImageAndRecordJob and their derived classes, defaults to ParamValues.True.
Possible values are ParamValues.True and ParamValues.False.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.FormatOptionParamType.ForceUpperCaseParam">
            <summary>Used only for ImageOnlyJob and ImageAndRecordJob and their derived classes, defaults to ParamValues.False.
Possible values are ParamValues.True and ParamValues.False.
</summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.FormatParamType">
            <summary>FormatParamType are keys for Imaging Format parameters. They are used in SetImageParam()
and GetImageParam() in ImageOnlyJob and ImageAndRecordJob and their derived classes. These two parameters
are optional.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.FormatParamType.IsRockridgeParam">
            <summary>Used only for ImageOnlyJob and ImageAndRecordJob and their derived classes, defaults to ParamValues.False.
Possible values are ParamValues.True and ParamValues.False.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.FormatParamType.IsJolietParam">
            <summary>Used only for ImageOnlyJob and ImageAndRecordJob and their derived classes, defaults to ParamValues.False.
Possible values are ParamValues.True and ParamValues.False.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.FormatParamType.ISOAppleParam">
            <summary>Used only for ImageOnlyJob and ImageAndRecordJob and their derived classes, defaults to FORMAT_ISO_APPLE_NONE.
Possible values are:
<list><item>JobParamValues.FormatISO_APPLE_NONE</item><item>JobParamValues.FormatISO_APPLE_HFS</item><item>JobParamValues.FormatISO_APPLE_ISO_EXT</item></list></summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.FormatParamType.ISOLevelParam">
            <summary>Used only for ImageOnlyJob and ImageAndRecordJob and their derived classes, defaults to FORMAT_ISO_9660_L2. Possible values are:
	<list><item>JobParamValues.FormatISONone</item><item>JobParamValues.FormatISO_9660_L1</item><item>JobParamValues.FormatISO_9660_L2</item><item>FORMAT_ISO_9660_L3</item></list></summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.FormatParamType.UDFAppleParam">
            <summary>Used only for ImageOnlyJob and ImageAndRecordJob and their derived classes, defaults to FORMAT_UDF_APPLE_NONE. Possible values are:
	<list><item>JobParamValues.FormatUDF_APPLE_NONE</item><item>JobParamValues.FormatUDF_APPLE_EXT</item></list></summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.FormatParamType.UDFVersionParam">
            <summary>Used only for ImageOnlyJob and ImageAndRecordJob and their derived classes, defaults to FORMAT_UDF_102. Possible values are:
	<list><item>JobParamValues.FormatUDF_102</item><item>JobParamValues.FormatUDF_150</item><item>JobParamValues.FormatUDF_150_UNICODE</item><item>JobParamValues.FormatUDF_200</item><item>JobParamValues.FormatUDF_201</item><item>JobParamValues.FormatUDF_250</item><item>JobParamValues.FormatUDF_260</item></list></summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.ImagingTargetParamType">
            <summary>ImagingTargetParamType are keys for Imaging Target parameters. They are used in SetImageParam()
and GetImageParam() in ImageOnlyJob and ImageAndRecordJob and their derived classes. These two parameters
are optional.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ImagingTargetParamType.TargetImagingServerParam">
            <summary>Used only for ImageOnlyJob and ImageAndRecordJob and their derived classes. Optional, defaults to "ANY".</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ImagingTargetParamType.TargetImagingClusterParam">
            <summary>Used only for ImageOnlyJob and ImageAndRecordJob and their derived classes. Optional, defaults to "DefaultImageCluster".</summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.ImagingJobParamType">
            <summary>ImagingJobParamType are keys for Imaging related parameters. They are used in SetImagingParam() and
GetImagingParam() in ImageOnlyJob and ImageAndRecordJob, and their dervied classes.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ImagingJobParamType.ImagerStreamerLogonIdParam">
            <summary>Logon id of the process that started the Streamer. If the Streamer is started by eIS or DiscFlow, the logon id is 'RimageServices'
Default is 'RimageServices'.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ImagingJobParamType.ImagerStreamerExternalParam">
            <summary>Flag to indicate how Imager uses Streamer, false if started by the client API and true if started by eIS or DiscFlow.
Default is 'true'.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ImagingJobParamType.ImagerStreamerHostParam">
            <summary>Optional parameter key for setting and getting the computer name of the streamer that Imaging server
will use to stream the data to create an image. If this is not set no streaming will be performed.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ImagingJobParamType.IncludeSpanFilesParam">
            <summary>Parameter key for IncludeSpanFiles, optional, default to ParamValues.True.
If ParamValues.True, every disc in a spanned set includes the manifest and spanrestore files.
If ParamValues.False, the manifest and spanrestore files are not included.
If "IfSpanned" is used, the manifest and spanrestore files are included only if the spanned set is more than one disc.
Possible values are:
<list><item>ParamValues.True</item><item>ParamValues.False</item><item>"IfSpanned"</item></list></summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ImagingJobParamType.SplitFileIfOverParam">
            <summary>SplitFileIfOver allows the caller to specify a file size in bytes.</summary>
            <remarks>Files under this size will never be split. Files over this size will only be split if they fall on a volume boundary.</remarks>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ImagingJobParamType.AllowSpanningParam">
            <summary>Parameter key for setting and getting the allow spanning flag.</summary>
Possible values are ParamValues.True and ParamValues.False, ParamValues.False is default.
<remarks>IImageOptions.AllowSpanning() and IImageOptions.IsSpanning() methods are equivalent. </remarks></member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ImagingJobParamType.CustomImagingUserDataParam">
            <summary>Parameter key for setting and getting the Custom User Data, optional, used for ModifyImageDll.  </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ImagingJobParamType.CustomImagingUserTypeParam">
            <summary>Parameter key for setting and getting the Custom User Type, optional, used for ModifyImageDll.  </summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.JobParamType">
            <summary>JobParamType are keys for Job related parameters. They are used in SetJobParam()
in the Job class.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.JobParamType.DeleteDurableJobFileAfterFinishingParam">
            <summary>Applies to Durable jobs only. Parameter key for setting and getting the the flag to indicate if the user wants RAPID to delete the durable job file
after job COMPLETED, CANCELED or FAILED. This parameter is defauled to 'TRUE' or not set.  If this parameter is set to 'FALSE',
the job file would not be removed until the user calls RemoveFinsihedJobs().
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.JobParamType.EmailAddressParam">
            <summary>Parameter key for setting and getting the Email Address of a job. This parameter is optional to a Job. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.JobParamType.PriorityParam">
            <summary>Parameter key for setting and getting the Priority of a job, defaults to PRIORITY_NORMAL. Possible values are:
<list><item>JobParamValues.PriorityLow</item><item>JobParamValues.PriorityNormal</item><item>JobParamValues.PriorityHigh</item></list></summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.JobParamType.OriginatorParam">
            <summary>Parameter key for setting and getting the Originator of a job. This parameter is optional to a Job. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.JobParamType.ClientIdParam">
            <summary>Parameter key for setting and getting the Client ID of a job. </summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.JobStateType">
            <summary>JobStateType identifies possible job state. The GetJobState() of the JobStatus
class returns the state of the current job.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.JobStateType.JobFailed">
            <summary>The state of a job after the job fails. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.JobStateType.JobCancelled">
            <summary>The state of a job after the job is cancelled. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.JobStateType.JobCompleted">
            <summary>The state of a job after a successful completion. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.JobStateType.JobInProcess">
            <summary>The state of a job after submission and before it is JobCompleted, or JobCancelled, or JobFailed. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.JobStateType.JobSubmittedForProduction">
            <summary>The state of a job after it is submitted for production. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.JobStateType.JobSubmittedForImaging">
            <summary>The state of a job after it is submitted for imaging.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.JobStateType.JobNotStarted">
            <summary>The default state of a job right after the creation. </summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.JobType">
            <summary>
The JobType enumerates over possible job types in the Rimage system. All the types
starting with 'User' are reserved for client customization.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.JobType.UserImageAndRecordJobType1">
            <summary>User Job types, ranging from UserImageAndRecordJobType1 to UserImageAndRecordJobTypeLast. The user Job class
must be derived from ImageAndRecordJob.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.JobType.HFSJobType">
            <summary>Job type for predefined HFSJob. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.JobType.BlueBookJobType">
            <summary>Job type for predefined BlueBookJob. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.JobType.HybridJobType">
            <summary>Job type for predefined HybridJob. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.JobType.UDFJobType">
            <summary>Job type for predefined UDFJob. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.JobType.ISOJobType">
            <summary>Job type for predefined ISOJob. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.JobType.ImageAndRecordJobType">
            <summary>Job type for predefined ImageAndRecordJob. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.JobType.UserProductionOnlyJobType1">
            <summary>User Job types, ranging from UserProductionOnlyJobType1 to UserProductionOnlyJobTypeLast. The user Job class
must be derived from ProductionOnlyJob.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.JobType.CopyJobType">
            <summary>Job type for predefined Copy Job. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.JobType.ReadJobType">
            <summary>Job type for predefined Read Job. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.JobType.FromImageJobType">
            <summary>Job type for predefined FromImageJob. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.JobType.BlueBookFromImageJobType">
            <summary>Job type for predefined BlueBookFromImageJob. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.JobType.LabelOnlyJobType">
            <summary>Job type for predefined LabelOnlyJob. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.JobType.AudioJobType">
            <summary>Job type for predefined AudioJob. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.JobType.ProductionOnlyJobType">
            <summary>Job type for predefined ProductionOnlyJob. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.JobType.UserImageOnlyJobType1">
            <summary>User Job types, ranging from UserImageOnlyJobType1 to UserImageOnlyJobTypeLast. The user Job class
must be derived from ImageOnlyJob.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.JobType.HFSImageOnlyJobType">
            <summary>Job type for predefined HFSImageOnlyJob. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.JobType.ISOImageOnlyJobType">
            <summary>Job type for predefined ISOImageOnlyJob. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.JobType.HybridImageOnlyJobType">
            <summary>Job type for predefined HybridImageOnlyJob. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.JobType.UDFImageOnlyJobType">
            <summary>Job type for predefined UDFImageOnlyJob. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.JobType.ImageOnlyJobType">
            <summary>Job type for predefined ImageOnlyJob. </summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.DiscTrackType">
            <summary>
TrackType is used by ReadJob. Track type is returned by ReadJob.GetTrackType().
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.DiscTrackType.TrackTypeMode2Form1">
            <summary> Blue Book variation - no longer supported, but retain placeholder. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.DiscTrackType.TrackTypeXAMixed">
            <summary> mode 2 interleaved form 1 and form 2.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.DiscTrackType.TrackTypeXAForm2">
            <summary> mode 2 form 2. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.DiscTrackType.TrackTypeXAForm1">
            <summary> mode 2 form 1. </summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.ReadJobXmlStringType">
            <summary>
Enumeration specifically to signify which original ReadJob XML to get in the JobStatus object.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ReadJobXmlStringType.EndReadTrackXMLString">
            <summary>An indicator for getting the orginal Xml String of a ReadJob when terminating the read.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ReadJobXmlStringType.AllTracksToFoldersXMLString">
            <summary>An indicator for getting the orginal Xml String of a ReadJob when AllTracksToFolders is called.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ReadJobXmlStringType.AllTracksToImageFilesXMLString">
            <summary>An indicator for getting the orginal Xml String of a ReadJob when AllTracksToImageFiles is called.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ReadJobXmlStringType.MappingXMLString">
            <summary>An indicator for getting orginal Xml String of a ReadJob in the initial Mapping stage.</summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.JobXmlStringType">
            <summary>
Enumeration specifically to signify which original Job XML to get in the JobStatus object.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.JobXmlStringType.OrderSetXMLString">
            <summary>An indicator for getting the orginal Production Order Set Xml String of a span Job.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.JobXmlStringType.ProductionXMLString">
            <summary>An indicator for getting the orginal Production Xml String of a Job.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.JobXmlStringType.ImageXMLString">
            <summary>An indicator for getting the orginal Image Xml String of a Job.</summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.ConvertToUNC">
            <summary>
Enumeration specifically to signify whether to convert
a file path to its UNC representation or to leave it alone.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ConvertToUNC.True">
            <summary>Convert to UNC.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ConvertToUNC.False">
            <summary>Do NOT convert to UNC.</summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.DiagnosticsParamType">
            <summary>
Represents possible types of settings returned with ProductionServer.GetProductionParam(DiagnosticsParamType) and set with ProductionServer.SetProductionParam(DiagnosticsParamType) methods.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.DiagnosticsParamType.DisableAdaptiveTracingParam">
            <summary>The value is either ParamValues.True or ParamValues.False, defaults to ParamValues.False</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.DiagnosticsParamType.EnableRecordSpeedLogsParam">
            <summary>The value is either ParamValues.True or ParamValues.False, defaults to ParamValues.False</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.DiagnosticsParamType.AddOrderNotTakenReasonToSessionLogParam">
            <summary>The value is either ParamValues.True or ParamValues.False, defaults to ParamValues.False</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.DiagnosticsParamType.AddUnderrunsToSessionLogParam">
            <summary>The value is either ParamValues.True or ParamValues.False, defaults to ParamValues.False</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.DiagnosticsParamType.AddTimingToSessionLogParam">
            <summary>The value is either ParamValues.True or ParamValues.False, defaults to ParamValues.False</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.DiagnosticsParamType.MaxSessionLogFileSizeParam">
            <summary>Maximum Session log file size in MB</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.DiagnosticsParamType.EnableStartupTracingParam">
            <summary>The value is either ParamValues.True or ParamValues.False, defaults to ParamValues.False</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.DiagnosticsParamType.MaxJobTraceFileSizeParam">
            <summary>Maximum Job trace file size in MB</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.DiagnosticsParamType.EnableJobTracingParam">
            <summary>The value is either ParamValues.True or ParamValues.False, defaults to ParamValues.False</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.DiagnosticsParamType.MaxXmlTraceFileSizeParam">
            <summary>Maximum Xml trace file size in MB</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.DiagnosticsParamType.EnableAllXmlOrderStatusParam">
            <summary>The value is either ParamValues.True or ParamValues.False, defaults to ParamValues.False</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.DiagnosticsParamType.EnableXmlTracingParam">
            <summary>The value is either ParamValues.True or ParamValues.False, defaults to ParamValues.False</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.DiagnosticsParamType.MaxEverestTraceFileSizeParam">
            <summary>Maximum Everest trace file size in MB</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.DiagnosticsParamType.EnableEverestTracingParam">
            <summary>The value is either ParamValues.True or ParamValues.False, defaults to ParamValues.False</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.DiagnosticsParamType.MaxSerialTraceFileSizeParam">
            <summary>Maximum Serial trace file size in MB</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.DiagnosticsParamType.EnableHiResSerialTimingParam">
            <summary>The value is either ParamValues.True or ParamValues.False, defaults to ParamValues.False</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.DiagnosticsParamType.EnableSerialTracingParam">
            <summary>The value is either ParamValues.True or ParamValues.False, defaults to ParamValues.False</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.DiagnosticsParamType.MaxScsiTraceFileSizeParam">
            <summary>Maximum Scsi trace file size in MB</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.DiagnosticsParamType.EnableHiResScsiTimingParam">
            <summary>The value is either ParamValues.True or ParamValues.False, defaults to ParamValues.False</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.DiagnosticsParamType.EnableScsiReadWriteTracingParam">
            <summary>The value is either ParamValues.True or ParamValues.False, defaults to ParamValues.False</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.DiagnosticsParamType.EnableScsiTracingParam">
            <summary>The value is either ParamValues.True or ParamValues.False, defaults to ParamValues.False</summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.VerifyParamType">
            <summary>
Represents possible types of settings returned with ProductionServer.GetProductionParam(VerifyParamType) and set with ProductionServer.SetProductionParam(VerifyParamType) methods.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.VerifyParamType.UseChecksumDLLParam">
            <summary>The value is either ParamValues.True or ParamValues.False, defaults to ParamValues.False</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.VerifyParamType.DiscFrequencyParam">
            <summary>Use value "n" where every "nth" disc is verified.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.VerifyParamType.EnableVerificationParam">
            <summary>The value is either ParamValues.True or ParamValues.False, defaults to ParamValues.False</summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.AutoBulkReadingParamType">
            <summary>
Represents possible types of settings returned with ProductionServer.GetProductionParam(AutoBulkReadingParamType) and set with ProductionServer.SetProductionParam(AutoBulkReadingParamType) methods.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.AutoBulkReadingParamType.ExtractionFiltersParam">
            <summary>
The ExtractionFilters value should contain a semi-colon separated list of filters.
	 To select a specific file, name its full path from the root as follows:
		 "\Dir A\Dir B\Filename.ext".
	 To select a specific folder, name its full path ending with a backslash as follows:
		 "\Dir A\Dir B\". This will capture all files and sub-folders in 'Dir B'.
	 To select all files with a specific extension, use "*.ext".
	 To select all extentions of a file with a specific name, use "name.*".
	 To select all files with a specific extension under a specific folder, use "\Dir A\*.ext".
	 To select all extentions of a file with a specific name under a specific folder, use "\DirA\name.*".
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.AutoBulkReadingParamType.CreateFullDiscImagesParam">
            <summary>The value is either ParamValues.True or ParamValues.False, defaults to ParamValues.False</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.AutoBulkReadingParamType.PutFailuresToRejectBinParam">
            <summary>The value is either ParamValues.True or ParamValues.False, defaults to ParamValues.False</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.AutoBulkReadingParamType.UseISRCAsFilenameForAudioTracksParam">
            <summary>The value is either ParamValues.True or ParamValues.False, defaults to ParamValues.False</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.AutoBulkReadingParamType.ImageTypeForAudioTracksParam">
            <summary>
	The value is one of the following choices, defaults to AUTO_BULK_READ_AUDIO_TRACK_PCM:
	<list><item>ServerParamValues.AutoBulkReadAudioTrackPCM</item><item>ServerParamValues.AutoBulkReadAudioTrackWAV</item><item>ServerParamValues.AutoBulkReadAudioTrackDDP</item></list></summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.AutoBulkReadingParamType.ExtractISOImagesToFoldersAndFilesParam">
            <summary>The value is either ParamValues.True or ParamValues.False, defaults to ParamValues.False</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.AutoBulkReadingParamType.UseVolumeIdAsFolderNameParam">
            <summary>The value is either ParamValues.True or ParamValues.False, defaults to ParamValues.False</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.AutoBulkReadingParamType.BaseFolderForImagesParam">
            <summary>Specifies the base folder for resultant images from a bulk read operation</summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.ReadingParamType">
            <summary>
Represents possible types of settings returned with ProductionServer.GetProductionParam(ReadingParamType) and set with ProductionServer.SetProductionParam(ReadingParamType) methods.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ReadingParamType.AudioReadSpeedParam">
            <summary>
	The value is one of the following choices, defaults to RECORDING_SPEED_MAX:
	<list><item>ServerParamValues.ReadingSpeed1X</item><item>ServerParamValues.ReadingSpeed2X</item><item>ServerParamValues.ReadingSpeed4X</item><item>ServerParamValues.ReadingSpeed8X</item><item>ServerParamValues.ReadingSpeedMAX</item></list></summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ReadingParamType.PreferredReaderParam">
            <summary>
	The value is one of the following choices, defaults to READING_PREFERRED_READER_RECORDERS:
	<list><item>ServerParamValues.ReadingPreferredReaderReaders</item><item>ServerParamValues.ReadingPreferredReaderRecorders</item></list></summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.CachingParamType">
            <summary>
Represents possible types of settings returned with ProductionServer.GetProductionParam(CachingParamType) and set with ProductionServer.SetProductionParam(CachingParamType) methods.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.CachingParamType.DisableStreamingParam">
            <summary>The value is either ParamValues.True or ParamValues.False, defaults to ParamValues.False</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.CachingParamType.AllowOverlapRecordingParam">
            <summary>The value is either ParamValues.True or ParamValues.False, defaults to ParamValues.False</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.CachingParamType.CacheDriveLettersParam">
            <summary>Specifies the drive letters to be used for recorder cache files. Specified as unseparated list, e.g. "def".</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.CachingParamType.AllowStaticCachingParam">
            <summary>The value is either ParamValues.True or ParamValues.False, defaults to ParamValues.False</summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.PrintingParamType">
            <summary>
Represents possible types of settings returned with ProductionServer.GetProductionParam(PrintingParamType) and set with ProductionServer.SetProductionParam(PrintingParamType) methods.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.PrintingParamType.LowInkPercentageParam">
            <summary>Specifies the percentage at which a low ink alert is sent by ProductionServer</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.PrintingParamType.ErrorOnLowInkLevelParam">
            <summary>The value is either ParamValues.True or ParamValues.False, defaults to ParamValues.False</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.PrintingParamType.AcceptPrintingOrdersWithoutPrinterParam">
            <summary>The value is either ParamValues.True or ParamValues.False, defaults to ParamValues.False</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.PrintingParamType.RejectPatternParam">
            <summary>
	The value is one of the following choices, defaults to PRINTING_REJECT_PATTERN_DISABLED:
	<list><item>ServerParamValues.PrintingRejectPatternDisabled</item><item>ServerParamValues.PrintingRejectPatternAllRejectedDiscs</item><item>ServerParamValues.PrintingRejectPatternRecordingFailuresOnly</item></list></summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.PrintingParamType.SimulatePrintingSettingParam">
            <summary>The value is either ParamValues.True or ParamValues.False, defaults to ParamValues.False</summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.RecordingParamType">
            <summary>
Represents possible types of settings returned with ProductionServer.GetProductionParam(RecordingParamType) and set with ProductionServer.SetProductionParam(RecordingParamType) methods.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.RecordingParamType.RecordingRetriesParam">
            <summary>
	Number of times ePS will retry after a recording error, before an alert will be posted.
	Valid values are -1 to 10, use -1 for infinite retries.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.RecordingParamType.PostDialogOnWrongMediaParam">
            <summary>The value is either ParamValues.True or ParamValues.False, defaults to ParamValues.False</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.RecordingParamType.DestroyFailedRecordingsParam">
            <summary>The value is either ParamValues.True or ParamValues.False, defaults to ParamValues.False</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.RecordingParamType.Allow90_100MinuteCDRParam">
            <summary>The value is either ParamValues.True or ParamValues.False, defaults to ParamValues.False</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.RecordingParamType.AddPostgapToISOParam">
            <summary>
	The value is one of the following choices, defaults to RECORDING_ADD_ISO_POSTGAP_DISABLED:
	<list><item>ServerParamValues.RecordingAddISOPostgapDisabled</item><item>ServerParamValues.RecordingAddISOPostgapImages</item><item>ServerParamValues.RecordingAddISOPostgapDiscs</item><item>ServerParamValues.RecordingAddISOPostgapBoth</item></list></summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.RecordingParamType.DisableISOExtentFixupsParam">
            <summary>The value is either ParamValues.True or ParamValues.False, defaults to ParamValues.False</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.RecordingParamType.RejectNonISOParam">
            <summary>The value is either ParamValues.True or ParamValues.False, defaults to ParamValues.False</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.RecordingParamType.MaxDVDRecordingSpeedParam">
            <summary>
	The value is one of the following choices, defaults to RECORDING_SPEED_MAX:
	<list><item>ServerParamValues.RecordingSpeed1X</item><item>ServerParamValues.RecordingSpeed2X</item><item>ServerParamValues.RecordingSpeed4X</item><item>ServerParamValues.RecordingSpeed8X</item><item>ServerParamValues.RecordingSpeed12X</item><item>ServerParamValues.RecordingSpeed16X</item><item>ServerParamValues.RecordingSpeed24X</item><item>ServerParamValues.RecordingSpeed32X</item><item>ServerParamValues.RecordingSpeed40X</item><item>ServerParamValues.RecordingSpeed48X</item><item>ServerParamValues.RecordingSpeed52X</item><item>ServerParamValues.RecordingSpeedMax</item></list></summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.RecordingParamType.MaxCDRecordingSpeedParam">
            <summary>
	The value is one of the following choices, defaults to RECORDING_SPEED_MAX:
	<list><item>ServerParamValues.RecordingSpeed1X</item><item>ServerParamValues.RecordingSpeed2X</item><item>ServerParamValues.RecordingSpeed4X</item><item>ServerParamValues.RecordingSpeed8X</item><item>ServerParamValues.RecordingSpeed12X</item><item>ServerParamValues.RecordingSpeed16X</item><item>ServerParamValues.RecordingSpeed24X</item><item>ServerParamValues.RecordingSpeed32X</item><item>ServerParamValues.RecordingSpeed40X</item><item>ServerParamValues.RecordingSpeed48X</item><item>ServerParamValues.RecordingSpeed52X</item><item>ServerParamValues.RecordingSpeedMax</item></list></summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.RecordingParamType.UseNewMediaOnlyParam">
            <summary>The value is either ParamValues.True or ParamValues.False, defaults to ParamValues.False</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.RecordingParamType.SimulateRecordingSettingParam">
            <summary>The value is either ParamValues.True or ParamValues.False, defaults to ParamValues.False</summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.KioskModeParamType">
            <summary>
Represents possible types of settings returned with ProductionServer.GetProductionParam(KioskModeParamType) and set with ProductionServer.SetProductionParam(KioskModeParamType) methods.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.KioskModeParamType.AutoRespondOnStartupParam">
            <summary>The value is either ParamValues.True or ParamValues.False, defaults to ParamValues.False</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.KioskModeParamType.PrinterRecoveryParam">
            <summary>
	The value is one of the following choices, defaults to PRODUCTION_KIOSK_MODE_RETRY:
	<list><item>ServerParamValues.ProductionKioskModeRetry</item><item>ServerParamValues.ProductionKioskModeExit</item><item>ServerParamValues.ProductionKioskModeDisable</item></list></summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.KioskModeParamType.AutoloaderRecoveryParam">
            <summary>
	The value is one of the following choices, defaults to PRODUCTION_KIOSK_MODE_RETRY:
	<list><item>ServerParamValues.ProductionKioskModeRetry</item><item>ServerParamValues.ProductionKioskModeExit</item><item>ServerParamValues.ProductionKioskModeDisable</item></list></summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.KioskModeParamType.StartupWithoutPrinterParam">
            <summary>The value is either ParamValues.True or ParamValues.False, defaults to ParamValues.False</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.KioskModeParamType.RecoverOrdersParam">
            <summary>The value is either ParamValues.True or ParamValues.False, defaults to ParamValues.True</summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.ProductionModeParamType">
            <summary>
Represents possible types of settings returned with ProductionServer.GetProductionParam(ProductionModeParamType) and set with ProductionServer.SetProductionParam(ProductionModeParamType) methods.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionModeParamType.VerifyOnlyModeParam">
            <summary>The value is either ParamValues.True or ParamValues.False, defaults to ParamValues.False</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionModeParamType.FifoModeParam">
            <summary>The value is either ParamValues.True or ParamValues.False, defaults to ParamValues.False</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionModeParamType.OperatingModeParam">
            <summary>
	The value is one of the following choices, defaults to PRODUCTION_OPERATING_MODE_NORMAL:
	<list><item>ServerParamValues.ProductionOperatingModeNormal</item><item>ServerParamValues.ProductionOperatingModeBulkRead</item><item>ServerParamValues.ProductionOperatingModeJobStreaming</item><item>ServerParamValues.ProductionOperatingModeAutoBulkRead</item></list></summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionModeParamType.ServerModeParam">
            <summary>
	The value is one of the following choices, defaults to PRODUCTION_SERVER_MODE_ATTENDED:
	<list><item>ServerParamValues.ProductionServerModeAttended</item><item>ServerParamValues.ProductionServerModeKiosk</item></list></summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.MailslotParamType">
            <summary>
Represents possible types of settings returned with ProductionServer.GetMailslotParam() and set with ProductionServer.SetMailslotParam() methods.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.MailslotParamType.MailslotSettingParam">
            <summary>
	The value is one of the following choices, defaults to MAILSLOT_USAGE_UNUSED:
	<list><item>ServerParamValues.MailslotUsageOutput</item><item>ServerParamValues.MailslotUsageOutputReject</item><item>ServerParamValues.MailslotUsageReject</item><item>ServerParamValues.MailslotUsageReservedOutput</item><item>ServerParamValues.MailslotUsageDoNotUse</item></list></summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.BinParamType">
            <summary>
Represents possible types of settings returned with ProductionServer.GetBinParam() and set with ProductionServer.SetBinParam() methods.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.BinParamType.BinSettingParam">
            <summary>
	The value is one of the following choices, defaults to BIN_USAGE_INPUT:
	<list><item>ServerParamValues.BinUsageInput</item><item>ServerParamValues.BinUsageInputOutput</item><item>ServerParamValues.BinUsageCDRInputOnly</item><item>ServerParamValues.BinUsageDVDRInputOnly</item><item>ServerParamValues.BinUsageOutput</item><item>ServerParamValues.BinUsageOutputReject</item><item>ServerParamValues.BinUsageReject</item><item>ServerParamValues.BinUsageCollate</item><item>ServerParamValues.BinUsageReservedInput</item><item>ServerParamValues.BinUsageDVDR_DLInputOnly</item><item>ServerParamValues.BinUsageSOQ_CDRInputOnly</item><item>ServerParamValues.BinUsageSOQ_DVDRInputOnly</item><item>ServerParamValues.BinUsageSOQ_DVDR_DLInputOnly</item><item>ServerParamValues.BinUsageDVDR_HDInputOnly</item><item>ServerParamValues.BinUsageDVDR_HD_DLInputOnly</item><item>ServerParamValues.BinUsageDVDR_BDInputOnly</item><item>ServerParamValues.BinUsageDVDR_BD_DLInputOnly</item><item>ServerParamValues.BinUsageDVDR_CSSInputOnly</item><item>ServerParamValues.BinUsageDVDR_CSS_DLInputOnly</item></list></summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.AutoloaderParamType">
            <summary>
Represents possible types of settings returned with ProductionServer.GetAutoloaderParam() and set with ProductionServer.SetAutoloaderParam() methods.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.AutoloaderParamType.AutoloaderMediaSizeParam">
            <summary>
	The value is one of the following choices, defaults to AUTOLOADER_MEDIA_SIZE_120MM:
	<list><item>ServerParamValues.AutoloaderMediaSize120MM</item><item>ServerParamValues.AutoloaderMediaSize80MM</item></list></summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.AutoloaderParamType.AutoloaderMediaTypeParam">
            <summary>
	The value is one of the following choices, defaults to AUTOLOADER_MEDIA_TYPE_CDR:
	<list><item>ServerParamValues.AutoloaderMediaTypeCDR</item><item>ServerParamValues.AutoloaderMediaTypeDVDR</item><item>ServerParamValues.AutoloaderMediaTypeBOTH</item><item>ServerParamValues.AutoloaderMediaTypeDVDR_DL</item><item>ServerParamValues.AutoloaderMediaTypeCOMBO</item><item>ServerParamValues.AutoloaderMediaTypeSOQ_CDR</item><item>ServerParamValues.AutoloaderMediaTypeSOQ_DVDR</item><item>ServerParamValues.AutoloaderMediaTypeSOQ_DVDR_DL</item><item>ServerParamValues.AutoloaderMediaTypeDVDR_HD</item><item>ServerParamValues.AutoloaderMediaTypeDVDR_HD_DL</item><item>ServerParamValues.AutoloaderMediaTypeDVDR_BD</item><item>ServerParamValues.AutoloaderMediaTypeDVDR_BD_DL</item><item>ServerParamValues.AutoloaderMediaTypeDVDR_CSS</item><item>ServerParamValues.AutoloaderMediaTypeDVDR_CSS_DL</item></list></summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.ServerParamType">
            <summary>
Represents possible types of settings returned with Server.GetParam() and set with Server.SetParam() methods.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ServerParamType.OrderStatusIntervalParam">
            <summary>Period of time in seconds a Server waits to send out the next order status, defaults to 10 seconds.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ServerParamType.DescriptionParam">
            <summary>Description of the server </summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.ReaderInfoType">
            <summary>
Represents possible types of Reader information returned with ProductionServer.GetReaderInfo() method.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ReaderInfoType.CanReadDVD_BD">
            <summary>'true' if Reader can read on DVD-BDs, otherwise 'false' </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ReaderInfoType.CanReadDVD_HD">
            <summary>'true' if Reader can read on DVD-HDs, otherwise 'false' </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ReaderInfoType.CanReadDVD">
            <summary>'true' if Reader can read on DVDs, otherwise 'false' </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ReaderInfoType.ReaderInquiryString">
            <summary>Serial number of the Reader, etc. </summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.RecorderInfoType">
            <summary>
Represents possible types of Recorder information returned with ProductionServer.GetRecorderInfo() method.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.RecorderInfoType.CanDestroySOQ_CDR">
            <summary>'true' if Recorder can destroy SOQ CDRs, otherwise 'false' </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.RecorderInfoType.CanRecordDVDR_BD">
            <summary>'true' if Recorder can record on DVDR-BDs, otherwise 'false' </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.RecorderInfoType.CanRecordDVDR_HD">
            <summary>'true' if Recorder can record on DVDR-HDs, otherwise 'false' </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.RecorderInfoType.CanRecordSOQ_DVDR_DL">
            <summary>'true' if Recorder can record on SOQ DVDR-DLs, otherwise 'false' </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.RecorderInfoType.CanRecordSOQ_DVDR">
            <summary>'true' if Recorder can record on SOQ DVDRs, otherwise 'false' </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.RecorderInfoType.CanRecordSOQ_CDR">
            <summary>'true' if Recorder can record on SOQ CDRs, otherwise 'false' </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.RecorderInfoType.CanDestroyPocketCDR">
            <summary>'true' if Recorder can destroy Pocket CDRs, otherwise 'false' </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.RecorderInfoType.CanDestroyDVDR_DL">
            <summary>'true' if Recorder can destroy DVDR-DLs, otherwise 'false' </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.RecorderInfoType.CanDestroyDVDR">
            <summary>'true' if Recorder can destroy DVDRs, otherwise 'false' </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.RecorderInfoType.CanDestroyCDR">
            <summary>'true' if Recorder can destroy CDRs, otherwise 'false' </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.RecorderInfoType.CanRecordPocketCDR">
            <summary>'true' if Recorder can record on Pocket CDRs, otherwise 'false' </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.RecorderInfoType.CanRecordDVDRDL">
            <summary>'true' if Recorder can record on DVDR-DLs, otherwise 'false' </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.RecorderInfoType.CanRecordDVDR">
            <summary>'true' if Recorder can record on DVDRs, otherwise 'false' </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.RecorderInfoType.CanRecordCDR">
            <summary>'true' if Recorder can record on CDRs, otherwise 'false' </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.RecorderInfoType.MaxDVDRecordingSpeed">
            <summary>Maximum speed a Recorder can record on DVDs. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.RecorderInfoType.MaxCDRecordingSpeed">
            <summary>Maximum speed a Recorder can record on CDs. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.RecorderInfoType.RecorderDiscCount">
            <summary>Number of discs recorded so far. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.RecorderInfoType.RecorderOffline">
            <summary>'true' if Recorder is offline, otherwise 'false' </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.RecorderInfoType.RecorderInquiryString">
            <summary>Serial number of the Recorder, etc. </summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.PrinterInfoType">
            <summary>
Represents possible types of Printer information returned with ProductionServer.GetPrinterInfo() method.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.PrinterInfoType.PrinterInkjetYellowLevel">
            <summary>Percent of yellow ink remaining, only 360i and 480i printers. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.PrinterInfoType.PrinterInkjetMagentaLevel">
            <summary>Percent of magenta ink remaining, only 360i and 480i printers. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.PrinterInfoType.PrinterInkjetCyanLevel">
            <summary>Percent of cyan ink remaining, only 360i and 480i printers. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.PrinterInfoType.PrinterInkjetBlackLevel">
            <summary>Percent of black ink remaining, only 360i and 480i printers. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.PrinterInfoType.PrinterRetransferSheetPanelsRemaining">
            <summary>Number of Everest printer retransfer sheet panels still available for prints. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.PrinterInfoType.PrinterRibbonPanelSetsRemaining">
            <summary>Number of Everest printer panel sets still available for prints. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.PrinterInfoType.PrinterDiscCount">
            <summary>Number of discs printed so far. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.PrinterInfoType.PrinterLabelsRemaining">
            <summary>Number of prints left with the current ribbon or ink. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.PrinterInfoType.PrinterOffline">
            <summary>'true' if Printer is offline, otherwise 'false' </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.PrinterInfoType.PrinterInquiryString">
            <summary>Serial number of the Printer, etc. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.PrinterInfoType.PrinterRibbon">
            <summary>
	Requests the ribbon type, which could be:
	<list><item>'Mono'</item><item>'Color'</item><item>'CMY-White'</item><item>'Bi-color'</item></list></summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.PrinterInfoType.PrinterType">
            <summary>
	Requests the type of the Printer, which could be:
	<list><item>'EVEREST'</item><item>'EVEREST-II'</item><item>'EVEREST-III'</item><item>'PRISM'</item><item>'RIMAGE 480I'</item><item>'RIMAGE 360I'</item></list></summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.MailslotInfoType">
            <summary>
Represents possible types of Mailslot information returned with ProductionServer.GetMailslotInfo() method.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.MailslotInfoType.MailslotAvailableSettings">
            <summary>A comma delimited list of possible mailslot settings a Mailslot can be set to. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.MailslotInfoType.MailslotNumberOfSlots">
            <summary>Indicates the number of individual mailslots. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.MailslotInfoType.MailslotLevel">
            <summary>Indicates mailslot percent full. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.MailslotInfoType.MailslotUsage">
            <summary>
	One of the following choices:
	<list><item>ServerParamValues.MailslotUsageOutput</item><item>ServerParamValues.MailslotUsageOutputReject</item><item>ServerParamValues.MailslotUsageReject</item><item>ServerParamValues.MailslotUsageReservedOutput</item><item>ServerParamValues.MailslotUsageDoNotUse</item></list></summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.BinInfoType">
            <summary>
Represents possible types of Bin information returned with ProductionServer.GetBinInfo() method.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.BinInfoType.BinAvailableSettings">
            <summary>A comma delimited list of possible bin settings a Bin can be set to. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.BinInfoType.BinDiscsRemaining">
            <summary>Indicates number of discs in the bin. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.BinInfoType.BinLevel">
            <summary>Indicates bin percent full. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.BinInfoType.BinUsage">
            <summary>
	One of the following choices:
	<list><item>ServerParamValues.BinUsageInput</item><item>ServerParamValues.BinUsageInputOutput</item><item>ServerParamValues.BinUsageCDRInputOnly</item><item>ServerParamValues.BinUsageDVDRInputOnly</item><item>ServerParamValues.BinUsageOutput</item><item>ServerParamValues.BinUsageOutputReject</item><item>ServerParamValues.BinUsageReject</item><item>ServerParamValues.BinUsageCollate</item><item>ServerParamValues.BinUsageReservedInput</item><item>ServerParamValues.BinUsageDVDR_DLInputOnly</item><item>ServerParamValues.BinUsageSOQ_CDRInputOnly</item><item>ServerParamValues.BinUsageSOQ_DVDRInputOnly</item><item>ServerParamValues.BinUsageSOQ_DVDR_DLInputOnly</item><item>ServerParamValues.BinUsageDVDR_HDInputOnly</item><item>ServerParamValues.BinUsageDVDR_BDInputOnly</item></list></summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.AutoloaderInfoType">
            <summary>
Represents possible types of Autoloader information returned with ProductionServer.GetAutoloaderInfo() method.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.AutoloaderInfoType.AutoloaderAvailableMediaSizes">
            <summary>A comma delimited list of possible media sizes an Autoloader can be set to. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.AutoloaderInfoType.AutoloaderAvailableMediaTypes">
            <summary>A comma delimited list of possible media types an Autoloader can be set to. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.AutoloaderInfoType.AutoloaderPerfectPrint">
            <summary>'true' if Autoloader supports the Perfect Print feature, otherwise 'false' </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.AutoloaderInfoType.AutoloaderOffline">
            <summary>'true' if Autoloader is offline, otherwise 'false' </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.AutoloaderInfoType.AutoloaderInquiryString">
            <summary>Serial number of the Autoloader, etc. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.AutoloaderInfoType.AutoloaderType">
            <summary>Requests the type of the Autoloader, which could be 'Protege', 'Rimage 7100', or 'Rimage 8100', etc. </summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.ProductionServerInfoType">
            <summary>
Represents possible types of Production server information returned with ProductionServer.GetProductionInfo() method.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerInfoType.MotherboardVersion">
            <summary>Returns the model and version of the PC motherboard ePS is running on. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerInfoType.DvdProtectCapable">
            <summary>'true' if Production server has DVD-Protect functionality, else 'false'. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerInfoType.OverlapRecordingCapable">
            <summary>'true' if Production server has orverlap recording functionality, else 'false'. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerInfoType.OrderSetCapable">
            <summary>'true' if Production server is able to process order sets (spanned discs), else 'false'. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerInfoType.VerifyChecksumDLLId">
            <summary>Verify checksum dll Id. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerInfoType.IsVerifyChecksumDLLReady">
            <summary>'true' if verify checksum dll is available to Production server, else 'false'. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerInfoType.CopiesRejected">
            <summary>Number of discs rejected by Production server since the startup of the server. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerInfoType.CopiesProduced">
            <summary>Number of discs completed by Production server since the startup of the server. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ProductionServerInfoType.CanStream">
            <summary>'true' if Production server is able to stream orders, else 'false'. </summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.ImagingServerInfoType">
            <summary>
Represents possible types of Imaging server information returned with ImagingServer.GetImagingInfo() method.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ImagingServerInfoType.WaitForSpace">
            <summary>
	WaitForSpace causes the Imaging server to wait for the image size plus the amount of free space specified in Mbytes to be available before the image is made.
	Value of -1 means return error if not enough space.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ImagingServerInfoType.Overwrite">
            <summary>If 'true' then Imaging server allows existing image files to be overwritten with new ones, if 'false' then this condition results in error. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ImagingServerInfoType.ImagesRejected">
            <summary>Number of images rejected by Imaging server since the startup of the server. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ImagingServerInfoType.ImagesWritten">
            <summary>Number of images written by Imaging server since the startup of the server. </summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.ServerInfoType">
            <summary>
Represents possible types of server information returned with Server.GetInfo() method.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ServerInfoType.SoftwareSuiteVersion">
            <summary>Version of the installed Rimage software suite on the computer a server is running on. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ServerInfoType.OsVersion">
            <summary>Version of Windows a server is running on. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ServerInfoType.IsService">
            <summary>'true' if a server is running as a Windows service, 'false' otherwise. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ServerInfoType.SystemFolder">
            <summary>UNC path to the Rimage System Folder (RSF) that a server uses. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ServerInfoType.MessagingPort">
            <summary>Computer TCP/IP port eMS server is listening on. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ServerInfoType.MessagingHost">
            <summary>Computer name eMS server is running on. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ServerInfoType.Cluster">
            <summary>Name of the messaging cluster(queue) a server is picking orders from. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ServerInfoType.Hostname">
            <summary>Computer name the server is running on. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ServerInfoType.SoftwareVersion">
            <summary>Version of the running server software. </summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.ServerInfoRefreshType">
            <summary>
Represents possible types of server information that can be proactively refreshed with Server.RefreshInfo() method.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ServerInfoRefreshType.RefreshAdaptiveTracingInfo">
            <summary>Refreshes the current Adaptive tracing diagnostics information. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ServerInfoRefreshType.RefreshCommandLineSwitches">
            <summary>Refreshes the current list of command line switches. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ServerInfoRefreshType.RefreshSessionLog">
            <summary>Refreshes the current end of session log list. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ServerInfoRefreshType.RefreshAutoloaderInfo">
            <summary>Refreshes the current Autoloader information. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ServerInfoRefreshType.RefreshActiveOrders">
            <summary>Refreshes the current list of orders on a server. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ServerInfoRefreshType.RefreshBasicInfo">
            <summary>Refreshes basic server status. </summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.ServerOrderStageType">
            <summary>
Represents possible stages a server order can be in.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ServerOrderStageType.CompletedStage">
            <summary>An order is completed. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ServerOrderStageType.Cancelling">
            <summary>An order is in the process of being cancelled. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ServerOrderStageType.Segment">
            <summary>An order is a segmented order and the server is waiting for the next segment. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ServerOrderStageType.Suspended">
            <summary>An order is suspended, can be resumed later. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ServerOrderStageType.Suspending">
            <summary>An order is in the process of being suspended. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ServerOrderStageType.Reading">
            <summary>A master disc is being read. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ServerOrderStageType.Mapping">
            <summary>A master disc is being read. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ServerOrderStageType.Printing">
            <summary>A label is being printed on a disc for an order. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ServerOrderStageType.Destroying">
            <summary>A disc is being destroyed, this could happen for a variety of reasons. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ServerOrderStageType.Fixating">
            <summary>A disc is at the end of being recorded for an order. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ServerOrderStageType.Recording">
            <summary>A disc is being recorded for an order. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ServerOrderStageType.Downloading">
            <summary>Data for an order is being received by the Production server. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ServerOrderStageType.Imaging">
            <summary>Order is in the imaging stage on the Imaging server. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ServerOrderStageType.Busy">
            <summary>Order is waiting for resources on a server. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ServerOrderStageType.Waiting">
            <summary>Order is waiting for resources on a server. </summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.ServerOrderStateType">
            <summary>
Represents possible states a server order can be in.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ServerOrderStateType.InProcess">
            <summary>Order is being worked on by a server. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ServerOrderStateType.Failed">
            <summary>Order failed processing on the server. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ServerOrderStateType.Cancelled">
            <summary>Order has been cancelled by the user. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ServerOrderStateType.Completed">
            <summary>Order is finished successfully. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ServerOrderStateType.Pending">
            <summary>Order is waiting to be picked up by a server for processing. </summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.ServerAlertStateType">
            <summary>
Represents possible states a server alert can be in.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ServerAlertStateType.AlertAcknowledged">
            <summary>This alert has been addressed and is not active any more.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ServerAlertStateType.AlertPosted">
            <summary>This is an active alert and has not been addressed yet.</summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.ServerStateType">
            <summary>
Represents possible states a server can be in.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ServerStateType.ServerShutdownPending">
            <summary>Server is in the process of shutting down. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ServerStateType.ServerPaused">
            <summary>Server is running, but is not processing orders. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ServerStateType.ServerPausePending">
            <summary>Server is in the process of pausing. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ServerStateType.ServerActive">
            <summary>Server is running and processing orders. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ServerStateType.ServerStartPending">
            <summary>Server is starting. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ServerStateType.ServerOffline">
            <summary>Server is not running. </summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.ServerOrderType">
            <summary>
Represents possible server order types in the Rimage system.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ServerOrderType.OrderSetType">
            <summary>Identifies the OrderSet order. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ServerOrderType.ProductionOrderType">
            <summary>Identifies the Production order. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ServerOrderType.ImagingOrderType">
            <summary>Identifies the Imaging order. </summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.ServerNotificationType">
            <summary>
Represents the types of alerts that are possible in the Rimage system.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ServerNotificationType.ServerErrorType">
            <summary>Identifies an Error from the Rimage system. This is more severe than an Alert. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ServerNotificationType.ServerAlertType">
            <summary>Identifies an Alert from the Rimage system. </summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.ServerType">
            <summary>
  Represents possible server types in the Rimage system.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ServerType.ProductionServerType">
            <summary>Identifies the Production server. </summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ServerType.ImagingServerType">
            <summary>Identifies the Imaging server. </summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.ConnectionStatusType">
            <summary>
Represents possible values which can be passed into the ISessionStatusListener.OnConnectionStatus() callback method
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ConnectionStatusType.ConnectionBroken">
            <summary>
Event signifying that a connection to the messaging server is no longer available.
The reason can be that the messaging server shut down, network became unavailable, etc.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ConnectionStatusType.Connected">
            <summary>Event signifying that the client application connected to a messaging server.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.ConnectionStatusType.Disconnected">
            <summary>Event signifying that the client application disconnected from a messaging server.</summary>
        </member>
        <member name="T:Rimage.Rapid.Dotnet.Api.CallbackOnMainUIThread">
            <summary>
Enumeration specifically to signify whether the API calls the
applicaion Session or Job status listeners on the application's
Main UI thread or the API worker thread.
</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.CallbackOnMainUIThread.True">
            <summary>Callback on the API's worker thread.</summary>
        </member>
        <member name="F:Rimage.Rapid.Dotnet.Api.CallbackOnMainUIThread.False">
            <summary>Callback on the main UI thread.</summary>
        </member>
        <member name="T:Rimage.Rapid.Api.CopyJobParamType">
            <summary>ReadJobParamType are keys for CD Text File parameters. They are used in SetProductionParam() and
GetProductionParam() in ProductionOnlyJob and ImageAndRecordJob, and their dervied classes.
</summary>
        </member>
        <member name="F:ReadSpeedParam">
            <summary>Specifies the speed of writing, it can be one of the following values:
<list><item> 1</item><item> 2</item><item> 4</item><item> 8</item><item> Maximum</item></list>	
The default is Maximum.
</summary>
        </member>
        <member name="F:VerifyChecksumParam">
            <summary>Parameter key to provide a 64-bit hexadecimal value used to checksum the master and copies if the Vercheck DLL (plug-in DLL for EPS) is used. 
</summary>
        </member>
        <member name="F:CDGParam">
            <summary>Parameter key to copy an audio CD as if it were a Karaoke CD (reads and records the R-W channels, where the Karaoke information resides (if present).
</summary>
        </member>
        <member name="F:RawModeParam">
            <summary>Parameter key to copy the original by reading in raw mode (CD-R only). This requires a special license to enable in EPS.
</summary>
        </member>
        <member name="F:ForceDAOParam">
            <summary>Parameter key to record the copies in disc-at-once mode even if the original is track at once or not finalized.
</summary>
        </member>
        <member name="F:DisplayMapParam">
            <summary>Parameter key to display a list of tracks: sizes and types that are on the original (if EPS GUI is enabled).  
</summary>
        </member>
        <member name="T:Rimage.Rapid.Api.ReadJobParamType">
            <summary>ReadJobParamType are keys for CD Text File parameters. They are used in SetProductionParam() and
GetProductionParam() in ProductionOnlyJob and ImageAndRecordJob, and their dervied classes.
</summary>
        </member>
        <member name="F:TerminateReadOutputToAcceptBinParam">
            <summary>Parameter key to indicate if output bin can be used as accept bin.
</summary>
        </member>
        <member name="F:TerminateReadPrintRejectLabelParam">
            <summary>Parameter key to indicate if printing eject label is required.
</summary>
        </member>
        <member name="F:TerminateReadEjectDiscParam">
            <summary>Parameter key to indicate if eject disc is required if a disc is rejected.
</summary>
        </member>
        <member name="F:MapGetBarcodeParam">
            <summary>Parameter key for setting and getting the flag of reading the barcode.
</summary>
        </member>
        <member name="T:Rimage.Rapid.Api.CDTextFileParamType">
            <summary>CDTextFileParamType are keys for CD Text File parameters. They are used in SetProductionParam() and
GetProductionParam() in ProductionOnlyJob and ImageAndRecordJob, and their dervied classes.
</summary>
        </member>
        <member name="F:CDTextFilePathUsedByServer">
            <summary>The path that the server uses to access this CD Text File.
</summary>
        </member>
        <member name="T:Rimage.Rapid.Api.MergeFileParamType">
            <summary>MergeFileParamType are keys for Merge File parameters. They are used in SetProductionParam() and
GetProductionParam() in ProductionOnlyJob and ImageAndRecordJob, and their dervied classes.
</summary>
        </member>
        <member name="F:MergeFilePathUsedByServer">
            <summary>The path that the server uses to access this Merge File.
</summary>
        </member>
        <member name="F:MergeFileHasFieldNamesParam">
            <summary>Parameter key for setting and getting the flag that Merge File Has Field Names, defaults to RAPID_FALSE. </summary>
        </member>
        <member name="F:DeleteMergeFileAfterPrintingParam">
            <summary>Parameter key for setting and getting the flag of Deleting Merge File After Printing, defaults to RAPID_FALSE. </summary>
        </member>
        <member name="T:Rimage.Rapid.Api.LabelFileParamType">
            <summary>LabelFileParamType are keys for Label File parameters. They are used in SetProductionParam() and
GetProductionParam() in ProductionOnlyJob and ImageAndRecordJob, and their dervied classes.
</summary>
        </member>
        <member name="F:LabelFilePathUsedByServer">
            <summary>The path that the server uses to access this Label File.
</summary>
        </member>
        <member name="F:BTWODBCSQLSelectStringParam">
            <summary>Parameter key for setting and getting BTW ODBC SQL Select String, required if ODBC connection is made for merge data. </summary>
        </member>
        <member name="F:BTWODBCConnectStringParam">
            <summary>Parameter key for setting and getting BTW ODBC Connect String, required if ODBC connection is made for merge data. </summary>
        </member>
        <member name="F:BTWRenderLocalCopyParam">
            <summary>Parameter key for setting and getting the flag of BTW Rendering Local Copy, defaults to RAPID_FALSE. </summary>
        </member>
        <member name="F:BTWSaveAfterRenderingParam">
            <summary>Parameter key for setting and getting the flag of BTW Saving After Rendering, optional, defaults to RAPID_FALSE. </summary>
        </member>
        <member name="F:PerfectPrintAngleParam">
            <summary>Parameter key for setting and getting the flag of Perfecting Print Angle. Note that the angle is the string form of deceimal
numbers, such as "25553.4549999". The integral part is modulized by 360 (25553 \% 360) = 353, and the decimal portion is rounded to nearest .25
(in this case, it's rounded to 0.50). So the actual angle is set to "353.50".
</summary>
        </member>
        <member name="F:DeleteLabelFileAfterPrintingParam">
            <summary>Parameter key for setting and getting the flag of Deleting Label File After Printing, defaults to RAPID_FALSE. </summary>
        </member>
        <member name="T:Rimage.Rapid.Api.LabelType">
            <summary>LabelType are values for  for Label File. They are used in SetLabelFile() in ProductionOnlyJob and ImageAndRecordJob, and their dervied classes.
</summary>
        </member>
        <member name="F:BTWODBCLabelType">
            <summary> Represents BTW with ODBC label file. </summary>
        </member>
        <member name="F:PCLLabelType">
            <summary> Represents PCL label file. </summary>
        </member>
        <member name="F:PDFLabelType">
            <summary> Represents PDF label file. </summary>
        </member>
        <member name="F:BTWLabelType">
            <summary> Represents BTW label file. </summary>
        </member>
        <member name="F:AutomaticLabelType">
            <summary> When this type is set, the system will determine the label type by the file
extention provided in SetLabelFile(). 
</summary>
        </member>
        <member name="T:Rimage.Rapid.Api.FixateParamType">
            <summary>FixateParamType are keys for Production Audio Track parameters. They are used in SetProductionParam() and
SetProductionParam() in ProductionOnlyJob and ImageAndRecordJob, and their dervied classes.
</summary>
        </member>
        <member name="F:FixateUPCEANParam">
            <summary>Parameter key for setting and getting the flag of using UPCEAN, optional, defaults to RAPID_FALSE. </summary>
        </member>
        <member name="F:FixateTypeParam">
            <summary>Parameter key for setting and getting FixateType, defaults to FIXATE_TYPE_SAO. 
Possible values are:
<list><item>FIXATE_TYPE_SAO</item><item>FIXATE_TYPE_TAO</item><item>FIXATE_TYPE_SAO_SEGMENTED</item><item>FIXATE_TYPE_TAO_SEGMENTED</item><item>FIXATE_TYPE_RAW</item><item>FIXATE_TYPE_SKIP</item></list></summary>
        </member>
        <member name="F:FixateFinalizeDiscParam">
            <summary>Parameter key for setting and getting the flag of Finalizing Disc, defaults to RAPID_FALSE. </summary>
        </member>
        <member name="T:Rimage.Rapid.Api.AudioTrackParamType">
            <summary>AudioTrackParamType are keys for Production Audio Track parameters. They are used in SetAudioTrackParam() and
GetAudioTrackParam() in ProductionOnlyJob and ImageAndRecordJob, and their dervied classes.
</summary>
        </member>
        <member name="F:AudioTrackPathUsedByServer">
            <summary>The path that the server uses to access this Audio Track.
</summary>
        </member>
        <member name="F:AudioTrackHasFourChannelsParam">
            <summary>Parameter key for setting and getting the flag of Having Four Channels, defaults to RAPID_FALSE. </summary>
        </member>
        <member name="F:AudioTrackHasPreEmphasisParam">
            <summary>Parameter key for setting and getting the flag of Having Prepemphasis, defaults to RAPID_FALSE. </summary>
        </member>
        <member name="F:AudioTrackAllowCopyParam">
            <summary>Parameter key for setting and getting the flag of Allowing Copy, defaults to RAPID_FALSE. </summary>
        </member>
        <member name="F:AudioTrackHasNumberOfPregapBlocksParam">
            <summary>Parameter key for setting and getting Number of Pregap Blocks, optional. </summary>
        </member>
        <member name="F:AudioTrackNumberOfPregapBlocksToAddParam">
            <summary>Parameter key for setting and getting Number of Pregap Blocks to Add, optional. </summary>
        </member>
        <member name="F:AudioTrackISRCParam">
            <summary>Parameter key for setting and getting the flag of ISRC, optional. </summary>
        </member>
        <member name="F:DeleteAudioFileAfterRecordingParam">
            <summary>Parameter key for setting and getting the flag of Deleting Audio File AfterRecording, defaults to RAPID_FALSE. </summary>
        </member>
        <member name="F:ReservedAudioTrackNumberParam">
            <summary>Parameter key for setting and getting Reserved Audio Trac kNumber, optional. </summary>
        </member>
        <member name="T:Rimage.Rapid.Api.DataTrackParamType">
            <summary>DataTrackParamType are keys for Production Data Track parameters. They are used in SetDataTrackParam() and
GetDataTrackParam() in ProductionOnlyJob and ImageAndRecordJob, and their dervied classes.
</summary>
        </member>
        <member name="F:DeleteProtectedImageAfterRecordingParam">
            <summary>Specifies whether to to automatically delete temporary Rimage Video Protection.</summary>
        </member>
        <member name="F:DataTrackPathUsedByServer">
            <summary>The path that the server uses to access this Data Track.
</summary>
        </member>
        <member name="F:DataTrackDVDProtectParam">
            <summary>Specifies whether to apply Rimage Video Protection to this video track.</summary>
        </member>
        <member name="F:DataTrackDVDADP_TYParam">
            <summary>Parameter key for setting and getting DVD ADP Type, defaults to DATA_TRACK_DVD_ADP_TY_0. 
Possible values are DATA_TRACK_DVD_ADP_TY_0 and DATA_TRACK_DVD_ADP_TY_1.
</summary>
        </member>
        <member name="F:DataTrackDVDDualLayerSplitPointParam">
            <summary>Parameter key for setting and getting DVD Dual Layer Split Point, optional. </summary>
        </member>
        <member name="F:DataTrackVolumeIdPVDFileNameParam">
            <summary>Parameter key for setting and getting Volume ID PVD File Name, optional. </summary>
        </member>
        <member name="F:DataTrackVolumeIdUsageParam">
            <summary>Parameter key for setting and getting Volume ID Usage option, defaults to DATA_TRACK_VOLUME_ID_USAGE_EXIST. 
Possible values are:
<list><item>DATA_TRACK_VOLUME_ID_USAGE_EXIST</item><item>DATA_TRACK_VOLUME_ID_USAGE_NOT_EXIST</item><item>DATA_TRACK_VOLUME_ID_USAGE_CHANGE_TO</item><item>DATA_TRACK_VOLUME_ID_USAGE_PVD_FROM_FILE</item></list></summary>
        </member>
        <member name="F:DataTrackVolumeIdParam">
            <summary>Parameter key for setting and getting Volume ID, optional. </summary>
        </member>
        <member name="F:DataTrackVerifyChecksumParam">
            <summary>Parameter key for setting and getting the flag of Verifing Checksum, optional, defaults to RAPID_FALSE. </summary>
        </member>
        <member name="F:DataTrackDisableExtentFixupsParam">
            <summary>Parameter key for setting and getting the flag of Disabling Extent Fixups, defaults to RAPID_FALSE. </summary>
        </member>
        <member name="F:DataTrackMergeSessionsParam">
            <summary>Parameter key for setting and getting the flag of Merging Sessions, defaults to RAPID_FALSE. </summary>
        </member>
        <member name="F:DataTrackTypeParam">
            <summary>Parameter key for setting and getting Data Track type, defaults to DATA_TRACK_TYPE_MODE1. Possible values are:
<list><item>DATA_TRACK_TYPE_MODE1</item><item>DATA_TRACK_TYPE_MODE2</item><item>DATA_TRACK_TYPE_XA_FORM1</item><item>DATA_TRACK_TYPE_XA_MIXED</item><item>DATA_TRACK_TYPE_CD_I</item></list></summary>
        </member>
        <member name="F:DeleteImageFileAfterRecordingParam">
            <summary>Parameter key for setting and getting the flag for Deleting Image File After Recording, defaults to RAPID_FALSE. </summary>
        </member>
        <member name="F:ReservedDataTrackNumberParam">
            <summary>Parameter key for setting and getting Reserved Data Track Number. </summary>
        </member>
        <member name="T:Rimage.Rapid.Api.ProductionTargetParamType">
            <summary>ProductionTargetParamType are keys for Production Target parameters. They are used in SetProductionParam() and
SetProductionParam() in ProductionOnlyJob and ImageAndRecordJob, and their dervied classes.
</summary>
        </member>
        <member name="F:TargetMailslotParam">
            <summary>Parameter key for setting and getting Target Mailslot, defaults to "ANY"  </summary>
        </member>
        <member name="F:TargetInputBinParam">
            <summary>Parameter key for setting and getting Target Input Bin, defaults to "ANY"  </summary>
        </member>
        <member name="F:TargetAutoloaderParam">
            <summary>Parameter key for setting and getting Target Autoloader, defaults to "ANY"  </summary>
        </member>
        <member name="F:TargetProductionServerParam">
            <summary>Parameter key for setting and getting Target Production Server, defaults to "ANY"  </summary>
        </member>
        <member name="F:TargetProductionClusterParam">
            <summary>Parameter key for setting and getting Target Production Cluster, defaults to "DefaultProductionCluster"  </summary>
        </member>
        <member name="T:Rimage.Rapid.Api.ProductionJobParamType">
            <summary>ProductionJobParamType are keys for Prouduction related parameters. They are used in SetProductionParam() and
GetProductionParam() in ProductionOnlyJob and ImageAndRecordJob, and their dervied classes.
</summary>
        </member>
        <member name="F:CustomProductionUserDataParam">
            <summary>Parameter key for setting and getting the Custom User Data, optional, used for ModifyDiscDll.  </summary>
        </member>
        <member name="F:CustomProductionUserTypeParam">
            <summary>Parameter key for setting and getting the Custom User Type, optional, used for ModifyDiscDll.  </summary>
        </member>
        <member name="F:StreamerLogonIdParam">
            <summary>Logon id of the process that started the Streamer. If the Streamer is started by eIS or DiscFlow, the logon id is 'RimageServices'
Default is 'RimageServices'.
</summary>
        </member>
        <member name="F:StreamerExternalParam">
            <summary>Flag to indicate how Production Server uses Streamer, false if started by the client API and true if started by eIS or DiscFlow.
Default is 'true'.
</summary>
        </member>
        <member name="F:StreamerHostParam">
            <summary>Optional parameter key for setting and getting the computer name of the streamer that Production server
will use to stream the image for recording. If this is not set no streaming will be performed. </summary>
        </member>
        <member name="F:SimulatePrintingParam">
            <summary>Parameter key for setting and getting the flag for Simulating Printing, defaults to RAPID_FALSE. </summary>
        </member>
        <member name="F:SimulateRecordingParam">
            <summary>Parameter key for setting and getting the flag for Simulating Recording, defaults to RAPID_FALSE. </summary>
        </member>
        <member name="F:CopiesParam">
            <summary>Parameter key for setting and getting number of copies, defaults to 1. </summary>
        </member>
        <member name="F:MediaSizeParam">
            <summary>Parameter key for setting and getting Media Size, defaults to MEDIA_SIZE_120MM. 
Possible values are MEDIA_SIZE_120MM and MEDIA_SIZE_80MM.
</summary>
        </member>
        <member name="F:MediaTypeParam">
            <summary>Parameter key for setting and getting Media Type, defaults to MEDIA_TYPE_CDR. Possible values are:
<list><item>MEDIA_TYPE_CDR</item><item>MEDIA_TYPE_DVDR</item><item>MEDIA_TYPE_DVDR_DL</item><item>MEDIA_TYPE_SOQ_CDR</item><item>MEDIA_TYPE_SOQ_DVDR</item><item>MEDIA_TYPE_SOQ_DVDR_DL</item><item>MEDIA_TYPE_DVDR_HD</item><item>MEDIA_TYPE_DVDR_HD_DL</item><item>MEDIA_TYPE_DVDR_BD</item><item>MEDIA_TYPE_DVDR_BD_DL</item><item>MEDIA_TYPE_DVDR_CSS</item><item>MEDIA_TYPE_DVDR_CSS_DL</item></list></summary>
        </member>
        <member name="T:Rimage.Rapid.Api.ControlParamType">
            <summary>ControlParamType are keys for Image Control Parameters. They are used in SetImageParam()
and GetImageParam() in ImageOnlyJob and ImageAndRecordJob and their derived classes. 
</summary>
        </member>
        <member name="F:WaitForSpaceParam">
            <summary>Parameter key for Waiting For Space, defaults to RAPID_FALSE.  </summary>
        </member>
        <member name="F:AllowOverwriteParam">
            <summary>Parameter key for Allowing Overwrite, defaults to RAPID_TRUE.  </summary>
        </member>
        <member name="T:Rimage.Rapid.Api.PVDParamType">
            <summary>PVDParamType are keys for PVD Parameters. They are used in SetImageParam()
and GetImageParam() in ImageOnlyJob and ImageAndRecordJob and their derived classes. 
</summary>
        </member>
        <member name="F:PVDGMTOffsetParam">
            <summary>Parameter key for PVD GMT Offset, optional.  </summary>
        </member>
        <member name="F:PVDEffectiveDateParam">
            <summary>Parameter key for PVD Effective Date, optional.  </summary>
        </member>
        <member name="F:PVDExpirationDateParam">
            <summary>Parameter key for PVD Expiration Date, optional.  </summary>
        </member>
        <member name="F:PVDBibliographyParam">
            <summary>Parameter key for PVD Bibliography, optional.  </summary>
        </member>
        <member name="F:PVDAbstractParam">
            <summary>Parameter key for PVD Abstract, optional.  </summary>
        </member>
        <member name="F:PVDApplicationParam">
            <summary>Parameter key for PVD Application, optional.  </summary>
        </member>
        <member name="F:PVDPreparerParam">
            <summary>Parameter key for PVD Preparer, optional. </summary>
        </member>
        <member name="F:PVDPublisherParam">
            <summary>Parameter key for PVD Publisher, optional.  </summary>
        </member>
        <member name="F:PVDCopyrightParam">
            <summary>Parameter key for PVD Copyright, optional.  </summary>
        </member>
        <member name="F:PVDVolumeSetParam">
            <summary>Parameter key for PVD Volume Set, optional.  </summary>
        </member>
        <member name="F:PVDSystemParam">
            <summary>Parameter key for PVD System, optional. </summary>
        </member>
        <member name="T:Rimage.Rapid.Api.VolumeNameParamType">
            <summary>FormatParamType are keys for Volume Name Parameters. They are used in SetImageParam()
and GetImageParam() in ImageOnlyJob and ImageAndRecordJob and their derived classes. 
</summary>
        </member>
        <member name="F:HFSVolumeNameParam">
            <summary>Parameter key to set and get the Volume Name, defaults to VolumeNameParam value if not specified. 
</summary>
        </member>
        <member name="F:VolumeNameParam">
            <summary>Parameter key to set and get the Volume Name, defaults to "No Label". 
</summary>
        </member>
        <member name="T:Rimage.Rapid.Api.ImageFileParamType">
            <summary>FormatParamType are keys for Edit List Parameters. They are used in SetImageParam()
and GetImageParam() in ImageOnlyJob and ImageAndRecordJob and their derived classes. 
</summary>
        </member>
        <member name="F:ImageFilePathUsedByServer">
            <summary>The path that the server uses to access this Image File.
</summary>
        </member>
        <member name="F:ImageFileSizeInMinutesParam">
            <summary>Parameter key to set and get the image file size in minutes, defaults to IMAGE_FILE_SIZE_IN_MINUTES_74. 
Possible values are:
<list><item>IMAGE_FILE_SIZE_NONE</item><item>IMAGE_FILE_SIZE_FOR_CDR_63</item><item>IMAGE_FILE_SIZE_FOR_CDR_74</item><item>IMAGE_FILE_SIZE_FOR_CDR_80</item><item>IMAGE_FILE_SIZE_FOR_DVDR</item><item>IMAGE_FILE_SIZE_FOR_DVDR_DL</item><item>IMAGE_FILE_SIZE_FOR_BD</item><item>IMAGE_FILE_SIZE_FOR_BD_DL</item><item>IMAGE_FILE_SIZE_FOR_HD</item><item>IMAGE_FILE_SIZE_FOR_HD_DL</item></list></summary>
        </member>
        <member name="F:ImageFileAddPostgapParam">
            <summary>Parameter key to determine if adding Post Gap is needed, defaults to RAPID_FALSE. 
</summary>
        </member>
        <member name="F:ImageFileIsCDXAParam">
            <summary>Parameter key to determine if the image file is a CDXA, defaults to RAPID_FALSE. 
</summary>
        </member>
        <member name="F:ImageFileTypeParam">
            <summary>Parameter key for types of image file, defaults to IMAGE_FILE_TYPE_NORMAL. Possible values are:
<list><item>IMAGE_FILE_TYPE_NORMAL</item><item>IMAGE_FILE_TYPE_POWER</item><item>IMAGE_FILE_TYPE_RIMAGE_HEADER</item></list></summary>
        </member>
        <member name="T:Rimage.Rapid.Api.EditListParamType">
            <summary>FormatParamType are keys for Edit List Parameters. They are used in SetEditListFileParam()
and GetEditListFileParam() in ImageOnlyJob and ImageAndRecordJob and their derived classes. 
</summary>
        </member>
        <member name="F:EditListPathUsedByServer">
            <summary>The path that the server uses to access this Edit List.
</summary>
        </member>
        <member name="F:EditListOverrideTimestampParam">
            <summary>Used only for ImageOnlyJob and ImageAndRecordJob and their derived classes, defaults to "CCYY-MM-DD HH:MM:SS". 
</summary>
        </member>
        <member name="F:EditListDestinationPartitionParam">
            <summary>Used only for ImageOnlyJob and ImageAndRecordJob and their derived classes, defaults to DESTINATION_PARTITION_BOTH. 
Possible values are:
<list><item>DESTINATION_PARTITION_PC</item><item>DESTINATION_PARTITION_HFS</item><item>DESTINATION_PARTITION_BOTH</item></list></summary>
        </member>
        <member name="T:Rimage.Rapid.Api.ParentFolderParamType">
            <summary>FormatParamType are keys for Parent Folder Parameters. They are used in SetParentFolderParam()
and GetParentFolderParam() in ImageOnlyJob and ImageAndRecordJob and their derived classes. 
</summary>
        </member>
        <member name="F:ParentFolderPathUsedByServer">
            <summary>The path that the server uses to access this Parent Folder.
</summary>
        </member>
        <member name="F:ParentFolderOverrideTimestampParam">
            <summary>Used only for ImageOnlyJob and ImageAndRecordJob and their derived classes, defaults to "CCYY-MM-DD HH:MM:SS". 
</summary>
        </member>
        <member name="F:ParentFolderDestinationPartitionParam">
            <summary>Used only for ImageOnlyJob and ImageAndRecordJob and their derived classes, defaults to DESTINATION_PARTITION_BOTH. 
Possible values are:
<list><item>DESTINATION_PARTITION_PC</item><item>DESTINATION_PARTITION_HFS</item><item>DESTINATION_PARTITION_BOTH</item></list></summary>
        </member>
        <member name="T:Rimage.Rapid.Api.ISORulesParamType">
            <summary>FormatParamType are keys for ISO Rules. They are used in SetImageParam()
and GetImageParam() in ImageOnlyJob and ImageAndRecordJob and their derived classes. These two parameters
are optional.
</summary>
        </member>
        <member name="F:CheckLevelsParam">
            <summary>Used only for ImageOnlyJob and ImageAndRecordJob and their derived classes, defaults to RAPID_FALSE. 
Possible values are RAPID_TRUE and RAPID_FALSE.
</summary>
        </member>
        <member name="F:AllowDirExtParam">
            <summary>Used only for ImageOnlyJob and ImageAndRecordJob and their derived classes, defaults to RAPID_TRUE. 
Possible values are RAPID_TRUE and RAPID_FALSE.
</summary>
        </member>
        <member name="F:CheckNamesParam">
            <summary>Used only for ImageOnlyJob and ImageAndRecordJob and their derived classes, defaults to RAPID_TRUE. 
Possible values are RAPID_TRUE and RAPID_FALSE.
</summary>
        </member>
        <member name="T:Rimage.Rapid.Api.FormatOptionParamType">
            <summary>FormatParamType are keys for Imaging Format Parameter Options. They are used in SetImageParam()
and GetImageParam() in ImageOnlyJob and ImageAndRecordJob and their derived classes. These two parameters
are optional.
</summary>
        </member>
        <member name="F:ExpandShortcutsParam">
            <summary>Used only for ImageOnlyJob and ImageAndRecordJob and their derived classes, defaults to RAPID_FALSE. 
Possible values are RAPID_TRUE and RAPID_FALSE.
</summary>
        </member>
        <member name="F:ZipPasswordParam">
            <summary>Creates an encrypted zip file. 
</summary>
        </member>
        <member name="F:ZipPasswordTypeParam">
            <summary>Creates encrypted zip files. Choices are 'compatible' or 'AES':
<list><item>FORMAT_ZIPPASSWORDTYPE_COMPATIBLE</item><item>FORMAT_ZIPPASSWORDTYPE_AES</item></list></summary>
        </member>
        <member name="F:ZipFilenameParam">
            <summary>Sets the name of the zip file, the default is 'COMP.ZIP'.
This has to be a file name only, not a full path.
</summary>
        </member>
        <member name="F:ZipWhichFilesParam">
            <summary>Gives control over zipping files in the root or not. 
'RootFilesNotZipped' means only folders from the root down are zipped. 
Possible values are
<list><item>FORMAT_ZIPWHICHFILES_ALL</item><item>FORMAT_ZIPWHICHFILES_ROOTNOTZIPPED</item><item>FORMAT_ZIPWHICHFILES_SELECTEDFILES</item></list></summary>
        </member>
        <member name="F:ExcludeEmptyFoldersParam">
            <summary>If TRUE, Removes folders with no files, especially useful for spanned volumes.
Possible values are RAPID_TRUE and RAPID_FALSE, defaults to RAPID_FALSE.
</summary>
        </member>
        <member name="F:AllowBootableCDParam">
            <summary>Used only for ImageOnlyJob and ImageAndRecordJob and their derived classes, defaults to RAPID_FALSE. 
Possible values are RAPID_TRUE and RAPID_FALSE.
</summary>
        </member>
        <member name="F:AddFilesToZipArchiveParam">
            <summary>Used only for ImageOnlyJob and ImageAndRecordJob and their derived classes, defaults to RAPID_FALSE. 
Possible values are RAPID_TRUE and RAPID_FALSE.
</summary>
        </member>
        <member name="F:AllowCaseSensitiveFileNamesParam">
            <summary>Used only for ImageOnlyJob and ImageAndRecordJob and their derived classes, defaults to RAPID_FALSE. 
Possible values are RAPID_TRUE and RAPID_FALSE.
</summary>
        </member>
        <member name="F:IgnoreBadFileNamesParam">
            <summary>Used only for ImageOnlyJob and ImageAndRecordJob and their derived classes, defaults to RAPID_FALSE. 
Possible values are RAPID_TRUE and RAPID_FALSE.
</summary>
        </member>
        <member name="F:AddVersionsToFileNamesParam">
            <summary>Used only for ImageOnlyJob and ImageAndRecordJob and their derived classes, defaults to RAPID_TRUE. 
Possible values are RAPID_TRUE and RAPID_FALSE.
</summary>
        </member>
        <member name="F:ForceShortFileNameParam">
            <summary>Used only for ImageOnlyJob and ImageAndRecordJob and their derived classes, defaults to RAPID_FALSE. 
Possible values are RAPID_TRUE and RAPID_FALSE.
</summary>
        </member>
        <member name="F:AddDotToFileNamesParam">
            <summary>Used only for ImageOnlyJob and ImageAndRecordJob and their derived classes, defaults to RAPID_TRUE. 
Possible values are RAPID_TRUE and RAPID_FALSE.
</summary>
        </member>
        <member name="F:AllowMultipleFilePathsParam">
            <summary>Used only for ImageOnlyJob and ImageAndRecordJob and their derived classes, defaults to RAPID_TRUE. 
Possible values are RAPID_TRUE and RAPID_FALSE.
</summary>
        </member>
        <member name="F:ForceUpperCaseParam">
            <summary>Used only for ImageOnlyJob and ImageAndRecordJob and their derived classes, defaults to RAPID_FALSE. 
Possible values are RAPID_TRUE and RAPID_FALSE.
</summary>
        </member>
        <member name="T:Rimage.Rapid.Api.FormatParamType">
            <summary>FormatParamType are keys for Imaging Format parameters. They are used in SetImageParam()
and GetImageParam() in ImageOnlyJob and ImageAndRecordJob and their derived classes. These two parameters
are optional.
</summary>
        </member>
        <member name="F:IsRockridgeParam">
            <summary>Used only for ImageOnlyJob and ImageAndRecordJob and their derived classes, defaults to RAPID_FALSE. 
Possible values are RAPID_TRUE and RAPID_FALSE.
</summary>
        </member>
        <member name="F:IsJolietParam">
            <summary>Used only for ImageOnlyJob and ImageAndRecordJob and their derived classes, defaults to RAPID_FALSE. 
Possible values are RAPID_TRUE and RAPID_FALSE.
</summary>
        </member>
        <member name="F:ISOAppleParam">
            <summary>Used only for ImageOnlyJob and ImageAndRecordJob and their derived classes, defaults to FORMAT_ISO_APPLE_NONE. 
Possible values are:
<list><item>FORMAT_ISO_APPLE_NONE</item><item>FORMAT_ISO_APPLE_HFS</item><item>FORMAT_ISO_APPLE_ISO_EXT</item></list></summary>
        </member>
        <member name="F:ISOLevelParam">
            <summary>Used only for ImageOnlyJob and ImageAndRecordJob and their derived classes, defaults to FORMAT_ISO_9660_L2. Possible values are:
	<list><item>FORMAT_ISO_NONE</item><item>FORMAT_ISO_9660_L1</item><item>FORMAT_ISO_9660_L2</item><item>FORMAT_ISO_9660_L3</item></list></summary>
        </member>
        <member name="F:UDFAppleParam">
            <summary>Used only for ImageOnlyJob and ImageAndRecordJob and their derived classes, defaults to FORMAT_UDF_APPLE_NONE. Possible values are:
	<list><item>FORMAT_UDF_APPLE_NONE</item><item>FORMAT_UDF_APPLE_EXT</item></list></summary>
        </member>
        <member name="F:UDFVersionParam">
            <summary>Used only for ImageOnlyJob and ImageAndRecordJob and their derived classes, defaults to FORMAT_UDF_102. Possible values are:
	<list><item>FORMAT_UDF_102</item><item>FORMAT_UDF_150</item><item>FORMAT_UDF_150_UNICODE</item><item>FORMAT_UDF_200</item><item>FORMAT_UDF_201</item><item>FORMAT_UDF_250</item><item>FORMAT_UDF_260</item></list></summary>
        </member>
        <member name="T:Rimage.Rapid.Api.ImagingTargetParamType">
            <summary>ImagingTargetParamType are keys for Imaging Target parameters. They are used in SetImageParam()
and GetImageParam() in ImageOnlyJob and ImageAndRecordJob and their derived classes. These two parameters
are optional.
</summary>
        </member>
        <member name="F:TargetImagingServerParam">
            <summary>Used only for ImageOnlyJob and ImageAndRecordJob and their derived classes. Optional, defaults to "ANY".</summary>
        </member>
        <member name="F:TargetImagingClusterParam">
            <summary>Used only for ImageOnlyJob and ImageAndRecordJob and their derived classes. Optional, defaults to "DefaultImageCluster".</summary>
        </member>
        <member name="T:Rimage.Rapid.Api.ImagingJobParamType">
            <summary>ImagingJobParamType are keys for Imaging related parameters. They are used in SetImagingParam() and
GetImagingParam() in ImageOnlyJob and ImageAndRecordJob, and their dervied classes.
</summary>
        </member>
        <member name="F:ImagerStreamerLogonIdParam">
            <summary>Logon id of the process that started the Streamer. If the Streamer is started by eIS or DiscFlow, the logon id is 'RimageServices'
Default is 'RimageServices'.
</summary>
        </member>
        <member name="F:ImagerStreamerExternalParam">
            <summary>Flag to indicate how Imager uses Streamer, false if started by the client API and true if started by eIS or DiscFlow.
Default is 'true'.
</summary>
        </member>
        <member name="F:ImagerStreamerHostParam">
            <summary>Optional parameter key for setting and getting the computer name of the streamer that Imaging server
will use to stream the data to create an image. If this is not set no streaming will be performed. 
</summary>
        </member>
        <member name="F:IncludeSpanFilesParam">
            <summary>Parameter key for IncludeSpanFiles, optional, default to RAPID_TRUE.  
If RAPID_TRUE, every disc in a spanned set includes the manifest and spanrestore files. 
If RAPID_FALSE, the manifest and spanrestore files are not included. 
If "IfSpanned" is used, the manifest and spanrestore files are included only if the spanned set is more than one disc. 
Possible values are:
<list><item>RAPID_TRUE</item><item>RAPID_FALSE</item><item>"IfSpanned"</item></list></summary>
        </member>
        <member name="F:SplitFileIfOverParam">
            <summary>SplitFileIfOver allows the caller to specify a file size in bytes.</summary>
            <remarks>Files under this size will never be split. Files over this size will only be split if they fall on a volume boundary.</remarks>
        </member>
        <member name="F:AllowSpanningParam">
            <summary>Parameter key for setting and getting the allow spanning flag.</summary>
Possible values are RAPID_TRUE and RAPID_FALSE, RAPID_FALSE is default.
<remarks>IImageOptions.AllowSpanning() and IImageOptions.IsSpanning() methods are equivalent. </remarks></member>
        <member name="F:CustomImagingUserDataParam">
            <summary>Parameter key for setting and getting the Custom User Data, optional, used for ModifyImageDll.  </summary>
        </member>
        <member name="F:CustomImagingUserTypeParam">
            <summary>Parameter key for setting and getting the Custom User Type, optional, used for ModifyImageDll.  </summary>
        </member>
        <member name="T:Rimage.Rapid.Api.JobParamType">
            <summary>JobParamType are keys for Job related parameters. They are used in SetJobParam()
in the Job class.
</summary>
        </member>
        <member name="F:DeleteDurableJobFileAfterFinishingParam">
            <summary>Applies to Durable jobs only. Parameter key for setting and getting the the flag to indicate if the user wants RAPID to delete the durable job file 
after job COMPLETED, CANCELED or FAILED. This parameter is defauled to 'TRUE' or not set.  If this parameter is set to 'FALSE', 
the job file would not be removed until the user calls RemoveFinsihedJobs().
</summary>
        </member>
        <member name="F:EmailAddressParam">
            <summary>Parameter key for setting and getting the Email Address of a job. This parameter is optional to a Job. </summary>
        </member>
        <member name="F:PriorityParam">
            <summary>Parameter key for setting and getting the Priority of a job, defaults to PRIORITY_NORMAL. Possible values are:
<list><item> PRIORITY_LOW</item><item> PRIORITY_NORMAL</item><item> PRIORITY_HIGH</item></list></summary>
        </member>
        <member name="F:OriginatorParam">
            <summary>Parameter key for setting and getting the Originator of a job. This parameter is optional to a Job. </summary>
        </member>
        <member name="F:ClientIdParam">
            <summary>Parameter key for setting and getting the Client ID of a job. </summary>
        </member>
        <member name="T:Rimage.Rapid.Api.JobStateType">
            <summary>JobStateType identifies possible job state. The GetJobState() of the JobStatus
class returns the state of the current job.
</summary>
        </member>
        <member name="F:JobFailed">
            <summary>The state of a job after the job fails. </summary>
        </member>
        <member name="F:JobCancelled">
            <summary>The state of a job after the job is cancelled. </summary>
        </member>
        <member name="F:JobCompleted">
            <summary>The state of a job after a successful completion. </summary>
        </member>
        <member name="F:JobInProcess">
            <summary>The state of a job after submission and before it is JobCompleted, or JobCancelled, or JobFailed. </summary>
        </member>
        <member name="F:JobSubmittedForProduction">
            <summary>The state of a job after it is submitted for production. </summary>
        </member>
        <member name="F:JobSubmittedForImaging">
            <summary>The state of a job after it is submitted for imaging.</summary>
        </member>
        <member name="F:JobNotStarted">
            <summary>The default state of a job right after the creation. </summary>
        </member>
        <member name="F:UserImageAndRecordJobType1">
            <summary>User Job types, ranging from UserImageAndRecordJobType1 to UserImageAndRecordJobTypeLast. The user Job class
must be derived from ImageAndRecordJob.</summary>
        </member>
        <member name="F:HFSJobType">
            <summary>Job type for predefined HFSJob. </summary>
        </member>
        <member name="F:BlueBookJobType">
            <summary>Job type for predefined BlueBookJob. </summary>
        </member>
        <member name="F:HybridJobType">
            <summary>Job type for predefined HybridJob. </summary>
        </member>
        <member name="F:UDFJobType">
            <summary>Job type for predefined UDFJob. </summary>
        </member>
        <member name="F:ISOJobType">
            <summary>Job type for predefined ISOJob. </summary>
        </member>
        <member name="F:ImageAndRecordJobType">
            <summary>Job type for predefined ImageAndRecordJob. </summary>
        </member>
        <member name="F:UserProductionOnlyJobType1">
            <summary>User Job types, ranging from UserProductionOnlyJobType1 to UserProductionOnlyJobTypeLast. The user Job class
must be derived from ProductionOnlyJob.</summary>
        </member>
        <member name="F:CopyJobType">
            <summary>Job type for predefined Copy Job. </summary>
        </member>
        <member name="F:ReadJobType">
            <summary>Job type for predefined Read Job. </summary>
        </member>
        <member name="F:FromImageJobType">
            <summary>Job type for predefined FromImageJob. </summary>
        </member>
        <member name="F:BlueBookFromImageJobType">
            <summary>Job type for predefined BlueBookFromImageJob. </summary>
        </member>
        <member name="F:LabelOnlyJobType">
            <summary>Job type for predefined LabelOnlyJob. </summary>
        </member>
        <member name="F:AudioJobType">
            <summary>Job type for predefined AudioJob. </summary>
        </member>
        <member name="F:ProductionOnlyJobType">
            <summary>Job type for predefined ProductionOnlyJob. </summary>
        </member>
        <member name="F:UserImageOnlyJobType1">
            <summary>User Job types, ranging from UserImageOnlyJobType1 to UserImageOnlyJobTypeLast. The user Job class
must be derived from ImageOnlyJob.</summary>
        </member>
        <member name="F:HFSImageOnlyJobType">
            <summary>Job type for predefined HFSImageOnlyJob. </summary>
        </member>
        <member name="F:ISOImageOnlyJobType">
            <summary>Job type for predefined ISOImageOnlyJob. </summary>
        </member>
        <member name="F:HybridImageOnlyJobType">
            <summary>Job type for predefined HybridImageOnlyJob. </summary>
        </member>
        <member name="F:UDFImageOnlyJobType">
            <summary>Job type for predefined UDFImageOnlyJob. </summary>
        </member>
        <member name="F:ImageOnlyJobType">
            <summary>Job type for predefined ImageOnlyJob. </summary>
        </member>
        <member name="T:Rimage.Rapid.Api.DiscTrackType">
            <summary>
TrackType is used by ReadJob. Track type is returned by ReadJob.GetTrackType().
</summary>
        </member>
        <member name="F:TrackTypeMode2Form1">
            <summary> Blue Book variation - no longer supported, but retain placeholder. </summary>
        </member>
        <member name="F:TrackTypeXAMixed">
            <summary> mode 2 interleaved form 1 and form 2.</summary>
        </member>
        <member name="F:TrackTypeXAForm2">
            <summary> mode 2 form 2. </summary>
        </member>
        <member name="F:TrackTypeXAForm1">
            <summary> mode 2 form 1. </summary>
        </member>
        <member name="T:Rimage.Rapid.Api.ReadJobXmlStringType">
            <summary>
Enumeration specifically to signify which original ReadJob XML to get in the JobStatus object.
</summary>
        </member>
        <member name="F:EndReadTrackXMLString">
            <summary>An indicator for getting the orginal Xml String of a ReadJob when terminating the read.</summary>
        </member>
        <member name="F:AllTracksToFoldersXMLString">
            <summary>An indicator for getting the orginal Xml String of a ReadJob when AllTracksToFolders is called.</summary>
        </member>
        <member name="F:AllTracksToImageFilesXMLString">
            <summary>An indicator for getting the orginal Xml String of a ReadJob when AllTracksToImageFiles is called.</summary>
        </member>
        <member name="F:MappingXMLString">
            <summary>An indicator for getting orginal Xml String of a ReadJob in the initial Mapping stage.</summary>
        </member>
        <member name="T:Rimage.Rapid.Api.JobXmlStringType">
            <summary>
Enumeration specifically to signify which original Job XML to get in the JobStatus object.
</summary>
        </member>
        <member name="F:OrderSetXMLString">
            <summary>An indicator for getting the orginal Production Order Set Xml String of a span Job.</summary>
        </member>
        <member name="F:ProductionXMLString">
            <summary>An indicator for getting the orginal Production Xml String of a Job.</summary>
        </member>
        <member name="F:ImageXMLString">
            <summary>An indicator for getting the orginal Image Xml String of a Job.</summary>
        </member>
        <member name="T:Rimage.Rapid.Api.ConvertToUNC">
            <summary>
Enumeration specifically to signify whether to convert 
a file path to its UNC representation or to leave it alone.
</summary>
        </member>
        <member name="F:UNCTrue">
            <summary>Convert to UNC.</summary>
        </member>
        <member name="F:UNCFalse">
            <summary>Do NOT convert to UNC.</summary>
        </member>
        <member name="T:Rimage.Rapid.Api.DiagnosticsParamType">
            <summary>
Represents possible types of settings returned with ProductionServer.GetProductionParam(DiagnosticsParamType) and set with ProductionServer.SetProductionParam(DiagnosticsParamType) methods.
</summary>
        </member>
        <member name="F:DisableAdaptiveTracingParam">
            <summary>The value is either RAPID_TRUE or RAPID_FALSE, defaults to RAPID_FALSE</summary>
        </member>
        <member name="F:EnableRecordSpeedLogsParam">
            <summary>The value is either RAPID_TRUE or RAPID_FALSE, defaults to RAPID_FALSE</summary>
        </member>
        <member name="F:AddOrderNotTakenReasonToSessionLogParam">
            <summary>The value is either RAPID_TRUE or RAPID_FALSE, defaults to RAPID_FALSE</summary>
        </member>
        <member name="F:AddUnderrunsToSessionLogParam">
            <summary>The value is either RAPID_TRUE or RAPID_FALSE, defaults to RAPID_FALSE</summary>
        </member>
        <member name="F:AddTimingToSessionLogParam">
            <summary>The value is either RAPID_TRUE or RAPID_FALSE, defaults to RAPID_FALSE</summary>
        </member>
        <member name="F:MaxSessionLogFileSizeParam">
            <summary>Maximum Session log file size in MB</summary>
        </member>
        <member name="F:EnableStartupTracingParam">
            <summary>The value is either RAPID_TRUE or RAPID_FALSE, defaults to RAPID_FALSE</summary>
        </member>
        <member name="F:MaxJobTraceFileSizeParam">
            <summary>Maximum Job trace file size in MB</summary>
        </member>
        <member name="F:EnableJobTracingParam">
            <summary>The value is either RAPID_TRUE or RAPID_FALSE, defaults to RAPID_FALSE</summary>
        </member>
        <member name="F:MaxXmlTraceFileSizeParam">
            <summary>Maximum Xml trace file size in MB</summary>
        </member>
        <member name="F:EnableAllXmlOrderStatusParam">
            <summary>The value is either RAPID_TRUE or RAPID_FALSE, defaults to RAPID_FALSE</summary>
        </member>
        <member name="F:EnableXmlTracingParam">
            <summary>The value is either RAPID_TRUE or RAPID_FALSE, defaults to RAPID_FALSE</summary>
        </member>
        <member name="F:MaxEverestTraceFileSizeParam">
            <summary>Maximum Everest trace file size in MB</summary>
        </member>
        <member name="F:EnableEverestTracingParam">
            <summary>The value is either RAPID_TRUE or RAPID_FALSE, defaults to RAPID_FALSE</summary>
        </member>
        <member name="F:MaxSerialTraceFileSizeParam">
            <summary>Maximum Serial trace file size in MB</summary>
        </member>
        <member name="F:EnableHiResSerialTimingParam">
            <summary>The value is either RAPID_TRUE or RAPID_FALSE, defaults to RAPID_FALSE</summary>
        </member>
        <member name="F:EnableSerialTracingParam">
            <summary>The value is either RAPID_TRUE or RAPID_FALSE, defaults to RAPID_FALSE</summary>
        </member>
        <member name="F:MaxScsiTraceFileSizeParam">
            <summary>Maximum Scsi trace file size in MB</summary>
        </member>
        <member name="F:EnableHiResScsiTimingParam">
            <summary>The value is either RAPID_TRUE or RAPID_FALSE, defaults to RAPID_FALSE</summary>
        </member>
        <member name="F:EnableScsiReadWriteTracingParam">
            <summary>The value is either RAPID_TRUE or RAPID_FALSE, defaults to RAPID_FALSE</summary>
        </member>
        <member name="F:EnableScsiTracingParam">
            <summary>The value is either RAPID_TRUE or RAPID_FALSE, defaults to RAPID_FALSE</summary>
        </member>
        <member name="T:Rimage.Rapid.Api.VerifyParamType">
            <summary>
Represents possible types of settings returned with ProductionServer.GetProductionParam(VerifyParamType) and set with ProductionServer.SetProductionParam(VerifyParamType) methods.
</summary>
        </member>
        <member name="F:UseChecksumDLLParam">
            <summary>The value is either RAPID_TRUE or RAPID_FALSE, defaults to RAPID_FALSE</summary>
        </member>
        <member name="F:DiscFrequencyParam">
            <summary>Use value "n" where every "nth" disc is verified.</summary>
        </member>
        <member name="F:EnableVerificationParam">
            <summary>The value is either RAPID_TRUE or RAPID_FALSE, defaults to RAPID_FALSE</summary>
        </member>
        <member name="T:Rimage.Rapid.Api.AutoBulkReadingParamType">
            <summary>
Represents possible types of settings returned with ProductionServer.GetProductionParam(AutoBulkReadingParamType) and set with ProductionServer.SetProductionParam(AutoBulkReadingParamType) methods.
</summary>
        </member>
        <member name="F:ExtractionFiltersParam">
            <summary>
The ExtractionFilters value should contain a semi-colon separated list of filters.
	 To select a specific file, name its full path from the root as follows:
		 "\Dir A\Dir B\Filename.ext".
	 To select a specific folder, name its full path ending with a backslash as follows:
		 "\Dir A\Dir B\". This will capture all files and sub-folders in 'Dir B'.
	 To select all files with a specific extension, use "*.ext".
	 To select all extentions of a file with a specific name, use "name.*".
	 To select all files with a specific extension under a specific folder, use "\Dir A\*.ext".
	 To select all extentions of a file with a specific name under a specific folder, use "\DirA\name.*".
</summary>
        </member>
        <member name="F:CreateFullDiscImagesParam">
            <summary>The value is either RAPID_TRUE or RAPID_FALSE, defaults to RAPID_FALSE</summary>
        </member>
        <member name="F:PutFailuresToRejectBinParam">
            <summary>The value is either RAPID_TRUE or RAPID_FALSE, defaults to RAPID_FALSE</summary>
        </member>
        <member name="F:UseISRCAsFilenameForAudioTracksParam">
            <summary>The value is either RAPID_TRUE or RAPID_FALSE, defaults to RAPID_FALSE</summary>
        </member>
        <member name="F:ImageTypeForAudioTracksParam">
            <summary>
	The value is one of the following choices, defaults to AUTO_BULK_READ_AUDIO_TRACK_PCM: 
	<list><item>AUTO_BULK_READ_AUDIO_TRACK_PCM</item><item>AUTO_BULK_READ_AUDIO_TRACK_WAV</item><item>AUTO_BULK_READ_AUDIO_TRACK_DDP</item></list></summary>
        </member>
        <member name="F:ExtractISOImagesToFoldersAndFilesParam">
            <summary>The value is either RAPID_TRUE or RAPID_FALSE, defaults to RAPID_FALSE</summary>
        </member>
        <member name="F:UseVolumeIdAsFolderNameParam">
            <summary>The value is either RAPID_TRUE or RAPID_FALSE, defaults to RAPID_FALSE</summary>
        </member>
        <member name="F:BaseFolderForImagesParam">
            <summary>Specifies the base folder for resultant images from a bulk read operation</summary>
        </member>
        <member name="T:Rimage.Rapid.Api.ReadingParamType">
            <summary>
Represents possible types of settings returned with ProductionServer.GetProductionParam(ReadingParamType) and set with ProductionServer.SetProductionParam(ReadingParamType) methods.
</summary>
        </member>
        <member name="F:AudioReadSpeedParam">
            <summary>
	The value is one of the following choices, defaults to RECORDING_SPEED_MAX: 
	<list><item>READING_SPEED_1X</item><item>READING_SPEED_2X</item><item>READING_SPEED_4X</item><item>READING_SPEED_8X</item><item>READING_SPEED_MAX</item></list></summary>
        </member>
        <member name="F:PreferredReaderParam">
            <summary>
	The value is one of the following choices, defaults to READING_PREFERRED_READER_RECORDERS: 
	<list><item>READING_PREFERRED_READER_READERS</item><item>READING_PREFERRED_READER_RECORDERS</item></list></summary>
        </member>
        <member name="T:Rimage.Rapid.Api.CachingParamType">
            <summary>
Represents possible types of settings returned with ProductionServer.GetProductionParam(CachingParamType) and set with ProductionServer.SetProductionParam(CachingParamType) methods.
</summary>
        </member>
        <member name="F:DisableStreamingParam">
            <summary>The value is either RAPID_TRUE or RAPID_FALSE, defaults to RAPID_FALSE</summary>
        </member>
        <member name="F:AllowOverlapRecordingParam">
            <summary>The value is either RAPID_TRUE or RAPID_FALSE, defaults to RAPID_FALSE</summary>
        </member>
        <member name="F:CacheDriveLettersParam">
            <summary>Specifies the drive letters to be used for recorder cache files. Specified as unseparated list, e.g. "def".</summary>
        </member>
        <member name="F:AllowStaticCachingParam">
            <summary>The value is either RAPID_TRUE or RAPID_FALSE, defaults to RAPID_FALSE</summary>
        </member>
        <member name="T:Rimage.Rapid.Api.PrintingParamType">
            <summary>
Represents possible types of settings returned with ProductionServer.GetProductionParam(PrintingParamType) and set with ProductionServer.SetProductionParam(PrintingParamType) methods.
</summary>
        </member>
        <member name="F:LowInkPercentageParam">
            <summary>Specifies the percentage at which a low ink alert is sent by ProductionServer</summary>
        </member>
        <member name="F:ErrorOnLowInkLevelParam">
            <summary>The value is either RAPID_TRUE or RAPID_FALSE, defaults to RAPID_FALSE</summary>
        </member>
        <member name="F:AcceptPrintingOrdersWithoutPrinterParam">
            <summary>The value is either RAPID_TRUE or RAPID_FALSE, defaults to RAPID_FALSE</summary>
        </member>
        <member name="F:RejectPatternParam">
            <summary>
	The value is one of the following choices, defaults to PRINTING_REJECT_PATTERN_DISABLED: 
	<list><item>PRINTING_REJECT_PATTERN_DISABLED</item><item>PRINTING_REJECT_PATTERN_ALL_REJECTED_DISCS</item><item>PRINTING_REJECT_PATTERN_RECORDING_FAILURES_ONLY</item></list></summary>
        </member>
        <member name="F:SimulatePrintingSettingParam">
            <summary>The value is either RAPID_TRUE or RAPID_FALSE, defaults to RAPID_FALSE</summary>
        </member>
        <member name="T:Rimage.Rapid.Api.RecordingParamType">
            <summary>
Represents possible types of settings returned with ProductionServer.GetProductionParam(RecordingParamType) and set with ProductionServer.SetProductionParam(RecordingParamType) methods.
</summary>
        </member>
        <member name="F:RecordingRetriesParam">
            <summary>
	Number of times ePS will retry after a recording error, before an alert will be posted.
	Valid values are -1 to 10, use -1 for infinite retries.
</summary>
        </member>
        <member name="F:PostDialogOnWrongMediaParam">
            <summary>The value is either RAPID_TRUE or RAPID_FALSE, defaults to RAPID_FALSE</summary>
        </member>
        <member name="F:DestroyFailedRecordingsParam">
            <summary>The value is either RAPID_TRUE or RAPID_FALSE, defaults to RAPID_FALSE</summary>
        </member>
        <member name="F:Allow90_100MinuteCDRParam">
            <summary>The value is either RAPID_TRUE or RAPID_FALSE, defaults to RAPID_FALSE</summary>
        </member>
        <member name="F:AddPostgapToISOParam">
            <summary>
	The value is one of the following choices, defaults to RECORDING_ADD_ISO_POSTGAP_DISABLED: 
	<list><item>RECORDING_ADD_ISO_POSTGAP_DISABLED</item><item>RECORDING_ADD_ISO_POSTGAP_IMAGES</item><item>RECORDING_ADD_ISO_POSTGAP_DISCS</item><item>RECORDING_ADD_ISO_POSTGAP_BOTH</item></list></summary>
        </member>
        <member name="F:DisableISOExtentFixupsParam">
            <summary>The value is either RAPID_TRUE or RAPID_FALSE, defaults to RAPID_FALSE</summary>
        </member>
        <member name="F:RejectNonISOParam">
            <summary>The value is either RAPID_TRUE or RAPID_FALSE, defaults to RAPID_FALSE</summary>
        </member>
        <member name="F:MaxDVDRecordingSpeedParam">
            <summary>
	The value is one of the following choices, defaults to RECORDING_SPEED_MAX: 
	<list><item>RECORDING_SPEED_1X</item><item>RECORDING_SPEED_2X</item><item>RECORDING_SPEED_4X</item><item>RECORDING_SPEED_8X</item><item>RECORDING_SPEED_12X</item><item>RECORDING_SPEED_16X</item><item>RECORDING_SPEED_24X</item><item>RECORDING_SPEED_32X</item><item>RECORDING_SPEED_40X</item><item>RECORDING_SPEED_48X</item><item>RECORDING_SPEED_52X</item><item>RECORDING_SPEED_MAX</item></list></summary>
        </member>
        <member name="F:MaxCDRecordingSpeedParam">
            <summary>
	The value is one of the following choices, defaults to RECORDING_SPEED_MAX: 
	<list><item>RECORDING_SPEED_1X</item><item>RECORDING_SPEED_2X</item><item>RECORDING_SPEED_4X</item><item>RECORDING_SPEED_8X</item><item>RECORDING_SPEED_12X</item><item>RECORDING_SPEED_16X</item><item>RECORDING_SPEED_24X</item><item>RECORDING_SPEED_32X</item><item>RECORDING_SPEED_40X</item><item>RECORDING_SPEED_48X</item><item>RECORDING_SPEED_52X</item><item>RECORDING_SPEED_MAX</item></list></summary>
        </member>
        <member name="F:UseNewMediaOnlyParam">
            <summary>The value is either RAPID_TRUE or RAPID_FALSE, defaults to RAPID_FALSE</summary>
        </member>
        <member name="F:SimulateRecordingSettingParam">
            <summary>The value is either RAPID_TRUE or RAPID_FALSE, defaults to RAPID_FALSE</summary>
        </member>
        <member name="T:Rimage.Rapid.Api.KioskModeParamType">
            <summary>
Represents possible types of settings returned with ProductionServer.GetProductionParam(KioskModeParamType) and set with ProductionServer.SetProductionParam(KioskModeParamType) methods.
</summary>
        </member>
        <member name="F:AutoRespondOnStartupParam">
            <summary>The value is either RAPID_TRUE or RAPID_FALSE, defaults to RAPID_FALSE</summary>
        </member>
        <member name="F:PrinterRecoveryParam">
            <summary>
	The value is one of the following choices, defaults to PRODUCTION_KIOSK_MODE_RETRY: 
	<list><item>PRODUCTION_KIOSK_MODE_RETRY</item><item>PRODUCTION_KIOSK_MODE_EXIT</item><item>PRODUCTION_KIOSK_MODE_DISABLE</item></list></summary>
        </member>
        <member name="F:AutoloaderRecoveryParam">
            <summary>
	The value is one of the following choices, defaults to PRODUCTION_KIOSK_MODE_RETRY: 
	<list><item>PRODUCTION_KIOSK_MODE_RETRY</item><item>PRODUCTION_KIOSK_MODE_EXIT</item><item>PRODUCTION_KIOSK_MODE_DISABLE</item></list></summary>
        </member>
        <member name="F:StartupWithoutPrinterParam">
            <summary>The value is either RAPID_TRUE or RAPID_FALSE, defaults to RAPID_FALSE</summary>
        </member>
        <member name="F:RecoverOrdersParam">
            <summary>The value is either RAPID_TRUE or RAPID_FALSE, defaults to RAPID_TRUE</summary>
        </member>
        <member name="T:Rimage.Rapid.Api.ProductionModeParamType">
            <summary>
Represents possible types of settings returned with ProductionServer.GetProductionParam(ProductionModeParamType) and set with ProductionServer.SetProductionParam(ProductionModeParamType) methods.
</summary>
        </member>
        <member name="F:VerifyOnlyModeParam">
            <summary>The value is either RAPID_TRUE or RAPID_FALSE, defaults to RAPID_FALSE</summary>
        </member>
        <member name="F:FifoModeParam">
            <summary>The value is either RAPID_TRUE or RAPID_FALSE, defaults to RAPID_FALSE</summary>
        </member>
        <member name="F:OperatingModeParam">
            <summary>
	The value is one of the following choices, defaults to PRODUCTION_OPERATING_MODE_NORMAL: 
	<list><item>PRODUCTION_OPERATING_MODE_NORMAL</item><item>PRODUCTION_OPERATING_MODE_BULK_READ</item><item>PRODUCTION_OPERATING_MODE_JOB_STREAMING</item><item>PRODUCTION_OPERATING_MODE_AUTO_BULK_READ</item></list></summary>
        </member>
        <member name="F:ServerModeParam">
            <summary>
	The value is one of the following choices, defaults to PRODUCTION_SERVER_MODE_ATTENDED: 
	<list><item>PRODUCTION_SERVER_MODE_ATTENDED</item><item>PRODUCTION_SERVER_MODE_KIOSK</item></list></summary>
        </member>
        <member name="T:Rimage.Rapid.Api.MailslotParamType">
            <summary>
Represents possible types of settings returned with ProductionServer.GetMailslotParam() and set with ProductionServer.SetMailslotParam() methods.
</summary>
        </member>
        <member name="F:MailslotSettingParam">
            <summary>
	The value is one of the following choices, defaults to MAILSLOT_USAGE_UNUSED: 
	<list><item>MAILSLOT_USAGE_OUTPUT</item><item>MAILSLOT_USAGE_OUTPUT_REJECT</item><item>MAILSLOT_USAGE_REJECT</item><item>MAILSLOT_USAGE_RESERVED_OUTPUT</item><item>MAILSLOT_USAGE_DO_NOT_USE</item></list></summary>
        </member>
        <member name="T:Rimage.Rapid.Api.BinParamType">
            <summary>
Represents possible types of settings returned with ProductionServer.GetBinParam() and set with ProductionServer.SetBinParam() methods.
</summary>
        </member>
        <member name="F:BinSettingParam">
            <summary>
	The value is one of the following choices, defaults to BIN_USAGE_INPUT: 
	<list><item>BIN_USAGE_INPUT</item><item>BIN_USAGE_INPUT_OUTPUT</item><item>BIN_USAGE_CDR_INPUT_ONLY</item><item>BIN_USAGE_DVDR_INPUT_ONLY</item><item>BIN_USAGE_OUTPUT</item><item>BIN_USAGE_OUTPUT_REJECT</item><item>BIN_USAGE_REJECT</item><item>BIN_USAGE_COLLATE</item><item>BIN_USAGE_RESERVED_INPUT</item><item>BIN_USAGE_DVDR_DL_INTPUT_ONLY</item><item>BIN_USAGE_SOQ_CDR_INTPUT_ONLY</item><item>BIN_USAGE_SOQ_DVDR_INTPUT_ONLY</item><item>BIN_USAGE_SOQ_DVDR_DL_INTPUT_ONLY</item><item>BIN_USAGE_DVDR_HD_INTPUT_ONLY</item><item>BIN_USAGE_DVDR_HD_DL_INTPUT_ONLY</item><item>BIN_USAGE_DVDR_BD_INTPUT_ONLY</item><item>BIN_USAGE_DVDR_BD_DL_INTPUT_ONLY</item><item>BIN_USAGE_DVDR_CSS_INTPUT_ONLY</item><item>BIN_USAGE_DVDR_CSS_DL_INTPUT_ONLY</item></list></summary>
        </member>
        <member name="T:Rimage.Rapid.Api.AutoloaderParamType">
            <summary>
Represents possible types of settings returned with ProductionServer.GetAutoloaderParam() and set with ProductionServer.SetAutoloaderParam() methods.
</summary>
        </member>
        <member name="F:AutoloaderMediaSizeParam">
            <summary>
	The value is one of the following choices, defaults to AUTOLOADER_MEDIA_SIZE_120MM: 
	<list><item>AUTOLOADER_MEDIA_SIZE_120MM</item><item>AUTOLOADER_MEDIA_SIZE_80MM</item></list></summary>
        </member>
        <member name="F:AutoloaderMediaTypeParam">
            <summary>
	The value is one of the following choices, defaults to AUTOLOADER_MEDIA_TYPE_CDR: 
	<list><item>AUTOLOADER_MEDIA_TYPE_CDR</item><item>AUTOLOADER_MEDIA_TYPE_DVDR</item><item>AUTOLOADER_MEDIA_TYPE_BOTH</item><item>AUTOLOADER_MEDIA_TYPE_DVDR_DL</item><item>AUTOLOADER_MEDIA_TYPE_COMBO</item><item>AUTOLOADER_MEDIA_TYPE_SOQ_CDR</item><item>AUTOLOADER_MEDIA_TYPE_SOQ_DVDR</item><item>AUTOLOADER_MEDIA_TYPE_SOQ_DVDR_DL</item><item>AUTOLOADER_MEDIA_TYPE_DVDR_HD</item><item>AUTOLOADER_MEDIA_TYPE_DVDR_HD_DL</item><item>AUTOLOADER_MEDIA_TYPE_DVDR_BD</item><item>AUTOLOADER_MEDIA_TYPE_DVDR_BD_DL</item><item>AUTOLOADER_MEDIA_TYPE_DVDR_CSS</item><item>AUTOLOADER_MEDIA_TYPE_DVDR_CSS_DL</item></list></summary>
        </member>
        <member name="T:Rimage.Rapid.Api.ServerParamType">
            <summary>
Represents possible types of settings returned with Server.GetParam() and set with Server.SetParam() methods.
</summary>
        </member>
        <member name="F:OrderStatusIntervalParam">
            <summary>Period of time in seconds a Server waits to send out the next order status, defaults to 10 seconds.</summary>
        </member>
        <member name="F:DescriptionParam">
            <summary>Description of the server </summary>
        </member>
        <member name="T:Rimage.Rapid.Api.ReaderInfoType">
            <summary>
Represents possible types of Reader information returned with ProductionServer.GetReaderInfo() method.
</summary>
        </member>
        <member name="F:CanReadDVD_BD">
            <summary>'true' if Reader can read on DVD-BDs, otherwise 'false' </summary>
        </member>
        <member name="F:CanReadDVD_HD">
            <summary>'true' if Reader can read on DVD-HDs, otherwise 'false' </summary>
        </member>
        <member name="F:CanReadDVD">
            <summary>'true' if Reader can read on DVDs, otherwise 'false' </summary>
        </member>
        <member name="F:ReaderInquiryString">
            <summary>Serial number of the Reader, etc. </summary>
        </member>
        <member name="T:Rimage.Rapid.Api.RecorderInfoType">
            <summary>
Represents possible types of Recorder information returned with ProductionServer.GetRecorderInfo() method.
</summary>
        </member>
        <member name="F:CanDestroySOQ_CDR">
            <summary>'true' if Recorder can destroy SOQ CDRs, otherwise 'false' </summary>
        </member>
        <member name="F:CanRecordDVDR_BD">
            <summary>'true' if Recorder can record on DVDR-BDs, otherwise 'false' </summary>
        </member>
        <member name="F:CanRecordDVDR_HD">
            <summary>'true' if Recorder can record on DVDR-HDs, otherwise 'false' </summary>
        </member>
        <member name="F:CanRecordSOQ_DVDR_DL">
            <summary>'true' if Recorder can record on SOQ DVDR-DLs, otherwise 'false' </summary>
        </member>
        <member name="F:CanRecordSOQ_DVDR">
            <summary>'true' if Recorder can record on SOQ DVDRs, otherwise 'false' </summary>
        </member>
        <member name="F:CanRecordSOQ_CDR">
            <summary>'true' if Recorder can record on SOQ CDRs, otherwise 'false' </summary>
        </member>
        <member name="F:CanDestroyPocketCDR">
            <summary>'true' if Recorder can destroy Pocket CDRs, otherwise 'false' </summary>
        </member>
        <member name="F:CanDestroyDVDR_DL">
            <summary>'true' if Recorder can destroy DVDR-DLs, otherwise 'false' </summary>
        </member>
        <member name="F:CanDestroyDVDR">
            <summary>'true' if Recorder can destroy DVDRs, otherwise 'false' </summary>
        </member>
        <member name="F:CanDestroyCDR">
            <summary>'true' if Recorder can destroy CDRs, otherwise 'false' </summary>
        </member>
        <member name="F:CanRecordPocketCDR">
            <summary>'true' if Recorder can record on Pocket CDRs, otherwise 'false' </summary>
        </member>
        <member name="F:CanRecordDVDRDL">
            <summary>'true' if Recorder can record on DVDR-DLs, otherwise 'false' </summary>
        </member>
        <member name="F:CanRecordDVDR">
            <summary>'true' if Recorder can record on DVDRs, otherwise 'false' </summary>
        </member>
        <member name="F:CanRecordCDR">
            <summary>'true' if Recorder can record on CDRs, otherwise 'false' </summary>
        </member>
        <member name="F:MaxDVDRecordingSpeed">
            <summary>Maximum speed a Recorder can record on DVDs. </summary>
        </member>
        <member name="F:MaxCDRecordingSpeed">
            <summary>Maximum speed a Recorder can record on CDs. </summary>
        </member>
        <member name="F:RecorderDiscCount">
            <summary>Number of discs recorded so far. </summary>
        </member>
        <member name="F:RecorderOffline">
            <summary>'true' if Recorder is offline, otherwise 'false' </summary>
        </member>
        <member name="F:RecorderInquiryString">
            <summary>Serial number of the Recorder, etc. </summary>
        </member>
        <member name="T:Rimage.Rapid.Api.PrinterInfoType">
            <summary>
Represents possible types of Printer information returned with ProductionServer.GetPrinterInfo() method.
</summary>
        </member>
        <member name="F:PrinterInkjetYellowLevel">
            <summary>Percent of yellow ink remaining, only 360i and 480i printers. </summary>
        </member>
        <member name="F:PrinterInkjetMagentaLevel">
            <summary>Percent of magenta ink remaining, only 360i and 480i printers. </summary>
        </member>
        <member name="F:PrinterInkjetCyanLevel">
            <summary>Percent of cyan ink remaining, only 360i and 480i printers. </summary>
        </member>
        <member name="F:PrinterInkjetBlackLevel">
            <summary>Percent of black ink remaining, only 360i and 480i printers. </summary>
        </member>
        <member name="F:PrinterRetransferSheetPanelsRemaining">
            <summary>Number of Everest printer retransfer sheet panels still available for prints. </summary>
        </member>
        <member name="F:PrinterRibbonPanelSetsRemaining">
            <summary>Number of Everest printer panel sets still available for prints. </summary>
        </member>
        <member name="F:PrinterDiscCount">
            <summary>Number of discs printed so far. </summary>
        </member>
        <member name="F:PrinterLabelsRemaining">
            <summary>Number of prints left with the current ribbon or ink. </summary>
        </member>
        <member name="F:PrinterOffline">
            <summary>'true' if Printer is offline, otherwise 'false' </summary>
        </member>
        <member name="F:PrinterInquiryString">
            <summary>Serial number of the Printer, etc. </summary>
        </member>
        <member name="F:PrinterRibbon">
            <summary>
	Requests the ribbon type, which could be:
	<list><item>'Mono'</item><item>'Color'</item><item>'CMY-White'</item><item>'Bi-color'</item></list></summary>
        </member>
        <member name="F:PrinterType">
            <summary>
	Requests the type of the Printer, which could be:
	<list><item>'EVEREST'</item><item>'EVEREST-II'</item><item>'EVEREST-III'</item><item>'PRISM'</item><item>'RIMAGE 480I'</item><item>'RIMAGE 360I'</item></list></summary>
        </member>
        <member name="T:Rimage.Rapid.Api.MailslotInfoType">
            <summary>
Represents possible types of Mailslot information returned with ProductionServer.GetMailslotInfo() method.
</summary>
        </member>
        <member name="F:MailslotAvailableSettings">
            <summary>A comma delimited list of possible mailslot settings a Mailslot can be set to. </summary>
        </member>
        <member name="F:MailslotNumberOfSlots">
            <summary>Indicates the number of individual mailslots. </summary>
        </member>
        <member name="F:MailslotLevel">
            <summary>Indicates mailslot percent full. </summary>
        </member>
        <member name="F:MailslotUsage">
            <summary>
	One of the following choices: 
	<list><item>MAILSLOT_USAGE_OUTPUT</item><item>MAILSLOT_USAGE_OUTPUT_REJECT</item><item>MAILSLOT_USAGE_REJECT</item><item>MAILSLOT_USAGE_RESERVED_OUTPUT</item><item>MAILSLOT_USAGE_DO_NOT_USE</item></list></summary>
        </member>
        <member name="T:Rimage.Rapid.Api.BinInfoType">
            <summary>
Represents possible types of Bin information returned with ProductionServer.GetBinInfo() method.
</summary>
        </member>
        <member name="F:BinAvailableSettings">
            <summary>A comma delimited list of possible bin settings a Bin can be set to. </summary>
        </member>
        <member name="F:BinDiscsRemaining">
            <summary>Indicates number of discs in the bin. </summary>
        </member>
        <member name="F:BinLevel">
            <summary>Indicates bin percent full. </summary>
        </member>
        <member name="F:BinUsage">
            <summary>
	One of the following choices: 
	<list><item>BIN_USAGE_INPUT</item><item>BIN_USAGE_INPUT_OUTPUT</item><item>BIN_USAGE_CDR_INPUT_ONLY</item><item>BIN_USAGE_DVDR_INPUT_ONLY</item><item>BIN_USAGE_OUTPUT</item><item>BIN_USAGE_OUTPUT_REJECT</item><item>BIN_USAGE_REJECT</item><item>BIN_USAGE_COLLATE</item><item>BIN_USAGE_RESERVED_INPUT</item><item>BIN_USAGE_DVDR_DL_INTPUT_ONLY</item><item>BIN_USAGE_SOQ_CDR_INTPUT_ONLY</item><item>BIN_USAGE_SOQ_DVDR_INTPUT_ONLY</item><item>BIN_USAGE_SOQ_DVDR_DL_INTPUT_ONLY</item><item>BIN_USAGE_DVDR_HD_INTPUT_ONLY</item><item>BIN_USAGE_DVDR_BD_INTPUT_ONLY</item></list></summary>
        </member>
        <member name="T:Rimage.Rapid.Api.AutoloaderInfoType">
            <summary>
Represents possible types of Autoloader information returned with ProductionServer.GetAutoloaderInfo() method.
</summary>
        </member>
        <member name="F:AutoloaderAvailableMediaSizes">
            <summary>A comma delimited list of possible media sizes an Autoloader can be set to. </summary>
        </member>
        <member name="F:AutoloaderAvailableMediaTypes">
            <summary>A comma delimited list of possible media types an Autoloader can be set to. </summary>
        </member>
        <member name="F:AutoloaderPerfectPrint">
            <summary>'true' if Autoloader supports the Perfect Print feature, otherwise 'false' </summary>
        </member>
        <member name="F:AutoloaderOffline">
            <summary>'true' if Autoloader is offline, otherwise 'false' </summary>
        </member>
        <member name="F:AutoloaderInquiryString">
            <summary>Serial number of the Autoloader, etc. </summary>
        </member>
        <member name="F:AutoloaderType">
            <summary>Requests the type of the Autoloader, which could be 'Protege', 'Rimage 7100', or 'Rimage 8100', etc. </summary>
        </member>
        <member name="T:Rimage.Rapid.Api.ProductionServerInfoType">
            <summary>
Represents possible types of Production server information returned with ProductionServer.GetProductionInfo() method.
</summary>
        </member>
        <member name="F:MotherboardVersion">
            <summary>Returns the model and version of the PC motherboard ePS is running on. </summary>
        </member>
        <member name="F:DvdProtectCapable">
            <summary>'true' if Production server has DVD-Protect functionality, else 'false'. </summary>
        </member>
        <member name="F:OverlapRecordingCapable">
            <summary>'true' if Production server has orverlap recording functionality, else 'false'. </summary>
        </member>
        <member name="F:OrderSetCapable">
            <summary>'true' if Production server is able to process order sets (spanned discs), else 'false'. </summary>
        </member>
        <member name="F:VerifyChecksumDLLId">
            <summary>Verify checksum dll Id. </summary>
        </member>
        <member name="F:IsVerifyChecksumDLLReady">
            <summary>'true' if verify checksum dll is available to Production server, else 'false'. </summary>
        </member>
        <member name="F:CopiesRejected">
            <summary>Number of discs rejected by Production server since the startup of the server. </summary>
        </member>
        <member name="F:CopiesProduced">
            <summary>Number of discs completed by Production server since the startup of the server. </summary>
        </member>
        <member name="F:CanStream">
            <summary>'true' if Production server is able to stream orders, else 'false'. </summary>
        </member>
        <member name="T:Rimage.Rapid.Api.ImagingServerInfoType">
            <summary>
Represents possible types of Imaging server information returned with ImagingServer.GetImagingInfo() method.
</summary>
        </member>
        <member name="F:WaitForSpace">
            <summary> 
	WaitForSpace causes the Imaging server to wait for the image size plus the amount of free space specified in Mbytes to be available before the image is made. 
	Value of -1 means return error if not enough space.
</summary>
        </member>
        <member name="F:Overwrite">
            <summary>If 'true' then Imaging server allows existing image files to be overwritten with new ones, if 'false' then this condition results in error. </summary>
        </member>
        <member name="F:ImagesRejected">
            <summary>Number of images rejected by Imaging server since the startup of the server. </summary>
        </member>
        <member name="F:ImagesWritten">
            <summary>Number of images written by Imaging server since the startup of the server. </summary>
        </member>
        <member name="T:Rimage.Rapid.Api.ServerInfoType">
            <summary>
Represents possible types of server information returned with Server.GetInfo() method.
</summary>
        </member>
        <member name="F:SoftwareSuiteVersion">
            <summary>Version of the installed Rimage software suite on the computer a server is running on. </summary>
        </member>
        <member name="F:OsVersion">
            <summary>Version of Windows a server is running on. </summary>
        </member>
        <member name="F:IsService">
            <summary>'true' if a server is running as a Windows service, 'false' otherwise. </summary>
        </member>
        <member name="F:SystemFolder">
            <summary>UNC path to the Rimage System Folder (RSF) that a server uses. </summary>
        </member>
        <member name="F:MessagingPort">
            <summary>Computer TCP/IP port eMS server is listening on. </summary>
        </member>
        <member name="F:MessagingHost">
            <summary>Computer name eMS server is running on. </summary>
        </member>
        <member name="F:Cluster">
            <summary>Name of the messaging cluster(queue) a server is picking orders from. </summary>
        </member>
        <member name="F:Hostname">
            <summary>Computer name the server is running on. </summary>
        </member>
        <member name="F:SoftwareVersion">
            <summary>Version of the running server software. </summary>
        </member>
        <member name="T:Rimage.Rapid.Api.ServerInfoRefreshType">
            <summary>
Represents possible types of server information that can be proactively refreshed with Server.RefreshInfo() method.
</summary>
        </member>
        <member name="F:RefreshAdaptiveTracingInfo">
            <summary>Refreshes the current Adaptive tracing diagnostics information. </summary>
        </member>
        <member name="F:RefreshCommandLineSwitches">
            <summary>Refreshes the current list of command line switches. </summary>
        </member>
        <member name="F:RefreshSessionLog">
            <summary>Refreshes the current end of session log list. </summary>
        </member>
        <member name="F:RefreshAutoloaderInfo">
            <summary>Refreshes the current Autoloader information. </summary>
        </member>
        <member name="F:RefreshActiveOrders">
            <summary>Refreshes the current list of orders on a server. </summary>
        </member>
        <member name="F:RefreshBasicInfo">
            <summary>Refreshes basic server status. </summary>
        </member>
        <member name="T:Rimage.Rapid.Api.ServerOrderStageType">
            <summary>
Represents possible stages a server order can be in.
</summary>
        </member>
        <member name="F:CompletedStage">
            <summary>An order is completed. </summary>
        </member>
        <member name="F:Cancelling">
            <summary>An order is in the process of being cancelled. </summary>
        </member>
        <member name="F:Segment">
            <summary>An order is a segmented order and the server is waiting for the next segment. </summary>
        </member>
        <member name="F:Suspended">
            <summary>An order is suspended, can be resumed later. </summary>
        </member>
        <member name="F:Suspending">
            <summary>An order is in the process of being suspended. </summary>
        </member>
        <member name="F:Reading">
            <summary>A master disc is being read. </summary>
        </member>
        <member name="F:Mapping">
            <summary>A master disc is being read. </summary>
        </member>
        <member name="F:Printing">
            <summary>A label is being printed on a disc for an order. </summary>
        </member>
        <member name="F:Destroying">
            <summary>A disc is being destroyed, this could happen for a variety of reasons. </summary>
        </member>
        <member name="F:Fixating">
            <summary>A disc is at the end of being recorded for an order. </summary>
        </member>
        <member name="F:Recording">
            <summary>A disc is being recorded for an order. </summary>
        </member>
        <member name="F:Downloading">
            <summary>Data for an order is being received by the Production server. </summary>
        </member>
        <member name="F:Imaging">
            <summary>Order is in the imaging stage on the Imaging server. </summary>
        </member>
        <member name="F:Busy">
            <summary>Order is waiting for resources on a server. </summary>
        </member>
        <member name="F:Waiting">
            <summary>Order is waiting for resources on a server. </summary>
        </member>
        <member name="T:Rimage.Rapid.Api.ServerOrderStateType">
            <summary>
Represents possible states a server order can be in.
</summary>
        </member>
        <member name="F:InProcess">
            <summary>Order is being worked on by a server. </summary>
        </member>
        <member name="F:Failed">
            <summary>Order failed processing on the server. </summary>
        </member>
        <member name="F:Cancelled">
            <summary>Order has been cancelled by the user. </summary>
        </member>
        <member name="F:Completed">
            <summary>Order is finished successfully. </summary>
        </member>
        <member name="F:Pending">
            <summary>Order is waiting to be picked up by a server for processing. </summary>
        </member>
        <member name="T:Rimage.Rapid.Api.ServerAlertStateType">
            <summary>
Represents possible states a server alert can be in.
</summary>
        </member>
        <member name="F:AlertAcknowledged">
            <summary>This alert has been addressed and is not active any more.</summary>
        </member>
        <member name="F:AlertPosted">
            <summary>This is an active alert and has not been addressed yet.</summary>
        </member>
        <member name="T:Rimage.Rapid.Api.ServerStateType">
            <summary>
Represents possible states a server can be in.
</summary>
        </member>
        <member name="F:ServerShutdownPending">
            <summary>Server is in the process of shutting down. </summary>
        </member>
        <member name="F:ServerPaused">
            <summary>Server is running, but is not processing orders. </summary>
        </member>
        <member name="F:ServerPausePending">
            <summary>Server is in the process of pausing. </summary>
        </member>
        <member name="F:ServerActive">
            <summary>Server is running and processing orders. </summary>
        </member>
        <member name="F:ServerStartPending">
            <summary>Server is starting. </summary>
        </member>
        <member name="F:ServerOffline">
            <summary>Server is not running. </summary>
        </member>
        <member name="T:Rimage.Rapid.Api.ServerOrderType">
            <summary>
Represents possible server order types in the Rimage system.
</summary>
        </member>
        <member name="F:OrderSetType">
            <summary>Identifies the OrderSet order. </summary>
        </member>
        <member name="F:ProductionOrderType">
            <summary>Identifies the Production order. </summary>
        </member>
        <member name="F:ImagingOrderType">
            <summary>Identifies the Imaging order. </summary>
        </member>
        <member name="T:Rimage.Rapid.Api.ServerNotificationType">
            <summary>
Represents the types of alerts that are possible in the Rimage system.
</summary>
        </member>
        <member name="F:ServerErrorType">
            <summary>Identifies an Error from the Rimage system. This is more severe than an Alert. </summary>
        </member>
        <member name="F:ServerAlertType">
            <summary>Identifies an Alert from the Rimage system. </summary>
        </member>
        <member name="T:Rimage.Rapid.Api.ServerType">
            <summary>
  Represents possible server types in the Rimage system.
</summary>
        </member>
        <member name="F:ProductionServerType">
            <summary>Identifies the Production server. </summary>
        </member>
        <member name="F:ImagingServerType">
            <summary>Identifies the Imaging server. </summary>
        </member>
        <member name="T:Rimage.Rapid.Api.ConnectionStatusType">
            <summary>
Represents possible values which can be passed into the ISessionStatusListener.OnConnectionStatus() callback method
</summary>
        </member>
        <member name="F:ConnectionBroken">
            <summary>
Event signifying that a connection to the messaging server is no longer available.
The reason can be that the messaging server shut down, network became unavailable, etc.
</summary>
        </member>
        <member name="F:Connected">
            <summary>Event signifying that the client application connected to a messaging server.</summary>
        </member>
        <member name="F:Disconnected">
            <summary>Event signifying that the client application disconnected from a messaging server.</summary>
        </member>
        <member name="T:Rimage.Rapid.Api.CallbackOnMainUIThread">
            <summary>
Enumeration specifically to signify whether the API calls the
applicaion Session or Job status listeners on the application's 
Main UI thread or the API worker thread.
</summary>
        </member>
        <member name="F:UITrue">
            <summary>Callback on the API's worker thread.</summary>
        </member>
        <member name="F:UIFalse">
            <summary>Callback on the main UI thread.</summary>
        </member>
    </members>
</doc>